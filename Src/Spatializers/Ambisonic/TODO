


* optimise the rotator; both a 2-D and a 3-D version, by summing the matrix transforms
and by replacing the trig functions where possible like we did in the encoder

* other soundfield processors, such as mirror, zoom...

* make an exciting demo for when the speakers are properly set up! also, measure the 
angles and create a speakerlayout.dat for the 4th floor.

* look at options for distance coding!

* ambisonic sound file player as a test app; also needs a HOA_SfPlayer and HOA_SfRecorder, 
with a defalt file-naming convention to specify which mono files are which encoded channels
Then create a demo 3rd order set of files with different transformations, for demoing.

* revise malloc/free policy and plug those leaks!

* revise ambisonicFramestream to take into account new changes to CSL and thus tidy
up the funky inheritance we currently have

* G format

* wrapper that encapsulates all the ambisonic classes and uses

HISTORY
-------

26.09.05 changed the way the decoder creates its transposed encoding matrix, by calling the 
utilities function fumaEncodingWeights for each speaker [instead of creating 
a virtual encoder]
