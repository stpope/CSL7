/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGPYTHON
#define SWIGPYTHON
#endif

#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(__GNUC__) && defined(_WIN32) && !defined(SWIG_PYTHON_NO_HYPOT_WORKAROUND)
/* Workaround for '::hypot' has not been declared', see https://bugs.python.org/issue11566 */
# include <math.h>
#endif

#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG 1
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03030000
  return (char *)PyUnicode_AsUTF8(str);
#elif PY_VERSION_HEX >= 0x03000000
  char *newstr = 0;
  str = PyUnicode_AsUTF8String(str);
  if (str) {
    char *cstr;
    Py_ssize_t len;
    if (PyBytes_AsStringAndSize(str, &cstr, &len) != -1) {
      newstr = (char *) malloc(len+1);
      if (newstr)
        memcpy(newstr, cstr, len+1);
    }
    Py_XDECREF(str);
  }
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03030000 || PY_VERSION_HEX < 0x03000000
#  define SWIG_Python_str_DelForPy3(x)
#else
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

// SWIGPY_USE_CAPSULE is no longer used within SWIG itself, but some user
// interface files check for it.
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ("swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#define Py_hash_t long
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred())
    PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    const char *tmp = SWIG_Python_str_AsChar(old_str);
    PyErr_Clear();
    Py_XINCREF(type);
    if (tmp)
      PyErr_Format(type, "%s %s", tmp, mesg);
    else
      PyErr_Format(type, "%s", mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

SWIGRUNTIME int
SWIG_Python_TypeErrorOccurred(PyObject *obj)
{
  PyObject *error;
  if (obj)
    return 0;
  error = PyErr_Occurred();
  return error && PyErr_GivenExceptionMatches(error, PyExc_TypeError);
}

SWIGRUNTIME void
SWIG_Python_RaiseOrModifyTypeError(const char *message)
{
  if (SWIG_Python_TypeErrorOccurred(NULL)) {
    /* Use existing TypeError to preserve stacktrace and enhance with given message */
    PyObject *newvalue;
    PyObject *type = NULL, *value = NULL, *traceback = NULL;
    PyErr_Fetch(&type, &value, &traceback);
#if PY_VERSION_HEX >= 0x03000000
    newvalue = PyUnicode_FromFormat("%S\nAdditional information:\n%s", value, message);
#else
    newvalue = PyString_FromFormat("%s\nAdditional information:\n%s", PyString_AsString(value), message);
#endif
    Py_XDECREF(value);
    PyErr_Restore(type, newvalue, traceback);
  } else {
    /* Raise TypeError using given message */
    PyErr_SetString(PyExc_TypeError, message);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    define SWIG_PYTHON_USE_GIL
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  const char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

#if PY_VERSION_HEX < 0x02070000 /* 2.7.0 */
# error "This version of SWIG only supports Python >= 2.7"
#endif

#if PY_VERSION_HEX >= 0x03000000 && PY_VERSION_HEX < 0x03020000
# error "This version of SWIG only supports Python 3 >= 3.2"
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

SWIGINTERN int
SWIG_Python_CheckNoKeywords(PyObject *kwargs, const char *name) {
  int no_kwargs = 1;
  if (kwargs) {
    assert(PyDict_Check(kwargs));
    if (PyDict_Size(kwargs) > 0) {
      PyErr_Format(PyExc_TypeError, "%s() does not take keyword arguments", name);
      no_kwargs = 0;
    }
  }
  return no_kwargs;
}

/* A functor is a function object with one single object argument */
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  int fail = data ? data->implicitconv : 0;
  if (fail)
    PyErr_SetString(PyExc_TypeError, "Implicit conversion is prohibited for explicit constructors.");
  return fail;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
      data->newraw = PyObject_GetAttrString(data->klass, "__new__");
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, "__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
      data->delargs = !(flags & (METH_O));
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_INCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_repr(SwigPyObject *v)
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

/* We need a version taking two PyObject* parameters so it's a valid
 * PyCFunction to use in swigobject_methods[]. */
SWIGRUNTIME PyObject *
SwigPyObject_repr2(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  return SwigPyObject_repr((SwigPyObject*)v);
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *type = NULL, *value = NULL, *traceback = NULL;
      PyErr_Fetch(&type, &value, &traceback);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        res = SWIG_Python_CallFunctor(destroy, tmp);
        Py_DECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(type, value, traceback);

      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) {
    return NULL;
  } else {
    SwigPyObject *sobj = (SwigPyObject *)v;
    PyObject *obj = PyBool_FromLong(sobj->own);
    if (val) {
      if (PyObject_IsTrue(val)) {
        SwigPyObject_acquire(v,args);
      } else {
        SwigPyObject_disown(v,args);
      }
    } 
    return obj;
  }
}

static PyMethodDef
swigobject_methods[] = {
  {"disown",  SwigPyObject_disown,  METH_NOARGS,  "releases ownership of the pointer"},
  {"acquire", SwigPyObject_acquire, METH_NOARGS,  "acquires ownership of the pointer"},
  {"own",     SwigPyObject_own,     METH_VARARGS, "returns/sets ownership of the pointer"},
  {"append",  SwigPyObject_append,  METH_O,       "appends another 'this' object"},
  {"next",    SwigPyObject_next,    METH_NOARGS,  "returns the next 'this' object"},
  {"__repr__",SwigPyObject_repr2,   METH_NOARGS,  "returns object representation"},
  {0, 0, 0, 0}  
};

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#else
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyObject",                       /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
      0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,                                    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((const char *)v->pack, (const char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyPacked",                       /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

static PyObject *Swig_This_global = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (Swig_This_global == NULL)
    Swig_This_global = SWIG_Python_str_FromChar("this");
  return Swig_This_global;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
      if (!SWIG_IsOK(res) && obj == Py_None) {
        if (ptr)
          *ptr = 0;
        if (PyErr_Occurred())
          PyErr_Clear();
        res = SWIG_OK;
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    swig_cast_info *tc;

    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc)
      return SWIG_ERROR;
    tc = SWIG_TypeCheck(desc,ty);
    if (tc) {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    } else {
      return SWIG_ERROR;
    }
    return SWIG_OK;
  }
}

/* Convert a packed pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
        Py_DECREF(inst);
        inst = 0;
      }
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *empty_args = PyTuple_New(0);
    if (empty_args) {
      PyObject *empty_kwargs = PyDict_New();
      if (empty_kwargs) {
        inst = ((PyTypeObject *)data->newargs)->tp_new((PyTypeObject *)data->newargs, empty_args, empty_kwargs);
        Py_DECREF(empty_kwargs);
        if (inst) {
          if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
            Py_DECREF(inst);
            inst = 0;
          } else {
            Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
          }
        }
      }
      Py_DECREF(empty_args);
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
}

SWIGRUNTIME int
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  PyObject **dictptr = _PyObject_GetDictPtr(inst);
  if (dictptr != NULL) {
    PyObject *dict = *dictptr;
    if (dict == NULL) {
      dict = PyDict_New();
      *dictptr = dict;
    }
    return PyDict_SetItem(dict, SWIG_This(), swig_this);
  }
#endif
  return PyObject_SetAttr(inst, SWIG_This(), swig_this);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      if (SWIG_Python_SetSwigThis(obj[0], obj[1]) != 0)
        return NULL;
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

SWIGRUNTIME void
SWIG_Python_DestroyModule(PyObject *obj)
{
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  Swig_This_global = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule("swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule("swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, "type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      const char *tmp = SWIG_Python_str_AsChar(old_str);
      const char *errmesg = tmp ? tmp : "Invalid error message";
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, errmesg);
      } else {
	PyErr_Format(type, "%s %s", errmesg, mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
      if (!encoded_name)
        return -1;
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



#ifdef __cplusplus
extern "C" {
#endif

/* Method creation and docstring support functions */

SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name);
SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);
SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);

#ifdef __cplusplus
}
#endif


  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_ArrayT_double_t swig_types[0]
#define SWIGTYPE_p_ArrayT_int_t swig_types[1]
#define SWIGTYPE_p_BigInteger swig_types[2]
#define SWIGTYPE_p_CSL_FFTType swig_types[3]
#define SWIGTYPE_p_FILE swig_types[4]
#define SWIGTYPE_p_Ptr swig_types[5]
#define SWIGTYPE_p_String swig_types[6]
#define SWIGTYPE_p_StringArray swig_types[7]
#define SWIGTYPE_p_a_2__float swig_types[8]
#define SWIGTYPE_p_char swig_types[9]
#define SWIGTYPE_p_csl__ADSR swig_types[10]
#define SWIGTYPE_p_csl__AR swig_types[11]
#define SWIGTYPE_p_csl__Abst_SoundFile swig_types[12]
#define SWIGTYPE_p_csl__Accessor swig_types[13]
#define SWIGTYPE_p_csl__AddOp swig_types[14]
#define SWIGTYPE_p_csl__AdditiveInstrument swig_types[15]
#define SWIGTYPE_p_csl__Allpass swig_types[16]
#define SWIGTYPE_p_csl__BinaryOp swig_types[17]
#define SWIGTYPE_p_csl__Biquad swig_types[18]
#define SWIGTYPE_p_csl__BlackmanHarrisWindow swig_types[19]
#define SWIGTYPE_p_csl__BlackmanWindow swig_types[20]
#define SWIGTYPE_p_csl__BlockResizer swig_types[21]
#define SWIGTYPE_p_csl__Buffer swig_types[22]
#define SWIGTYPE_p_csl__BufferCMap swig_types[23]
#define SWIGTYPE_p_csl__BufferContentType swig_types[24]
#define SWIGTYPE_p_csl__BufferCopyPolicy swig_types[25]
#define SWIGTYPE_p_csl__BufferStream swig_types[26]
#define SWIGTYPE_p_csl__Butter swig_types[27]
#define SWIGTYPE_p_csl__CException swig_types[28]
#define SWIGTYPE_p_csl__CGestalt swig_types[29]
#define SWIGTYPE_p_csl__CMIDIMessage swig_types[30]
#define SWIGTYPE_p_csl__CMIDIMessageType swig_types[31]
#define SWIGTYPE_p_csl__CPoint swig_types[32]
#define SWIGTYPE_p_csl__CThread swig_types[33]
#define SWIGTYPE_p_csl__CVariable swig_types[34]
#define SWIGTYPE_p_csl__Cacheable swig_types[35]
#define SWIGTYPE_p_csl__Comb swig_types[36]
#define SWIGTYPE_p_csl__CompOrCacheOscillator swig_types[37]
#define SWIGTYPE_p_csl__Controllable swig_types[38]
#define SWIGTYPE_p_csl__Convolver swig_types[39]
#define SWIGTYPE_p_csl__DBError swig_types[40]
#define SWIGTYPE_p_csl__DelayLine swig_types[41]
#define SWIGTYPE_p_csl__DomainError swig_types[42]
#define SWIGTYPE_p_csl__DynamicVariable swig_types[43]
#define SWIGTYPE_p_csl__Effect swig_types[44]
#define SWIGTYPE_p_csl__Envelope swig_types[45]
#define SWIGTYPE_p_csl__FAllpass swig_types[46]
#define SWIGTYPE_p_csl__FFT swig_types[47]
#define SWIGTYPE_p_csl__FIR swig_types[48]
#define SWIGTYPE_p_csl__FMBell swig_types[49]
#define SWIGTYPE_p_csl__FMInstrument swig_types[50]
#define SWIGTYPE_p_csl__FSine swig_types[51]
#define SWIGTYPE_p_csl__FanOut swig_types[52]
#define SWIGTYPE_p_csl__FancyFMInstrument swig_types[53]
#define SWIGTYPE_p_csl__FileIO swig_types[54]
#define SWIGTYPE_p_csl__Filter swig_types[55]
#define SWIGTYPE_p_csl__FilterSpecification swig_types[56]
#define SWIGTYPE_p_csl__FilterType swig_types[57]
#define SWIGTYPE_p_csl__Formant swig_types[58]
#define SWIGTYPE_p_csl__Freeverb swig_types[59]
#define SWIGTYPE_p_csl__FrequencyAmount swig_types[60]
#define SWIGTYPE_p_csl__HammingWindow swig_types[61]
#define SWIGTYPE_p_csl__HannWindow swig_types[62]
#define SWIGTYPE_p_csl__IFFT swig_types[63]
#define SWIGTYPE_p_csl__IO swig_types[64]
#define SWIGTYPE_p_csl__IODevice swig_types[65]
#define SWIGTYPE_p_csl__IOError swig_types[66]
#define SWIGTYPE_p_csl__IO_Status swig_types[67]
#define SWIGTYPE_p_csl__Impulse swig_types[68]
#define SWIGTYPE_p_csl__InOut swig_types[69]
#define SWIGTYPE_p_csl__InOutFlags swig_types[70]
#define SWIGTYPE_p_csl__Instrument swig_types[71]
#define SWIGTYPE_p_csl__Interleaver swig_types[72]
#define SWIGTYPE_p_csl__InterpolationPolicy swig_types[73]
#define SWIGTYPE_p_csl__JUCEIO swig_types[74]
#define SWIGTYPE_p_csl__Joiner swig_types[75]
#define SWIGTYPE_p_csl__KarplusString swig_types[76]
#define SWIGTYPE_p_csl__LineMode swig_types[77]
#define SWIGTYPE_p_csl__LineSegment swig_types[78]
#define SWIGTYPE_p_csl__LogLevel swig_types[79]
#define SWIGTYPE_p_csl__LogicError swig_types[80]
#define SWIGTYPE_p_csl__MIDIIO swig_types[81]
#define SWIGTYPE_p_csl__MIDIIn swig_types[82]
#define SWIGTYPE_p_csl__MIDIOut swig_types[83]
#define SWIGTYPE_p_csl__MIDIPlayer swig_types[84]
#define SWIGTYPE_p_csl__MemoryError swig_types[85]
#define SWIGTYPE_p_csl__MidiDeviceListEntry swig_types[86]
#define SWIGTYPE_p_csl__Mixer swig_types[87]
#define SWIGTYPE_p_csl__Model swig_types[88]
#define SWIGTYPE_p_csl__Moog swig_types[89]
#define SWIGTYPE_p_csl__MulOp swig_types[90]
#define SWIGTYPE_p_csl__Noise swig_types[91]
#define SWIGTYPE_p_csl__Notch swig_types[92]
#define SWIGTYPE_p_csl__NtoMPanner swig_types[93]
#define SWIGTYPE_p_csl__Observer swig_types[94]
#define SWIGTYPE_p_csl__Oscillator swig_types[95]
#define SWIGTYPE_p_csl__OutOfRangeError swig_types[96]
#define SWIGTYPE_p_csl__Panner swig_types[97]
#define SWIGTYPE_p_csl__Partial swig_types[98]
#define SWIGTYPE_p_csl__PartialDescriptionMode swig_types[99]
#define SWIGTYPE_p_csl__Phased swig_types[100]
#define SWIGTYPE_p_csl__PinkNoise swig_types[101]
#define SWIGTYPE_p_csl__PointMode swig_types[102]
#define SWIGTYPE_p_csl__Port swig_types[103]
#define SWIGTYPE_p_csl__ProcessingError swig_types[104]
#define SWIGTYPE_p_csl__RandEnvelope swig_types[105]
#define SWIGTYPE_p_csl__RectangularWindow swig_types[106]
#define SWIGTYPE_p_csl__RingBuffer swig_types[107]
#define SWIGTYPE_p_csl__RingBufferTap swig_types[108]
#define SWIGTYPE_p_csl__RunTimeError swig_types[109]
#define SWIGTYPE_p_csl__SHARCInstrument swig_types[110]
#define SWIGTYPE_p_csl__SHARCLibrary swig_types[111]
#define SWIGTYPE_p_csl__SHARCSpectrum swig_types[112]
#define SWIGTYPE_p_csl__Sawtooth swig_types[113]
#define SWIGTYPE_p_csl__Scalable swig_types[114]
#define SWIGTYPE_p_csl__SeekPosition swig_types[115]
#define SWIGTYPE_p_csl__Seekable swig_types[116]
#define SWIGTYPE_p_csl__Sine swig_types[117]
#define SWIGTYPE_p_csl__SndFileInstrument0 swig_types[118]
#define SWIGTYPE_p_csl__SoundCue swig_types[119]
#define SWIGTYPE_p_csl__SoundFileBuffer swig_types[120]
#define SWIGTYPE_p_csl__SoundFileFormat swig_types[121]
#define SWIGTYPE_p_csl__SoundFileMetadata swig_types[122]
#define SWIGTYPE_p_csl__SoundFileMode swig_types[123]
#define SWIGTYPE_p_csl__Splitter swig_types[124]
#define SWIGTYPE_p_csl__Square swig_types[125]
#define SWIGTYPE_p_csl__StaticVariable swig_types[126]
#define SWIGTYPE_p_csl__Status swig_types[127]
#define SWIGTYPE_p_csl__StereoWidth swig_types[128]
#define SWIGTYPE_p_csl__Stereoverb swig_types[129]
#define SWIGTYPE_p_csl__StringInstrument swig_types[130]
#define SWIGTYPE_p_csl__SumOfSines swig_types[131]
#define SWIGTYPE_p_csl__TimingError swig_types[132]
#define SWIGTYPE_p_csl__Triangle swig_types[133]
#define SWIGTYPE_p_csl__TriangularWindow swig_types[134]
#define SWIGTYPE_p_csl__UnitGenerator swig_types[135]
#define SWIGTYPE_p_csl__VAdditiveInstrument swig_types[136]
#define SWIGTYPE_p_csl__VOperator swig_types[137]
#define SWIGTYPE_p_csl__ValueError swig_types[138]
#define SWIGTYPE_p_csl__WavetableOscillator swig_types[139]
#define SWIGTYPE_p_csl__WelchWindow swig_types[140]
#define SWIGTYPE_p_csl__WhiteNoise swig_types[141]
#define SWIGTYPE_p_csl__Window swig_types[142]
#define SWIGTYPE_p_csl__Writeable swig_types[143]
#define SWIGTYPE_p_csl__testStruct swig_types[144]
#define SWIGTYPE_p_double swig_types[145]
#define SWIGTYPE_p_f_p_void__p_void swig_types[146]
#define SWIGTYPE_p_f_p_void__void swig_types[147]
#define SWIGTYPE_p_f_void__void swig_types[148]
#define SWIGTYPE_p_float swig_types[149]
#define SWIGTYPE_p_juce__ArrayT_juce__MidiMessage_t swig_types[150]
#define SWIGTYPE_p_juce__AudioIODevice swig_types[151]
#define SWIGTYPE_p_juce__AudioIODeviceCallback swig_types[152]
#define SWIGTYPE_p_juce__CriticalSection swig_types[153]
#define SWIGTYPE_p_juce__MidiBuffer swig_types[154]
#define SWIGTYPE_p_juce__MidiDeviceInfo swig_types[155]
#define SWIGTYPE_p_juce__MidiFile swig_types[156]
#define SWIGTYPE_p_juce__MidiInput swig_types[157]
#define SWIGTYPE_p_juce__MidiKeyboardState swig_types[158]
#define SWIGTYPE_p_juce__MidiMessage swig_types[159]
#define SWIGTYPE_p_juce__MidiMessageSequence swig_types[160]
#define SWIGTYPE_p_juce__MidiOutput swig_types[161]
#define SWIGTYPE_p_juce__ReferenceCountedObject swig_types[162]
#define SWIGTYPE_p_juce__SingleThreadedReferenceCountedObject swig_types[163]
#define SWIGTYPE_p_long swig_types[164]
#define SWIGTYPE_p_p_char swig_types[165]
#define SWIGTYPE_p_p_csl__Partial swig_types[166]
#define SWIGTYPE_p_p_csl__SHARCInstrument swig_types[167]
#define SWIGTYPE_p_p_csl__SHARCSpectrum swig_types[168]
#define SWIGTYPE_p_p_float swig_types[169]
#define SWIGTYPE_p_p_void swig_types[170]
#define SWIGTYPE_p_short swig_types[171]
#define SWIGTYPE_p_std__exception swig_types[172]
#define SWIGTYPE_p_std__invalid_argument swig_types[173]
#define SWIGTYPE_p_std__mapT_float_csl__LineSegment_p_std__lessT_float_t_std__allocatorT_std__pairT_float_const_csl__LineSegment_p_t_t_t swig_types[174]
#define SWIGTYPE_p_std__mapT_int_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_t_t_t swig_types[175]
#define SWIGTYPE_p_std__mapT_std__string_csl__Instrument_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__Instrument_p_t_t_t swig_types[176]
#define SWIGTYPE_p_std__mapT_std__string_csl__UnitGenerator_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__UnitGenerator_p_t_t_t swig_types[177]
#define SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t swig_types[178]
#define SWIGTYPE_p_std__mapT_unsigned_int_csl__Port_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__Port_p_t_t_t swig_types[179]
#define SWIGTYPE_p_std__mapT_unsigned_int_csl__UnitGenerator_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__UnitGenerator_p_t_t_t swig_types[180]
#define SWIGTYPE_p_std__mapT_unsigned_int_float_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_float_t_t_t swig_types[181]
#define SWIGTYPE_p_std__unique_ptrT_juce__MidiInput_t swig_types[182]
#define SWIGTYPE_p_std__unique_ptrT_juce__MidiOutput_t swig_types[183]
#define SWIGTYPE_p_std__vectorT_csl__Accessor_p_std__allocatorT_csl__Accessor_p_t_t swig_types[184]
#define SWIGTYPE_p_std__vectorT_csl__Buffer_p_std__allocatorT_csl__Buffer_p_t_t swig_types[185]
#define SWIGTYPE_p_std__vectorT_csl__CPoint_p_std__allocatorT_csl__CPoint_p_t_t swig_types[186]
#define SWIGTYPE_p_std__vectorT_csl__IODevice_p_std__allocatorT_csl__IODevice_p_t_t swig_types[187]
#define SWIGTYPE_p_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t swig_types[188]
#define SWIGTYPE_p_std__vectorT_csl__Observer_p_std__allocatorT_csl__Observer_p_t_t swig_types[189]
#define SWIGTYPE_p_std__vectorT_csl__UnitGenerator_p_std__allocatorT_csl__UnitGenerator_p_t_t swig_types[190]
#define SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t swig_types[191]
#define SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t swig_types[192]
#define SWIGTYPE_p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t swig_types[193]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[194]
#define SWIGTYPE_p_timeval swig_types[195]
#define SWIGTYPE_p_unsigned_char swig_types[196]
#define SWIGTYPE_p_unsigned_int swig_types[197]
#define SWIGTYPE_p_unsigned_long swig_types[198]
#define SWIGTYPE_p_va_list swig_types[199]
static swig_type_info *swig_types[201];
static swig_module_info swig_module = {swig_types, 200, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#ifdef SWIG_TypeQuery
# undef SWIG_TypeQuery
#endif
#define SWIG_TypeQuery SWIG_Python_TypeQuery

/*-----------------------------------------------
              @(target):= _CSL6.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__CSL6

#else
#  define SWIG_init    init_CSL6

#endif
#define SWIG_name    "_CSL6"

#define SWIGVERSION 0x040002 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


#include <typeinfo>
#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <string>


#include <stddef.h>


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = (double) PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, 0, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
    unsigned long long v;
    res = SWIG_AsVal_unsigned_SS_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  }
#endif
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    return SWIG_From_long  (static_cast< long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(ptrdiff_t) <= sizeof(long long) */
    return SWIG_From_long_SS_long  (static_cast< long long >(value));
  }
#endif
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, mant_min, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(ptrdiff_t) <= sizeof(long)) {
#endif
    long v;
    res = SWIG_AsVal_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(ptrdiff_t) <= sizeof(long long)) {
    long long v;
    res = SWIG_AsVal_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  }
#endif
  return res;
}


#include <algorithm>


#include <vector>


#include <list>


#include <utility>


#include <map>


#include <algorithm>


	#include <stdexcept>
	#include <vector>
	#include <list>
	#include <map>
	#include <string>
	#include "../../JuceLibraryCode/JuceHeader.h"
// Kernel
	#include "CSL_Types.h"		/// CSL type definitions and central macros, Observer classes
	#include "CSL_Exceptions.h"	/// CSL exception hierarchy
	#include "CGestalt.h"		/// System constants class
	#include "CSL_Core.h"		/// Buffer, UnitGenerator and the core classes
//Utils
	#include "RingBuffer.h"		/// Utility circular buffer
	#include "Variable.h"		/// Static/dynamic variables
	#include "BlockResizer.h"
	#include "CPoint.h"
	#include "ThreadUtilities.h"
// Sources						// no FFT for now
	#include "Window.h"
	#include "Envelope.h"		/// Breakpoint envelopes
	#include "Oscillator.h"		/// All the oscillator classes
	#include "Noise.h"
	#include "Spectral.h"
	#include "KarplusString.h"
	#include "SHARC.h"
// Processors
	#include "BinaryOp.h"		/// Binary operators
	#include "InOut.h"
	#include "Filters.h"
	#include "DelayLine.h"
	#include "Mixer.h"
	#include "Convolver.h"
	#include "FIR.h"
	#include "Freeverb.h"
// IO
	#include "JUCEIO.h"
	#include "FileIO.h"
	#include "SoundFile.h"
	#include "MIDIIOJ.h"
	#include "OSC_Support.h"
// Instruments
	#include "Accessor.h"
	#include "Instrument.h"
	#include "AdditiveInstrument.h"
	#include "FMInstrument.h"
	#include "SndFileInstrument.h"
	#include "StringInstrument.h"

	using namespace csl;


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
      return PyBytes_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#else
      return PyUnicode_DecodeUTF8(carray, static_cast< Py_ssize_t >(size), "surrogateescape");
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< Py_ssize_t >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
  if (PyBytes_Check(obj))
#else
  if (PyUnicode_Check(obj))
#endif
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
    int ret = SWIG_OK;
#if PY_VERSION_HEX>=0x03000000
#if !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    if (!obj)
      return SWIG_TypeError;
    if (alloc)
      *alloc = SWIG_NEWOBJ;
#endif
    if (PyBytes_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#else
    if (PyString_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#endif
    if (cptr) {
      if (alloc) {
	if (*alloc == SWIG_NEWOBJ) {
	  *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
	  *alloc = SWIG_NEWOBJ;
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
	*cptr = PyBytes_AsString(obj);
#else
	assert(0); /* Should never reach here with Unicode strings in Python 3 */
#endif
#else
	*cptr = SWIG_Python_str_AsChar(obj);
        if (!*cptr)
          ret = SWIG_TypeError;
#endif
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000 && !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    Py_XDECREF(obj);
#endif
    return ret;
  } else {
#if defined(SWIG_PYTHON_2_UNICODE)
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
#error "Cannot use both SWIG_PYTHON_2_UNICODE and SWIG_PYTHON_STRICT_BYTE_CHAR at once"
#endif
#if PY_VERSION_HEX<0x03000000
    if (PyUnicode_Check(obj)) {
      char *cstr; Py_ssize_t len;
      if (!alloc && cptr) {
        return SWIG_RuntimeError;
      }
      obj = PyUnicode_AsUTF8String(obj);
      if (!obj)
        return SWIG_TypeError;
      if (PyString_AsStringAndSize(obj, &cstr, &len) != -1) {
        if (cptr) {
          if (alloc) *alloc = SWIG_NEWOBJ;
          *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
        }
        if (psize) *psize = len + 1;

        Py_XDECREF(obj);
        return SWIG_OK;
      } else {
        Py_XDECREF(obj);
      }
    }
#endif
#endif

    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}





  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsCharArray(PyObject * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    /* special case of single char conversion when we don't need space for NUL */
    if (size == 1 && csize == 2 && cptr && !cptr[1]) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_char (PyObject * obj, char *val)
{    
  int res = SWIG_AsCharArray(obj, val, 1);
  if (!SWIG_IsOK(res)) {
    long v;
    res = SWIG_AddCast(SWIG_AsVal_long (obj, &v));
    if (SWIG_IsOK(res)) {
      if ((CHAR_MIN <= v) && (v <= CHAR_MAX)) {
	if (val) *val = static_cast< char >(v);
      } else {
	res = SWIG_OverflowError;
      }
    }
  }
  return res;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
/* isfinite() is a macro for C99 */
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined(__cplusplus) && __cplusplus >= 201103L
/* Use a template so that this works whether isfinite() is std::isfinite() or
 * in the global namespace.  The reality seems to vary between compiler
 * versions.
 *
 * Make sure namespace std exists to avoid compiler warnings.
 *
 * extern "C++" is required as this fragment can end up inside an extern "C" { } block
 */
namespace std { }
extern "C++" template<typename T>
inline int SWIG_isfinite_func(T x) {
  using namespace std;
  return isfinite(x);
}
#  define SWIG_isfinite(X) (SWIG_isfinite_func(X))
# elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 2))
#  define SWIG_isfinite(X) (__builtin_isfinite(X))
# elif defined(__clang__) && defined(__has_builtin)
#  if __has_builtin(__builtin_isfinite)
#   define SWIG_isfinite(X) (__builtin_isfinite(X))
#  endif
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value));
}


SWIGINTERN size_t
SWIG_strnlen(const char* s, size_t maxlen)
{
  const char *p;
  for (p = s; maxlen-- && *p; p++)
    ;
  return p - s;
}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_incr", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_SwigPyIterator_incr__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_SwigPyIterator_incr__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator_decr", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_SwigPyIterator_decr__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_SwigPyIterator_decr__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  ptrdiff_t result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_distance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  } catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_equal", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  } catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  PyObject *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator_advance", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___isub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SwigPyIterator___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  } catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ptrdiff_t result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SwigPyIterator___sub__", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_SwigPyIterator___sub____SWIG_1(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_SwigPyIterator___sub____SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_testStruct_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::testStruct *arg1 = (csl::testStruct *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "testStruct_name_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__testStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "testStruct_name_set" "', argument " "1"" of type '" "csl::testStruct *""'"); 
  }
  arg1 = reinterpret_cast< csl::testStruct * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "testStruct_name_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->name = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_testStruct_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::testStruct *arg1 = (csl::testStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__testStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "testStruct_name_get" "', argument " "1"" of type '" "csl::testStruct *""'"); 
  }
  arg1 = reinterpret_cast< csl::testStruct * >(argp1);
  result = (char *) ((arg1)->name);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_testStruct_fcn_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::testStruct *arg1 = (csl::testStruct *) 0 ;
  csl::VoidFcnPtrN *arg2 = (csl::VoidFcnPtrN *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "testStruct_fcn_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__testStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "testStruct_fcn_set" "', argument " "1"" of type '" "csl::testStruct *""'"); 
  }
  arg1 = reinterpret_cast< csl::testStruct * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "testStruct_fcn_set" "', argument " "2"" of type '" "csl::VoidFcnPtrN *""'"); 
    }
  }
  if (arg1) (arg1)->fcn = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_testStruct_fcn_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::testStruct *arg1 = (csl::testStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::VoidFcnPtrN *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__testStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "testStruct_fcn_get" "', argument " "1"" of type '" "csl::testStruct *""'"); 
  }
  arg1 = reinterpret_cast< csl::testStruct * >(argp1);
  result = (csl::VoidFcnPtrN *) ((arg1)->fcn);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_testStruct_comment_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::testStruct *arg1 = (csl::testStruct *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "testStruct_comment_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__testStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "testStruct_comment_set" "', argument " "1"" of type '" "csl::testStruct *""'"); 
  }
  arg1 = reinterpret_cast< csl::testStruct * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "testStruct_comment_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->comment = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->comment = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_testStruct_comment_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::testStruct *arg1 = (csl::testStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__testStruct, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "testStruct_comment_get" "', argument " "1"" of type '" "csl::testStruct *""'"); 
  }
  arg1 = reinterpret_cast< csl::testStruct * >(argp1);
  result = (char *) ((arg1)->comment);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_testStruct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::testStruct *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_testStruct", 0, 0, 0)) SWIG_fail;
  result = (csl::testStruct *)new csl::testStruct();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__testStruct, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_testStruct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::testStruct *arg1 = (csl::testStruct *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__testStruct, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_testStruct" "', argument " "1"" of type '" "csl::testStruct *""'"); 
  }
  arg1 = reinterpret_cast< csl::testStruct * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *testStruct_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__testStruct, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *testStruct_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_CException_mMessage_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CException *arg1 = (csl::CException *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CException_mMessage_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CException_mMessage_set" "', argument " "1"" of type '" "csl::CException *""'"); 
  }
  arg1 = reinterpret_cast< csl::CException * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CException_mMessage_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CException_mMessage_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->mMessage = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CException_mMessage_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CException *arg1 = (csl::CException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CException_mMessage_get" "', argument " "1"" of type '" "csl::CException *""'"); 
  }
  arg1 = reinterpret_cast< csl::CException * >(argp1);
  result = (std::string *) & ((arg1)->mMessage);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  csl::CException *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CException" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CException" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (csl::CException *)new csl::CException((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CException, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CException *arg1 = (csl::CException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CException, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CException" "', argument " "1"" of type '" "csl::CException *""'"); 
  }
  arg1 = reinterpret_cast< csl::CException * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CException_what(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CException *arg1 = (csl::CException *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CException, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CException_what" "', argument " "1"" of type '" "csl::CException *""'"); 
  }
  arg1 = reinterpret_cast< csl::CException * >(argp1);
  result = (char *)(arg1)->what();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CException_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__CException, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *CException_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MemoryError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  csl::MemoryError *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MemoryError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MemoryError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (csl::MemoryError *)new csl::MemoryError((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__MemoryError, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MemoryError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MemoryError *arg1 = (csl::MemoryError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MemoryError, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MemoryError" "', argument " "1"" of type '" "csl::MemoryError *""'"); 
  }
  arg1 = reinterpret_cast< csl::MemoryError * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MemoryError_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__MemoryError, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MemoryError_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ValueError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  csl::ValueError *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ValueError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ValueError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (csl::ValueError *)new csl::ValueError((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ValueError, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ValueError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::ValueError *arg1 = (csl::ValueError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__ValueError, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ValueError" "', argument " "1"" of type '" "csl::ValueError *""'"); 
  }
  arg1 = reinterpret_cast< csl::ValueError * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ValueError_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__ValueError, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ValueError_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_TimingError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  csl::TimingError *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_TimingError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_TimingError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (csl::TimingError *)new csl::TimingError((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__TimingError, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TimingError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::TimingError *arg1 = (csl::TimingError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__TimingError, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TimingError" "', argument " "1"" of type '" "csl::TimingError *""'"); 
  }
  arg1 = reinterpret_cast< csl::TimingError * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TimingError_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__TimingError, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *TimingError_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_RunTimeError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  csl::RunTimeError *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RunTimeError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RunTimeError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (csl::RunTimeError *)new csl::RunTimeError((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RunTimeError, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RunTimeError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RunTimeError *arg1 = (csl::RunTimeError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RunTimeError, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RunTimeError" "', argument " "1"" of type '" "csl::RunTimeError *""'"); 
  }
  arg1 = reinterpret_cast< csl::RunTimeError * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RunTimeError_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__RunTimeError, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *RunTimeError_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_LogicError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  csl::LogicError *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_LogicError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_LogicError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (csl::LogicError *)new csl::LogicError((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__LogicError, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LogicError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::LogicError *arg1 = (csl::LogicError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LogicError, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LogicError" "', argument " "1"" of type '" "csl::LogicError *""'"); 
  }
  arg1 = reinterpret_cast< csl::LogicError * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LogicError_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__LogicError, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *LogicError_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DomainError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  csl::DomainError *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DomainError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DomainError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (csl::DomainError *)new csl::DomainError((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DomainError, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DomainError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::DomainError *arg1 = (csl::DomainError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__DomainError, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DomainError" "', argument " "1"" of type '" "csl::DomainError *""'"); 
  }
  arg1 = reinterpret_cast< csl::DomainError * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DomainError_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__DomainError, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DomainError_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_OutOfRangeError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  csl::OutOfRangeError *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_OutOfRangeError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_OutOfRangeError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (csl::OutOfRangeError *)new csl::OutOfRangeError((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__OutOfRangeError, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OutOfRangeError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::OutOfRangeError *arg1 = (csl::OutOfRangeError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__OutOfRangeError, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OutOfRangeError" "', argument " "1"" of type '" "csl::OutOfRangeError *""'"); 
  }
  arg1 = reinterpret_cast< csl::OutOfRangeError * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OutOfRangeError_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__OutOfRangeError, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *OutOfRangeError_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_IOError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  csl::IOError *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IOError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IOError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (csl::IOError *)new csl::IOError((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IOError, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IOError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IOError *arg1 = (csl::IOError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IOError, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IOError" "', argument " "1"" of type '" "csl::IOError *""'"); 
  }
  arg1 = reinterpret_cast< csl::IOError * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IOError_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__IOError, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *IOError_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DBError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  csl::DBError *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DBError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DBError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (csl::DBError *)new csl::DBError((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DBError, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DBError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::DBError *arg1 = (csl::DBError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__DBError, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DBError" "', argument " "1"" of type '" "csl::DBError *""'"); 
  }
  arg1 = reinterpret_cast< csl::DBError * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DBError_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__DBError, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DBError_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ProcessingError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject *swig_obj[1] ;
  csl::ProcessingError *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ProcessingError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ProcessingError" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = (csl::ProcessingError *)new csl::ProcessingError((std::string const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ProcessingError, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ProcessingError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::ProcessingError *arg1 = (csl::ProcessingError *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__ProcessingError, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ProcessingError" "', argument " "1"" of type '" "csl::ProcessingError *""'"); 
  }
  arg1 = reinterpret_cast< csl::ProcessingError * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ProcessingError_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__ProcessingError, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ProcessingError_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_CGestalt_frameRate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_frameRate", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::frameRate();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_frameRateF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_frameRateF", 0, 0, 0)) SWIG_fail;
  result = (float)csl::CGestalt::frameRateF();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setFrameRate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setFrameRate" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setFrameRate(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_framePeriod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::sample result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_framePeriod", 0, 0, 0)) SWIG_fail;
  result = (csl::sample)csl::CGestalt::framePeriod();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_numInChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_numInChannels", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::numInChannels();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setNumInChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setNumInChannels" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setNumInChannels(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_numOutChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_numOutChannels", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::numOutChannels();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setNumOutChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setNumOutChannels" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setNumOutChannels(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_blockSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_blockSize", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::blockSize();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setBlockSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setBlockSize" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setBlockSize(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_maxBufferFrames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_maxBufferFrames", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::maxBufferFrames();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setMaxBufferFrames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setMaxBufferFrames" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setMaxBufferFrames(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_maxSndFileFrames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_maxSndFileFrames", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::maxSndFileFrames();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setMaxSndFileFrames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setMaxSndFileFrames" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setMaxSndFileFrames(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_sndFileFrames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_sndFileFrames", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::sndFileFrames();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setSndFileFrames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setSndFileFrames" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setSndFileFrames(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_verbosity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_verbosity", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::verbosity();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setVerbosity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setVerbosity" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setVerbosity(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_loggingPeriod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_loggingPeriod", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::loggingPeriod();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setLoggingPeriod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setLoggingPeriod" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setLoggingPeriod(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_outPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_outPort", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::outPort();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setOutPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setOutPort" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setOutPort(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_dataFolder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_dataFolder", 0, 0, 0)) SWIG_fail;
  result = csl::CGestalt::dataFolder();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setDataFolder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CGestalt_setDataFolder" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  csl::CGestalt::setDataFolder(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_stopNow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_stopNow", 0, 0, 0)) SWIG_fail;
  result = (bool)csl::CGestalt::stopNow();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setStopNow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_setStopNow", 0, 0, 0)) SWIG_fail;
  csl::CGestalt::setStopNow();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_clearStopNow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_clearStopNow", 0, 0, 0)) SWIG_fail;
  csl::CGestalt::clearStopNow();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_initFileText(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char arg1 ;
  char val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_char(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_initFileText" "', argument " "1"" of type '" "char""'");
  } 
  arg1 = static_cast< char >(val1);
  result = csl::CGestalt::initFileText(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_storeToInitFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char arg1 ;
  std::string arg2 ;
  char val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_storeToInitFile", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_char(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_storeToInitFile" "', argument " "1"" of type '" "char""'");
  } 
  arg1 = static_cast< char >(val1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "CGestalt_storeToInitFile" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  csl::CGestalt::storeToInitFile(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_sndFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_sndFileName", 0, 0, 0)) SWIG_fail;
  result = csl::CGestalt::sndFileName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_screenWidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_screenWidth", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::screenWidth();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setScreenWidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setScreenWidth" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setScreenWidth(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_screenHeight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CGestalt_screenHeight", 0, 0, 0)) SWIG_fail;
  result = (unsigned int)csl::CGestalt::screenHeight();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CGestalt_setScreenHeight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "CGestalt_setScreenHeight" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  csl::CGestalt::setScreenHeight(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CGestalt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CGestalt *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_CGestalt", 0, 0, 0)) SWIG_fail;
  result = (csl::CGestalt *)new csl::CGestalt();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CGestalt, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CGestalt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CGestalt *arg1 = (csl::CGestalt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CGestalt, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CGestalt" "', argument " "1"" of type '" "csl::CGestalt *""'"); 
  }
  arg1 = reinterpret_cast< csl::CGestalt * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CGestalt_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__CGestalt, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *CGestalt_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_logMsg__SWIG_0__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_UnpackTuple(args, "logMsg", 1, 1, &obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "logMsg" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  csl::logMsg((char const *)arg1,arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_logMsg__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,1);
  varargs = PyTuple_GetSlice(args,1,PyTuple_Size(args));
  resultobj = _wrap_logMsg__SWIG_0__varargs__(NULL,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_logMsg__SWIG_1__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  csl::LogLevel arg1 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_UnpackTuple(args, "logMsg", 2, 2, &obj0, &obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "logMsg" "', argument " "1"" of type '" "csl::LogLevel""'");
  } 
  arg1 = static_cast< csl::LogLevel >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "logMsg" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  csl::logMsg(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_logMsg__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,2);
  varargs = PyTuple_GetSlice(args,2,PyTuple_Size(args));
  resultobj = _wrap_logMsg__SWIG_1__varargs__(NULL,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_logMsg(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "logMsg", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_logMsg__SWIG_0(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_logMsg__SWIG_1(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'logMsg'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::logMsg(char const *,...)\n"
    "    csl::logMsg(csl::LogLevel,char const *,...)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_logMsgNN__SWIG_0__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_UnpackTuple(args, "logMsgNN", 1, 1, &obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "logMsgNN" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  csl::logMsgNN((char const *)arg1,arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_logMsgNN__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,1);
  varargs = PyTuple_GetSlice(args,1,PyTuple_Size(args));
  resultobj = _wrap_logMsgNN__SWIG_0__varargs__(NULL,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_logMsgNN__SWIG_1__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  csl::LogLevel arg1 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_UnpackTuple(args, "logMsgNN", 2, 2, &obj0, &obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "logMsgNN" "', argument " "1"" of type '" "csl::LogLevel""'");
  } 
  arg1 = static_cast< csl::LogLevel >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "logMsgNN" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  csl::logMsgNN(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_logMsgNN__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,2);
  varargs = PyTuple_GetSlice(args,2,PyTuple_Size(args));
  resultobj = _wrap_logMsgNN__SWIG_1__varargs__(NULL,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_logMsgNN(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "logMsgNN", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_logMsgNN__SWIG_0(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_logMsgNN__SWIG_1(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'logMsgNN'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::logMsgNN(char const *,...)\n"
    "    csl::logMsgNN(csl::LogLevel,char const *,...)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_logLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!SWIG_Python_UnpackTuple(args, "logLine", 0, 0, 0)) SWIG_fail;
  csl::logLine();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_logURL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!SWIG_Python_UnpackTuple(args, "logURL", 0, 0, 0)) SWIG_fail;
  csl::logURL();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_vlogMsg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  csl::LogLevel arg2 ;
  char *arg3 = (char *) 0 ;
  va_list arg4 ;
  bool val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "vlogMsg", 4, 4, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "vlogMsg" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vlogMsg" "', argument " "2"" of type '" "csl::LogLevel""'");
  } 
  arg2 = static_cast< csl::LogLevel >(val2);
  res3 = SWIG_AsCharPtrAndSize(swig_obj[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "vlogMsg" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_va_list,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "vlogMsg" "', argument " "4"" of type '" "va_list""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vlogMsg" "', argument " "4"" of type '" "va_list""'");
    } else {
      va_list * temp = reinterpret_cast< va_list * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  csl::vlogMsg(arg1,arg2,(char const *)arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_sleepUsec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sleepUsec" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (bool)csl::sleepUsec(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sleepMsec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sleepMsec" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (bool)csl::sleepMsec(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_sleepSec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sleepSec" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (bool)csl::sleepSec(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_timeNow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Timestamp result;
  
  if (!SWIG_Python_UnpackTuple(args, "timeNow", 0, 0, 0)) SWIG_fail;
  result = (csl::Timestamp)csl::timeNow();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_fTimeNow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "fTimeNow", 0, 0, 0)) SWIG_fail;
  result = (float)csl::fTimeNow();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_fRandZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "fRandZ", 0, 0, 0)) SWIG_fail;
  result = (float)csl::fRandZ();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_fRand1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "fRand1", 0, 0, 0)) SWIG_fail;
  result = (float)csl::fRand1();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_fRandV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fRandV" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (float)csl::fRandV(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_fRandM(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "fRandM", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fRandM" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "fRandM" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (float)csl::fRandM(arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_fRandR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "fRandR", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fRandR" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "fRandR" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (float)csl::fRandR(arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_fRandB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "fRandB", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "fRandB" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "fRandB" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (float)csl::fRandB(arg1,arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iRandV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "iRandV" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)csl::iRandV(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iRandM(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "iRandM", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "iRandM" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iRandM" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)csl::iRandM(arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iRandB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "iRandB", 2, 2, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "iRandB" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iRandB" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)csl::iRandB(arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_coin__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  bool result;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (bool)csl::coin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_coin__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  bool result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "coin" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (bool)csl::coin(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_coin(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "coin", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_coin__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_coin__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'coin'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::coin()\n"
    "    csl::coin(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_keyToFreq(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "keyToFreq" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (float)csl::keyToFreq(arg1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_freqToKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "freqToKey" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (unsigned int)csl::freqToKey(arg1);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Model(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Model *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Model", 0, 0, 0)) SWIG_fail;
  result = (csl::Model *)new csl::Model();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Model, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Model(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Model *arg1 = (csl::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Model, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Model" "', argument " "1"" of type '" "csl::Model *""'"); 
  }
  arg1 = reinterpret_cast< csl::Model * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_attachObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Model *arg1 = (csl::Model *) 0 ;
  csl::Observer *arg2 = (csl::Observer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Model_attachObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Model, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_attachObserver" "', argument " "1"" of type '" "csl::Model *""'"); 
  }
  arg1 = reinterpret_cast< csl::Model * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Observer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Model_attachObserver" "', argument " "2"" of type '" "csl::Observer *""'"); 
  }
  arg2 = reinterpret_cast< csl::Observer * >(argp2);
  (arg1)->attachObserver(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_detachObserver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Model *arg1 = (csl::Model *) 0 ;
  csl::Observer *arg2 = (csl::Observer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Model_detachObserver", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Model, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_detachObserver" "', argument " "1"" of type '" "csl::Model *""'"); 
  }
  arg1 = reinterpret_cast< csl::Model * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Observer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Model_detachObserver" "', argument " "2"" of type '" "csl::Observer *""'"); 
  }
  arg2 = reinterpret_cast< csl::Observer * >(argp2);
  (arg1)->detachObserver(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_changed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Model *arg1 = (csl::Model *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Model_changed", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Model, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_changed" "', argument " "1"" of type '" "csl::Model *""'"); 
  }
  arg1 = reinterpret_cast< csl::Model * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Model_changed" "', argument " "2"" of type '" "void *""'"); 
  }
  (arg1)->changed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_evaluate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Model *arg1 = (csl::Model *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject *swig_obj[2] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "Model_evaluate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Model, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_evaluate" "', argument " "1"" of type '" "csl::Model *""'"); 
  }
  arg1 = reinterpret_cast< csl::Model * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Model_evaluate" "', argument " "2"" of type '" "void *""'"); 
  }
  result = (int)(arg1)->evaluate(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Model_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Model, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Model_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_Observer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Observer *arg1 = (csl::Observer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Observer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Observer" "', argument " "1"" of type '" "csl::Observer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Observer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Observer_mPeriod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Observer *arg1 = (csl::Observer *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Observer_mPeriod_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Observer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Observer_mPeriod_set" "', argument " "1"" of type '" "csl::Observer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Observer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Observer_mPeriod_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->mPeriod = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Observer_mPeriod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Observer *arg1 = (csl::Observer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Observer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Observer_mPeriod_get" "', argument " "1"" of type '" "csl::Observer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Observer * >(argp1);
  result = (float) ((arg1)->mPeriod);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Observer_mKey_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Observer *arg1 = (csl::Observer *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Observer_mKey_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Observer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Observer_mKey_set" "', argument " "1"" of type '" "csl::Observer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Observer * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Observer_mKey_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->mKey = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Observer_mKey_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Observer *arg1 = (csl::Observer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Observer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Observer_mKey_get" "', argument " "1"" of type '" "csl::Observer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Observer * >(argp1);
  result = (int) ((arg1)->mKey);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Observer_update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Observer *arg1 = (csl::Observer *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Observer_update", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Observer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Observer_update" "', argument " "1"" of type '" "csl::Observer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Observer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Observer_update" "', argument " "2"" of type '" "void *""'"); 
  }
  (arg1)->update(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Observer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Observer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Buffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::Buffer *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Buffer" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Buffer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::Buffer *)new csl::Buffer(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Buffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::Buffer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Buffer" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::Buffer *)new csl::Buffer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Buffer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Buffer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Buffer *)new csl::Buffer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Buffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Buffer", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Buffer__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Buffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Buffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Buffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Buffer::Buffer(unsigned int,unsigned int)\n"
    "    csl::Buffer::Buffer(unsigned int)\n"
    "    csl::Buffer::Buffer()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Buffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Buffer" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mNumChannels_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_mNumChannels_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mNumChannels_set" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_mNumChannels_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mNumChannels = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mNumChannels_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mNumChannels_get" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (unsigned int) ((arg1)->mNumChannels);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mNumFrames_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_mNumFrames_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mNumFrames_set" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_mNumFrames_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mNumFrames = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mNumFrames_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mNumFrames_get" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (unsigned int) ((arg1)->mNumFrames);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mNumAlloc_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_mNumAlloc_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mNumAlloc_set" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_mNumAlloc_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mNumAlloc = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mNumAlloc_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mNumAlloc_get" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (unsigned int) ((arg1)->mNumAlloc);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mMonoBufferByteSize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_mMonoBufferByteSize_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mMonoBufferByteSize_set" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_mMonoBufferByteSize_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mMonoBufferByteSize = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mMonoBufferByteSize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mMonoBufferByteSize_get" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (unsigned int) ((arg1)->mMonoBufferByteSize);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mSequence_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_mSequence_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mSequence_set" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_mSequence_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mSequence = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mSequence_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mSequence_get" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (unsigned int) ((arg1)->mSequence);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mTimestamp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  csl::Timestamp arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_mTimestamp_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mTimestamp_set" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_mTimestamp_set" "', argument " "2"" of type '" "csl::Timestamp""'");
  } 
  arg2 = static_cast< csl::Timestamp >(val2);
  if (arg1) (arg1)->mTimestamp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mTimestamp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Timestamp result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mTimestamp_get" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (csl::Timestamp) ((arg1)->mTimestamp);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_duration" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (float)(arg1)->duration();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mAreBuffersAllocated_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_mAreBuffersAllocated_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mAreBuffersAllocated_set" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_mAreBuffersAllocated_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mAreBuffersAllocated = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mAreBuffersAllocated_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mAreBuffersAllocated_get" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (bool) ((arg1)->mAreBuffersAllocated);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mDidIAllocateBuffers_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_mDidIAllocateBuffers_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mDidIAllocateBuffers_set" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_mDidIAllocateBuffers_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mDidIAllocateBuffers = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mDidIAllocateBuffers_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mDidIAllocateBuffers_get" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (bool) ((arg1)->mDidIAllocateBuffers);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mIsPopulated_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_mIsPopulated_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mIsPopulated_set" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_mIsPopulated_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mIsPopulated = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mIsPopulated_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mIsPopulated_get" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (bool) ((arg1)->mIsPopulated);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mAreBuffersZero_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_mAreBuffersZero_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mAreBuffersZero_set" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_mAreBuffersZero_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mAreBuffersZero = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mAreBuffersZero_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mAreBuffersZero_get" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (bool) ((arg1)->mAreBuffersZero);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  csl::BufferContentType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_mType_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mType_set" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_mType_set" "', argument " "2"" of type '" "csl::BufferContentType""'");
  } 
  arg2 = static_cast< csl::BufferContentType >(val2);
  if (arg1) (arg1)->mType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_mType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::BufferContentType result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_mType_get" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (csl::BufferContentType) ((arg1)->mType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_setSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_setSize", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_setSize" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_setSize" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_setSize" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->setSize(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_setSizeOnly(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_setSizeOnly", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_setSizeOnly" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_setSizeOnly" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_setSizeOnly" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->setSizeOnly(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_checkBuffers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_checkBuffers" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  try {
    (arg1)->checkBuffers();
  } catch(csl::MemoryError &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::MemoryError(static_cast< const csl::MemoryError& >(_e))),SWIGTYPE_p_csl__MemoryError,SWIG_POINTER_OWN), "csl::MemoryError", SWIGTYPE_p_csl__MemoryError); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_allocateBuffers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_allocateBuffers" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  try {
    (arg1)->allocateBuffers();
  } catch(csl::MemoryError &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::MemoryError(static_cast< const csl::MemoryError& >(_e))),SWIGTYPE_p_csl__MemoryError,SWIG_POINTER_OWN), "csl::MemoryError", SWIGTYPE_p_csl__MemoryError); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_freeBuffers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_freeBuffers" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  (arg1)->freeBuffers();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_canStore(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_canStore", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_canStore" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_canStore" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (bool)(arg1)->canStore(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_zeroBuffers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_zeroBuffers" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  (arg1)->zeroBuffers();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_fillWith(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  csl::sample arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_fillWith", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_fillWith" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_fillWith" "', argument " "2"" of type '" "csl::sample""'");
  } 
  arg2 = static_cast< csl::sample >(val2);
  (arg1)->fillWith(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_scaleBy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  csl::sample arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_scaleBy", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_scaleBy" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_scaleBy" "', argument " "2"" of type '" "csl::sample""'");
  } 
  arg2 = static_cast< csl::sample >(val2);
  (arg1)->scaleBy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_copyFrom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_copyFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_copyFrom" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Buffer_copyFrom" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Buffer_copyFrom" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->copyFrom(*arg2);
  } catch(csl::RunTimeError &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::RunTimeError(static_cast< const csl::RunTimeError& >(_e))),SWIGTYPE_p_csl__RunTimeError,SWIG_POINTER_OWN), "csl::RunTimeError", SWIGTYPE_p_csl__RunTimeError); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_copyHeaderFrom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_copyHeaderFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_copyHeaderFrom" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Buffer_copyHeaderFrom" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Buffer_copyHeaderFrom" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->copyHeaderFrom(*arg2);
  } catch(csl::RunTimeError &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::RunTimeError(static_cast< const csl::RunTimeError& >(_e))),SWIGTYPE_p_csl__RunTimeError,SWIG_POINTER_OWN), "csl::RunTimeError", SWIGTYPE_p_csl__RunTimeError); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_copySamplesFrom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_copySamplesFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_copySamplesFrom" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Buffer_copySamplesFrom" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Buffer_copySamplesFrom" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->copySamplesFrom(*arg2);
  } catch(csl::RunTimeError &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::RunTimeError(static_cast< const csl::RunTimeError& >(_e))),SWIGTYPE_p_csl__RunTimeError,SWIG_POINTER_OWN), "csl::RunTimeError", SWIGTYPE_p_csl__RunTimeError); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_copySamplesFromTo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_copySamplesFromTo", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_copySamplesFromTo" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Buffer_copySamplesFromTo" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Buffer_copySamplesFromTo" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_copySamplesFromTo" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->copySamplesFromTo(*arg2,arg3);
  } catch(csl::RunTimeError &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::RunTimeError(static_cast< const csl::RunTimeError& >(_e))),SWIGTYPE_p_csl__RunTimeError,SWIG_POINTER_OWN), "csl::RunTimeError", SWIGTYPE_p_csl__RunTimeError); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_copyOnlySamplesFrom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_copyOnlySamplesFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_copyOnlySamplesFrom" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Buffer_copyOnlySamplesFrom" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Buffer_copyOnlySamplesFrom" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->copyOnlySamplesFrom(*arg2);
  } catch(csl::RunTimeError &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::RunTimeError(static_cast< const csl::RunTimeError& >(_e))),SWIGTYPE_p_csl__RunTimeError,SWIG_POINTER_OWN), "csl::RunTimeError", SWIGTYPE_p_csl__RunTimeError); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_readFromFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_readFromFile", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_readFromFile" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Buffer_readFromFile" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)(arg1)->readFromFile(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_convertRate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  csl::Status result;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_convertRate", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_convertRate" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_convertRate" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_convertRate" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (csl::Status)(arg1)->convertRate(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_samplePtrFor__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  csl::SampleBuffer result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_samplePtrFor" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_samplePtrFor" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_samplePtrFor" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (csl::SampleBuffer)(arg1)->samplePtrFor(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_samplePtrFor__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  csl::SampleBuffer result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_samplePtrFor" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_samplePtrFor" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_samplePtrFor" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Buffer_samplePtrFor" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (csl::SampleBuffer)(arg1)->samplePtrFor(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_samplePtrFor(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Buffer_samplePtrFor", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    PyObject *retobj = _wrap_Buffer_samplePtrFor__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_Buffer_samplePtrFor__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Buffer_samplePtrFor'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Buffer::samplePtrFor(unsigned int,unsigned int)\n"
    "    csl::Buffer::samplePtrFor(unsigned int,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Buffer_buffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::SampleBuffer result;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_buffer", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_buffer" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_buffer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::SampleBuffer)(arg1)->buffer(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_buffers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::SampleBuffer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_buffers" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (csl::SampleBuffer *)(arg1)->buffers();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_setBuffers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  csl::SampleBuffer *arg2 = (csl::SampleBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_setBuffers", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_setBuffers" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Buffer_setBuffers" "', argument " "2"" of type '" "csl::SampleBuffer *""'"); 
  }
  arg2 = reinterpret_cast< csl::SampleBuffer * >(argp2);
  (arg1)->setBuffers(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_setBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  csl::SampleBuffer arg3 = (csl::SampleBuffer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_setBuffer" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_setBuffer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Buffer_setBuffer" "', argument " "3"" of type '" "csl::SampleBuffer""'"); 
  }
  arg3 = reinterpret_cast< csl::SampleBuffer >(argp3);
  (arg1)->setBuffer(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_setBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  csl::sample arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_setBuffer" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_setBuffer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_setBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Buffer_setBuffer" "', argument " "4"" of type '" "csl::sample""'");
  } 
  arg4 = static_cast< csl::sample >(val4);
  (arg1)->setBuffer(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_setBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Buffer_setBuffer", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    PyObject *retobj = _wrap_Buffer_setBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_Buffer_setBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Buffer_setBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Buffer::setBuffer(unsigned int,csl::SampleBuffer)\n"
    "    csl::Buffer::setBuffer(unsigned int,unsigned int,csl::sample)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Buffer_normalize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_normalize" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_normalize" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (float)(arg1)->normalize(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_normalize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_normalize" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_normalize" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_normalize" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Buffer_normalize" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (float)(arg1)->normalize(arg2,arg3,arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_normalize(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Buffer_normalize", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_Buffer_normalize__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_Buffer_normalize__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Buffer_normalize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Buffer::normalize(float)\n"
    "    csl::Buffer::normalize(float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Buffer_removeDC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_removeDC" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  (arg1)->removeDC();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_rms(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_rms", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_rms" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_rms" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_rms" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Buffer_rms" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (float)(arg1)->rms(arg2,arg3,arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_avg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_avg", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_avg" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_avg" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_avg" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Buffer_avg" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (float)(arg1)->avg(arg2,arg3,arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_max(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_max", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_max" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_max" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_max" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Buffer_max" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (float)(arg1)->max(arg2,arg3,arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buffer_min(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = (csl::Buffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "Buffer_min", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buffer_min" "', argument " "1"" of type '" "csl::Buffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buffer_min" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Buffer_min" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Buffer_min" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (float)(arg1)->min(arg2,arg3,arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Buffer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Buffer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Buffer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BufferCMap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::BufferCMap *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::BufferCMap *)new csl::BufferCMap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BufferCMap, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BufferCMap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::BufferCMap *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BufferCMap" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_BufferCMap" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::BufferCMap *)new csl::BufferCMap(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BufferCMap, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BufferCMap__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  csl::BufferCMap *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BufferCMap" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_BufferCMap" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_BufferCMap" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (csl::BufferCMap *)new csl::BufferCMap(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BufferCMap, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BufferCMap(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_BufferCMap", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_BufferCMap__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_BufferCMap__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_BufferCMap__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_BufferCMap'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::BufferCMap::BufferCMap()\n"
    "    csl::BufferCMap::BufferCMap(unsigned int,unsigned int)\n"
    "    csl::BufferCMap::BufferCMap(unsigned int,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_BufferCMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BufferCMap *arg1 = (csl::BufferCMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BufferCMap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BufferCMap" "', argument " "1"" of type '" "csl::BufferCMap *""'"); 
  }
  arg1 = reinterpret_cast< csl::BufferCMap * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BufferCMap_mRealNumChannels_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BufferCMap *arg1 = (csl::BufferCMap *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BufferCMap_mRealNumChannels_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BufferCMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufferCMap_mRealNumChannels_set" "', argument " "1"" of type '" "csl::BufferCMap *""'"); 
  }
  arg1 = reinterpret_cast< csl::BufferCMap * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BufferCMap_mRealNumChannels_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mRealNumChannels = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BufferCMap_mRealNumChannels_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BufferCMap *arg1 = (csl::BufferCMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BufferCMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufferCMap_mRealNumChannels_get" "', argument " "1"" of type '" "csl::BufferCMap *""'"); 
  }
  arg1 = reinterpret_cast< csl::BufferCMap * >(argp1);
  result = (unsigned int) ((arg1)->mRealNumChannels);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BufferCMap_mChannelMap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BufferCMap *arg1 = (csl::BufferCMap *) 0 ;
  std::vector< int,std::allocator< int > > *arg2 = (std::vector< int,std::allocator< int > > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BufferCMap_mChannelMap_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BufferCMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufferCMap_mChannelMap_set" "', argument " "1"" of type '" "csl::BufferCMap *""'"); 
  }
  arg1 = reinterpret_cast< csl::BufferCMap * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BufferCMap_mChannelMap_set" "', argument " "2"" of type '" "std::vector< int,std::allocator< int > > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< int,std::allocator< int > > * >(argp2);
  if (arg1) (arg1)->mChannelMap = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BufferCMap_mChannelMap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BufferCMap *arg1 = (csl::BufferCMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< int,std::allocator< int > > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BufferCMap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufferCMap_mChannelMap_get" "', argument " "1"" of type '" "csl::BufferCMap *""'"); 
  }
  arg1 = reinterpret_cast< csl::BufferCMap * >(argp1);
  result = (std::vector< int,std::allocator< int > > *)& ((arg1)->mChannelMap);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BufferCMap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__BufferCMap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BufferCMap_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_UnitGenerator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::UnitGenerator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_UnitGenerator" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_UnitGenerator" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::UnitGenerator *)new csl::UnitGenerator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UnitGenerator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::UnitGenerator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_UnitGenerator" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::UnitGenerator *)new csl::UnitGenerator(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UnitGenerator__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::UnitGenerator *)new csl::UnitGenerator();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UnitGenerator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_UnitGenerator", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_UnitGenerator__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_UnitGenerator__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_UnitGenerator__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_UnitGenerator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::UnitGenerator::UnitGenerator(unsigned int,unsigned int)\n"
    "    csl::UnitGenerator::UnitGenerator(unsigned int)\n"
    "    csl::UnitGenerator::UnitGenerator()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_UnitGenerator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UnitGenerator" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_frameRate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_frameRate" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (unsigned int)(arg1)->frameRate();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_setFrameRate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "UnitGenerator_setFrameRate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_setFrameRate" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UnitGenerator_setFrameRate" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setFrameRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_numChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_numChannels" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (unsigned int)(arg1)->numChannels();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_setNumChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "UnitGenerator_setNumChannels", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_setNumChannels" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UnitGenerator_setNumChannels" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setNumChannels(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_copyPolicy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::BufferCopyPolicy result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_copyPolicy" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::BufferCopyPolicy)(arg1)->copyPolicy();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_setCopyPolicy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  csl::BufferCopyPolicy arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "UnitGenerator_setCopyPolicy", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_setCopyPolicy" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UnitGenerator_setCopyPolicy" "', argument " "2"" of type '" "csl::BufferCopyPolicy""'");
  } 
  arg2 = static_cast< csl::BufferCopyPolicy >(val2);
  (arg1)->setCopyPolicy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_nextBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_nextBuffer" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UnitGenerator_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UnitGenerator_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->nextBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_nextBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_nextBuffer" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UnitGenerator_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UnitGenerator_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UnitGenerator_nextBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->nextBuffer(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_nextBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "UnitGenerator_nextBuffer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_UnitGenerator_nextBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_UnitGenerator_nextBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'UnitGenerator_nextBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::UnitGenerator::nextBuffer(csl::Buffer &)\n"
    "    csl::UnitGenerator::nextBuffer(csl::Buffer &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_isFixed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_isFixed" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (bool)(arg1)->isFixed();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_isActive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_isActive" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (bool)(arg1)->isActive();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_addOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  csl::UnitGenerator *arg2 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "UnitGenerator_addOutput", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_addOutput" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UnitGenerator_addOutput" "', argument " "2"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->addOutput(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_removeOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  csl::UnitGenerator *arg2 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "UnitGenerator_removeOutput", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_removeOutput" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UnitGenerator_removeOutput" "', argument " "2"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->removeOutput(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_outputs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::vector< csl::UnitGenerator *,std::allocator< csl::UnitGenerator * > > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_outputs" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (arg1)->outputs();
  resultobj = SWIG_NewPointerObj((new csl::UGenVector(static_cast< const csl::UGenVector& >(result))), SWIGTYPE_p_std__vectorT_csl__UnitGenerator_p_std__allocatorT_csl__UnitGenerator_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_numOutputs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_numOutputs" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (unsigned int)(arg1)->numOutputs();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_checkFanOut(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "UnitGenerator_checkFanOut", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_checkFanOut" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UnitGenerator_checkFanOut" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UnitGenerator_checkFanOut" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    result = (bool)(arg1)->checkFanOut(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_handleFanOut(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "UnitGenerator_handleFanOut", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_handleFanOut" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UnitGenerator_handleFanOut" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UnitGenerator_handleFanOut" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->handleFanOut(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_setValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  csl::sample arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "UnitGenerator_setValue", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_setValue" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UnitGenerator_setValue" "', argument " "2"" of type '" "csl::sample""'");
  } 
  arg2 = static_cast< csl::sample >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::sample result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_value" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::sample)(arg1)->value();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_dump" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  (arg1)->dump();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnitGenerator_trigger(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnitGenerator_trigger" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  (arg1)->trigger();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *UnitGenerator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__UnitGenerator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *UnitGenerator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Port__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Port *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Port *)new csl::Port();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Port, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Port__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::Port *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Port" "', argument " "1"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::Port *)new csl::Port(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Port, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Port__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::Port *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Port" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::Port *)new csl::Port(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Port, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Port(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Port", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Port__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_Port__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Port__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Port'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Port::Port()\n"
    "    csl::Port::Port(csl::UnitGenerator *)\n"
    "    csl::Port::Port(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Port(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Port" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mUGen_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  csl::UnitGenerator *arg2 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Port_mUGen_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mUGen_set" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Port_mUGen_set" "', argument " "2"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  if (arg1) (arg1)->mUGen = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mUGen_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::UnitGenerator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mUGen_get" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  result = (csl::UnitGenerator *) ((arg1)->mUGen);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mBuffer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  csl::Buffer *arg2 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Port_mBuffer_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mBuffer_set" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Buffer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Port_mBuffer_set" "', argument " "2"" of type '" "csl::Buffer *""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  if (arg1) (arg1)->mBuffer = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mBuffer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Buffer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mBuffer_get" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  result = (csl::Buffer *) ((arg1)->mBuffer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mValue_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Port_mValue_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mValue_set" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Port_mValue_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->mValue = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mValue_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mValue_get" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  result = (float) ((arg1)->mValue);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mValuePtr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Port_mValuePtr_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mValuePtr_set" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Port_mValuePtr_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->mValuePtr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mValuePtr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mValuePtr_get" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  result = (float *) ((arg1)->mValuePtr);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mPtrIncrement_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Port_mPtrIncrement_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mPtrIncrement_set" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Port_mPtrIncrement_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mPtrIncrement = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mPtrIncrement_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mPtrIncrement_get" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  result = (unsigned int) ((arg1)->mPtrIncrement);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mValueIndex_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Port_mValueIndex_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mValueIndex_set" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Port_mValueIndex_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mValueIndex = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_mValueIndex_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_mValueIndex_get" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  result = (unsigned int) ((arg1)->mValueIndex);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_checkBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_checkBuffer" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  try {
    (arg1)->checkBuffer();
  } catch(csl::LogicError &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::LogicError(static_cast< const csl::LogicError& >(_e))),SWIGTYPE_p_csl__LogicError,SWIG_POINTER_OWN), "csl::LogicError", SWIGTYPE_p_csl__LogicError); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_nextValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_nextValue" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  result = (float)(arg1)->nextValue();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_nextFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  csl::SampleBuffer arg2 = (csl::SampleBuffer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Port_nextFrame", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_nextFrame" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Port_nextFrame" "', argument " "2"" of type '" "csl::SampleBuffer""'"); 
  }
  arg2 = reinterpret_cast< csl::SampleBuffer >(argp2);
  (arg1)->nextFrame(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_isReady(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_isReady" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  result = (bool)(arg1)->isReady();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_resetPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_resetPtr" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  (arg1)->resetPtr();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_isActive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_isActive" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  result = (bool)(arg1)->isActive();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_dump" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  (arg1)->dump();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_isFixed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_isFixed" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  result = (bool)(arg1)->isFixed();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Port_trigger(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Port *arg1 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Port_trigger" "', argument " "1"" of type '" "csl::Port *""'"); 
  }
  arg1 = reinterpret_cast< csl::Port * >(argp1);
  (arg1)->trigger();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Port_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Port, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Port_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Controllable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Controllable *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Controllable", 0, 0, 0)) SWIG_fail;
  result = (csl::Controllable *)new csl::Controllable();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Controllable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Controllable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Controllable *arg1 = (csl::Controllable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Controllable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Controllable" "', argument " "1"" of type '" "csl::Controllable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Controllable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Controllable_getPort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Controllable *arg1 = (csl::Controllable *) 0 ;
  csl::CSL_MAP_KEY arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::Port *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Controllable_getPort", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Controllable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Controllable_getPort" "', argument " "1"" of type '" "csl::Controllable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Controllable * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Controllable_getPort" "', argument " "2"" of type '" "csl::CSL_MAP_KEY""'");
  } 
  arg2 = static_cast< csl::CSL_MAP_KEY >(val2);
  result = (csl::Port *)(arg1)->getPort(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Port, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Controllable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Controllable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Controllable_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Scalable__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Scalable *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Scalable *)new csl::Scalable();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Scalable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Scalable__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::Scalable *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Scalable" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::Scalable *)new csl::Scalable(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Scalable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Scalable__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Scalable *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Scalable" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Scalable" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Scalable *)new csl::Scalable(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Scalable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Scalable__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Scalable *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Scalable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Scalable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Scalable" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Scalable *)new csl::Scalable(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Scalable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Scalable__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::Scalable *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Scalable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Scalable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Scalable" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Scalable" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::Scalable *)new csl::Scalable(*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Scalable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Scalable(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Scalable", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Scalable__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Scalable__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    return _wrap_new_Scalable__SWIG_4(self, argc, argv);
  }
check_3:
  
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    PyObject *retobj = _wrap_new_Scalable__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_4:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Scalable__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Scalable'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Scalable::Scalable()\n"
    "    csl::Scalable::Scalable(float)\n"
    "    csl::Scalable::Scalable(float,float)\n"
    "    csl::Scalable::Scalable(csl::UnitGenerator &,float)\n"
    "    csl::Scalable::Scalable(csl::UnitGenerator &,csl::UnitGenerator &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Scalable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Scalable *arg1 = (csl::Scalable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Scalable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Scalable" "', argument " "1"" of type '" "csl::Scalable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Scalable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scalable_setScale__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Scalable *arg1 = (csl::Scalable *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Scalable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scalable_setScale" "', argument " "1"" of type '" "csl::Scalable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Scalable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Scalable_setScale" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Scalable_setScale" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->setScale(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scalable_setScale__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Scalable *arg1 = (csl::Scalable *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Scalable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scalable_setScale" "', argument " "1"" of type '" "csl::Scalable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Scalable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Scalable_setScale" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setScale(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scalable_setScale(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Scalable_setScale", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_Scalable_setScale__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_Scalable_setScale__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Scalable_setScale'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Scalable::setScale(csl::UnitGenerator &)\n"
    "    csl::Scalable::setScale(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Scalable_setOffset__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Scalable *arg1 = (csl::Scalable *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Scalable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scalable_setOffset" "', argument " "1"" of type '" "csl::Scalable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Scalable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Scalable_setOffset" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Scalable_setOffset" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->setOffset(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scalable_setOffset__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Scalable *arg1 = (csl::Scalable *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Scalable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scalable_setOffset" "', argument " "1"" of type '" "csl::Scalable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Scalable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Scalable_setOffset" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setOffset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scalable_setOffset(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Scalable_setOffset", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_Scalable_setOffset__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_Scalable_setOffset__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Scalable_setOffset'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Scalable::setOffset(csl::UnitGenerator &)\n"
    "    csl::Scalable::setOffset(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Scalable_trigger(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Scalable *arg1 = (csl::Scalable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Scalable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scalable_trigger" "', argument " "1"" of type '" "csl::Scalable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Scalable * >(argp1);
  (arg1)->trigger();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scalable_isScaled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Scalable *arg1 = (csl::Scalable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Scalable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scalable_isScaled" "', argument " "1"" of type '" "csl::Scalable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Scalable * >(argp1);
  (arg1)->isScaled();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Scalable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Scalable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Scalable_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Effect__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Effect *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Effect *)new csl::Effect();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Effect, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Effect__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::Effect *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Effect" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Effect" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::Effect *)new csl::Effect(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Effect, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Effect(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Effect", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Effect__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Effect__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Effect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Effect::Effect()\n"
    "    csl::Effect::Effect(csl::UnitGenerator &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Effect_setInput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Effect *arg1 = (csl::Effect *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Effect_setInput", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Effect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Effect_setInput" "', argument " "1"" of type '" "csl::Effect *""'"); 
  }
  arg1 = reinterpret_cast< csl::Effect * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Effect_setInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Effect_setInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->setInput(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Effect_isInline_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Effect *arg1 = (csl::Effect *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Effect_isInline_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Effect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Effect_isInline_set" "', argument " "1"" of type '" "csl::Effect *""'"); 
  }
  arg1 = reinterpret_cast< csl::Effect * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Effect_isInline_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->isInline = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Effect_isInline_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Effect *arg1 = (csl::Effect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Effect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Effect_isInline_get" "', argument " "1"" of type '" "csl::Effect *""'"); 
  }
  arg1 = reinterpret_cast< csl::Effect * >(argp1);
  result = (bool) ((arg1)->isInline);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Effect_setInline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Effect *arg1 = (csl::Effect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Effect, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Effect_setInline" "', argument " "1"" of type '" "csl::Effect *""'"); 
  }
  arg1 = reinterpret_cast< csl::Effect * >(argp1);
  (arg1)->setInline();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Effect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Effect *arg1 = (csl::Effect *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Effect, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Effect" "', argument " "1"" of type '" "csl::Effect *""'"); 
  }
  arg1 = reinterpret_cast< csl::Effect * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Effect_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Effect, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Effect_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Phased__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Phased *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Phased *)new csl::Phased();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Phased, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Phased__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Phased *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Phased" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Phased" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Phased *)new csl::Phased(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Phased, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Phased__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::Phased *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Phased" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::Phased *)new csl::Phased(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Phased, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Phased__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Phased *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Phased" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Phased" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Phased" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Phased *)new csl::Phased(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Phased, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Phased__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::Phased *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Phased" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Phased" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::Phased *)new csl::Phased(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Phased, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Phased(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Phased", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Phased__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_Phased__SWIG_4(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Phased__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    PyObject *retobj = _wrap_new_Phased__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_4:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Phased__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Phased'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Phased::Phased()\n"
    "    csl::Phased::Phased(float,float)\n"
    "    csl::Phased::Phased(float)\n"
    "    csl::Phased::Phased(csl::UnitGenerator &,float)\n"
    "    csl::Phased::Phased(csl::UnitGenerator &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Phased(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Phased *arg1 = (csl::Phased *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Phased, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Phased" "', argument " "1"" of type '" "csl::Phased *""'"); 
  }
  arg1 = reinterpret_cast< csl::Phased * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Phased_setFrequency__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Phased *arg1 = (csl::Phased *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Phased, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Phased_setFrequency" "', argument " "1"" of type '" "csl::Phased *""'"); 
  }
  arg1 = reinterpret_cast< csl::Phased * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Phased_setFrequency" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Phased_setFrequency" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->setFrequency(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Phased_setFrequency__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Phased *arg1 = (csl::Phased *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Phased, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Phased_setFrequency" "', argument " "1"" of type '" "csl::Phased *""'"); 
  }
  arg1 = reinterpret_cast< csl::Phased * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Phased_setFrequency" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Phased_setFrequency(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Phased_setFrequency", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_Phased_setFrequency__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_Phased_setFrequency__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Phased_setFrequency'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Phased::setFrequency(csl::UnitGenerator &)\n"
    "    csl::Phased::setFrequency(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Phased_setPhase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Phased *arg1 = (csl::Phased *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Phased_setPhase", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Phased, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Phased_setPhase" "', argument " "1"" of type '" "csl::Phased *""'"); 
  }
  arg1 = reinterpret_cast< csl::Phased * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Phased_setPhase" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setPhase(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Phased_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Phased, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Phased_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_Writeable_writeBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Writeable *arg1 = (csl::Writeable *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Writeable_writeBuffer", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Writeable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Writeable_writeBuffer" "', argument " "1"" of type '" "csl::Writeable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Writeable * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Writeable_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Writeable_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->writeBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Writeable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Writeable *arg1 = (csl::Writeable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Writeable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Writeable" "', argument " "1"" of type '" "csl::Writeable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Writeable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Writeable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Writeable *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Writeable", 0, 0, 0)) SWIG_fail;
  result = (csl::Writeable *)new csl::Writeable();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Writeable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Writeable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Writeable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Writeable_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_Seekable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Seekable *arg1 = (csl::Seekable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Seekable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Seekable" "', argument " "1"" of type '" "csl::Seekable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Seekable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Seekable_mCurrentFrame_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Seekable *arg1 = (csl::Seekable *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Seekable_mCurrentFrame_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Seekable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Seekable_mCurrentFrame_set" "', argument " "1"" of type '" "csl::Seekable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Seekable * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Seekable_mCurrentFrame_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mCurrentFrame = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Seekable_mCurrentFrame_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Seekable *arg1 = (csl::Seekable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Seekable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Seekable_mCurrentFrame_get" "', argument " "1"" of type '" "csl::Seekable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Seekable * >(argp1);
  result = (unsigned int) ((arg1)->mCurrentFrame);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Seekable_mActualFrame_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Seekable *arg1 = (csl::Seekable *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Seekable_mActualFrame_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Seekable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Seekable_mActualFrame_set" "', argument " "1"" of type '" "csl::Seekable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Seekable * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Seekable_mActualFrame_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->mActualFrame = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Seekable_mActualFrame_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Seekable *arg1 = (csl::Seekable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Seekable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Seekable_mActualFrame_get" "', argument " "1"" of type '" "csl::Seekable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Seekable * >(argp1);
  result = (double) ((arg1)->mActualFrame);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Seekable_seekTo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Seekable *arg1 = (csl::Seekable *) 0 ;
  int arg2 ;
  csl::SeekPosition arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "Seekable_seekTo", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Seekable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Seekable_seekTo" "', argument " "1"" of type '" "csl::Seekable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Seekable * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Seekable_seekTo" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Seekable_seekTo" "', argument " "3"" of type '" "csl::SeekPosition""'");
  } 
  arg3 = static_cast< csl::SeekPosition >(val3);
  try {
    result = (unsigned int)(arg1)->seekTo(arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Seekable_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Seekable *arg1 = (csl::Seekable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Seekable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Seekable_reset" "', argument " "1"" of type '" "csl::Seekable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Seekable * >(argp1);
  try {
    (arg1)->reset();
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Seekable_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Seekable *arg1 = (csl::Seekable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Seekable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Seekable_duration" "', argument " "1"" of type '" "csl::Seekable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Seekable * >(argp1);
  result = (unsigned int)(arg1)->duration();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Seekable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Seekable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Cacheable__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Cacheable *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Cacheable *)new csl::Cacheable();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Cacheable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Cacheable__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  csl::Cacheable *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Cacheable" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (csl::Cacheable *)new csl::Cacheable(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Cacheable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Cacheable(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Cacheable", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Cacheable__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Cacheable__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Cacheable'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Cacheable::Cacheable()\n"
    "    csl::Cacheable::Cacheable(bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Cacheable_mUseCache_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Cacheable *arg1 = (csl::Cacheable *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Cacheable_mUseCache_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Cacheable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cacheable_mUseCache_set" "', argument " "1"" of type '" "csl::Cacheable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Cacheable * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Cacheable_mUseCache_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mUseCache = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Cacheable_mUseCache_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Cacheable *arg1 = (csl::Cacheable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Cacheable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Cacheable_mUseCache_get" "', argument " "1"" of type '" "csl::Cacheable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Cacheable * >(argp1);
  result = (bool) ((arg1)->mUseCache);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Cacheable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Cacheable *arg1 = (csl::Cacheable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Cacheable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Cacheable" "', argument " "1"" of type '" "csl::Cacheable *""'"); 
  }
  arg1 = reinterpret_cast< csl::Cacheable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Cacheable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Cacheable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Cacheable_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FanOut(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::FanOut *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_FanOut", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FanOut" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FanOut" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FanOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::FanOut *)new csl::FanOut(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FanOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FanOut(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FanOut *arg1 = (csl::FanOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FanOut, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FanOut" "', argument " "1"" of type '" "csl::FanOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::FanOut * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FanOut_nextBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FanOut *arg1 = (csl::FanOut *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FanOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FanOut_nextBuffer" "', argument " "1"" of type '" "csl::FanOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::FanOut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FanOut_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FanOut_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->nextBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FanOut_nextBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FanOut *arg1 = (csl::FanOut *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FanOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FanOut_nextBuffer" "', argument " "1"" of type '" "csl::FanOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::FanOut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FanOut_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FanOut_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FanOut_nextBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->nextBuffer(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FanOut_nextBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FanOut_nextBuffer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_FanOut_nextBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_FanOut_nextBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FanOut_nextBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FanOut::nextBuffer(csl::Buffer &)\n"
    "    csl::FanOut::nextBuffer(csl::Buffer &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *FanOut_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__FanOut, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FanOut_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Splitter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Splitter *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Splitter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Splitter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::Splitter *)new csl::Splitter(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Splitter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Splitter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Splitter *arg1 = (csl::Splitter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Splitter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Splitter" "', argument " "1"" of type '" "csl::Splitter *""'"); 
  }
  arg1 = reinterpret_cast< csl::Splitter * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Splitter_nextBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Splitter *arg1 = (csl::Splitter *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Splitter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Splitter_nextBuffer" "', argument " "1"" of type '" "csl::Splitter *""'"); 
  }
  arg1 = reinterpret_cast< csl::Splitter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Splitter_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Splitter_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->nextBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Splitter_nextBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Splitter *arg1 = (csl::Splitter *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Splitter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Splitter_nextBuffer" "', argument " "1"" of type '" "csl::Splitter *""'"); 
  }
  arg1 = reinterpret_cast< csl::Splitter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Splitter_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Splitter_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Splitter_nextBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->nextBuffer(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Splitter_nextBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Splitter_nextBuffer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_Splitter_nextBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_Splitter_nextBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Splitter_nextBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Splitter::nextBuffer(csl::Buffer &)\n"
    "    csl::Splitter::nextBuffer(csl::Buffer &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *Splitter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Splitter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Splitter_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Joiner__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Joiner *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Joiner *)new csl::Joiner();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Joiner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Joiner__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::Joiner *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Joiner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Joiner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Joiner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Joiner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::Joiner *)new csl::Joiner(*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Joiner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Joiner(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Joiner", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Joiner__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Joiner__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Joiner'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Joiner::Joiner()\n"
    "    csl::Joiner::Joiner(csl::UnitGenerator &,csl::UnitGenerator &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Joiner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Joiner *arg1 = (csl::Joiner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Joiner, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Joiner" "', argument " "1"" of type '" "csl::Joiner *""'"); 
  }
  arg1 = reinterpret_cast< csl::Joiner * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joiner_nextBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Joiner *arg1 = (csl::Joiner *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Joiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joiner_nextBuffer" "', argument " "1"" of type '" "csl::Joiner *""'"); 
  }
  arg1 = reinterpret_cast< csl::Joiner * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Joiner_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Joiner_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->nextBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joiner_nextBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Joiner *arg1 = (csl::Joiner *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Joiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joiner_nextBuffer" "', argument " "1"" of type '" "csl::Joiner *""'"); 
  }
  arg1 = reinterpret_cast< csl::Joiner * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Joiner_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Joiner_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Joiner_nextBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->nextBuffer(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Joiner_nextBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Joiner_nextBuffer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_Joiner_nextBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_Joiner_nextBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Joiner_nextBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Joiner::nextBuffer(csl::Buffer &)\n"
    "    csl::Joiner::nextBuffer(csl::Buffer &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Joiner_addInput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Joiner *arg1 = (csl::Joiner *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Joiner_addInput", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Joiner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Joiner_addInput" "', argument " "1"" of type '" "csl::Joiner *""'"); 
  }
  arg1 = reinterpret_cast< csl::Joiner * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Joiner_addInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Joiner_addInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->addInput(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Joiner_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Joiner, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Joiner_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_Interleaver_interleave__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Interleaver *arg1 = (csl::Interleaver *) 0 ;
  csl::Buffer *arg2 = 0 ;
  csl::SampleBuffer arg3 = (csl::SampleBuffer) 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Interleaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Interleaver_interleave" "', argument " "1"" of type '" "csl::Interleaver *""'"); 
  }
  arg1 = reinterpret_cast< csl::Interleaver * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Interleaver_interleave" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Interleaver_interleave" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Interleaver_interleave" "', argument " "3"" of type '" "csl::SampleBuffer""'"); 
  }
  arg3 = reinterpret_cast< csl::SampleBuffer >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Interleaver_interleave" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Interleaver_interleave" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  try {
    (arg1)->interleave(*arg2,arg3,arg4,arg5);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Interleaver_interleave__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Interleaver *arg1 = (csl::Interleaver *) 0 ;
  csl::Buffer *arg2 = 0 ;
  short *arg3 = (short *) 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Interleaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Interleaver_interleave" "', argument " "1"" of type '" "csl::Interleaver *""'"); 
  }
  arg1 = reinterpret_cast< csl::Interleaver * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Interleaver_interleave" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Interleaver_interleave" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Interleaver_interleave" "', argument " "3"" of type '" "short *""'"); 
  }
  arg3 = reinterpret_cast< short * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Interleaver_interleave" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Interleaver_interleave" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  try {
    (arg1)->interleave(*arg2,arg3,arg4,arg5);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Interleaver_interleave(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Interleaver_interleave", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    PyObject *retobj = _wrap_Interleaver_interleave__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_1:
  
  if (argc == 5) {
    PyObject *retobj = _wrap_Interleaver_interleave__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Interleaver_interleave'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Interleaver::interleave(csl::Buffer &,csl::SampleBuffer,unsigned int,unsigned int)\n"
    "    csl::Interleaver::interleave(csl::Buffer &,short *,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Interleaver_interleaveAndRemap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Interleaver *arg1 = (csl::Interleaver *) 0 ;
  csl::Buffer *arg2 = 0 ;
  csl::SampleBuffer arg3 = (csl::SampleBuffer) 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  unsigned int *arg6 = (unsigned int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject *swig_obj[6] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Interleaver_interleaveAndRemap", 6, 6, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Interleaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Interleaver_interleaveAndRemap" "', argument " "1"" of type '" "csl::Interleaver *""'"); 
  }
  arg1 = reinterpret_cast< csl::Interleaver * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Interleaver_interleaveAndRemap" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Interleaver_interleaveAndRemap" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Interleaver_interleaveAndRemap" "', argument " "3"" of type '" "csl::SampleBuffer""'"); 
  }
  arg3 = reinterpret_cast< csl::SampleBuffer >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Interleaver_interleaveAndRemap" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Interleaver_interleaveAndRemap" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "Interleaver_interleaveAndRemap" "', argument " "6"" of type '" "unsigned int *""'"); 
  }
  arg6 = reinterpret_cast< unsigned int * >(argp6);
  try {
    (arg1)->interleaveAndRemap(*arg2,arg3,arg4,arg5,arg6);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Interleaver_deinterleave__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Interleaver *arg1 = (csl::Interleaver *) 0 ;
  csl::Buffer *arg2 = 0 ;
  csl::SampleBuffer arg3 = (csl::SampleBuffer) 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Interleaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Interleaver_deinterleave" "', argument " "1"" of type '" "csl::Interleaver *""'"); 
  }
  arg1 = reinterpret_cast< csl::Interleaver * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Interleaver_deinterleave" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Interleaver_deinterleave" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Interleaver_deinterleave" "', argument " "3"" of type '" "csl::SampleBuffer""'"); 
  }
  arg3 = reinterpret_cast< csl::SampleBuffer >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Interleaver_deinterleave" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Interleaver_deinterleave" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  try {
    (arg1)->deinterleave(*arg2,arg3,arg4,arg5);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Interleaver_deinterleave__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Interleaver *arg1 = (csl::Interleaver *) 0 ;
  csl::Buffer *arg2 = 0 ;
  short *arg3 = (short *) 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Interleaver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Interleaver_deinterleave" "', argument " "1"" of type '" "csl::Interleaver *""'"); 
  }
  arg1 = reinterpret_cast< csl::Interleaver * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Interleaver_deinterleave" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Interleaver_deinterleave" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Interleaver_deinterleave" "', argument " "3"" of type '" "short *""'"); 
  }
  arg3 = reinterpret_cast< short * >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Interleaver_deinterleave" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Interleaver_deinterleave" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  try {
    (arg1)->deinterleave(*arg2,arg3,arg4,arg5);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Interleaver_deinterleave(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Interleaver_deinterleave", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 5) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    PyObject *retobj = _wrap_Interleaver_deinterleave__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_1:
  
  if (argc == 5) {
    PyObject *retobj = _wrap_Interleaver_deinterleave__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Interleaver_deinterleave'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Interleaver::deinterleave(csl::Buffer &,csl::SampleBuffer,unsigned int,unsigned int)\n"
    "    csl::Interleaver::deinterleave(csl::Buffer &,short *,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_Interleaver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Interleaver *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Interleaver", 0, 0, 0)) SWIG_fail;
  result = (csl::Interleaver *)new csl::Interleaver();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Interleaver, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Interleaver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Interleaver *arg1 = (csl::Interleaver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Interleaver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Interleaver" "', argument " "1"" of type '" "csl::Interleaver *""'"); 
  }
  arg1 = reinterpret_cast< csl::Interleaver * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Interleaver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Interleaver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Interleaver_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_IO__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  int arg3 ;
  int arg4 ;
  unsigned int arg5 ;
  unsigned int arg6 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  csl::IO *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IO" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_IO" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_IO" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_IO" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_IO" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  result = (csl::IO *)new csl::IO(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IO__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  int arg3 ;
  int arg4 ;
  unsigned int arg5 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  csl::IO *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IO" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_IO" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_IO" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_IO" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (csl::IO *)new csl::IO(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IO__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  int arg3 ;
  int arg4 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  csl::IO *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IO" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_IO" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_IO" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (csl::IO *)new csl::IO(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IO__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  int arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  csl::IO *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IO" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_IO" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (csl::IO *)new csl::IO(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IO__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::IO *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IO" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::IO *)new csl::IO(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IO__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::IO *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::IO *)new csl::IO(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IO__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::IO *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::IO *)new csl::IO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IO(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_IO", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_IO__SWIG_6(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_IO__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_IO__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_IO__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_IO__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_new_IO__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 6) {
    PyObject *retobj = _wrap_new_IO__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_IO'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::IO::IO(unsigned int,unsigned int,int,int,unsigned int,unsigned int)\n"
    "    csl::IO::IO(unsigned int,unsigned int,int,int,unsigned int)\n"
    "    csl::IO::IO(unsigned int,unsigned int,int,int)\n"
    "    csl::IO::IO(unsigned int,unsigned int,int)\n"
    "    csl::IO::IO(unsigned int,unsigned int)\n"
    "    csl::IO::IO(unsigned int)\n"
    "    csl::IO::IO()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IO" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_open" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  try {
    (arg1)->open();
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_close(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_close" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  try {
    (arg1)->close();
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_start" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  try {
    (arg1)->start();
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_stop" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  try {
    (arg1)->stop();
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_test(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_test" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  try {
    (arg1)->test();
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_capture_on(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_capture_on", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_capture_on" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_capture_on" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->capture_on(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_capture_off(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_capture_off" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  (arg1)->capture_off();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_get_capture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Buffer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_get_capture" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (csl::Buffer *)(arg1)->get_capture();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_setRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_setRoot", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_setRoot" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_setRoot" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IO_setRoot" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->setRoot(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_clearRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_clearRoot" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  (arg1)->clearRoot();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_pullInput__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  csl::Buffer *arg2 = 0 ;
  csl::SampleBuffer arg3 = (csl::SampleBuffer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_pullInput" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_pullInput" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IO_pullInput" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IO_pullInput" "', argument " "3"" of type '" "csl::SampleBuffer""'"); 
  }
  arg3 = reinterpret_cast< csl::SampleBuffer >(argp3);
  try {
    (arg1)->pullInput(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_pullInput__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_pullInput" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_pullInput" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IO_pullInput" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->pullInput(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_pullInput(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "IO_pullInput", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_IO_pullInput__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_IO_pullInput__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'IO_pullInput'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::IO::pullInput(csl::Buffer &,csl::SampleBuffer)\n"
    "    csl::IO::pullInput(csl::Buffer &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IO_getInput__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::Buffer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_getInput" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  try {
    result = (csl::Buffer *) &(arg1)->getInput();
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_getInput__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  csl::Buffer *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_getInput" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_getInput" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IO_getInput" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    result = (csl::Buffer *) &(arg1)->getInput(arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_getInput(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "IO_getInput", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_IO_getInput__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_IO_getInput__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'IO_getInput'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::IO::getInput()\n"
    "    csl::IO::getInput(unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IO_getAndIncrementSequence(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_getAndIncrementSequence" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (unsigned int)(arg1)->getAndIncrementSequence();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mGraph_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  csl::UnitGenerator *arg2 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mGraph_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mGraph_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_mGraph_set" "', argument " "2"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  if (arg1) (arg1)->mGraph = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mGraph_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::UnitGenerator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mGraph_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (csl::UnitGenerator *) ((arg1)->mGraph);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mInputBuffer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  csl::Buffer *arg2 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mInputBuffer_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mInputBuffer_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_mInputBuffer_set" "', argument " "2"" of type '" "csl::Buffer *""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  if (arg1) (arg1)->mInputBuffer = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mInputBuffer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Buffer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mInputBuffer_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (csl::Buffer *)& ((arg1)->mInputBuffer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mOutputBuffer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  csl::Buffer *arg2 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mOutputBuffer_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mOutputBuffer_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_mOutputBuffer_set" "', argument " "2"" of type '" "csl::Buffer *""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  if (arg1) (arg1)->mOutputBuffer = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mOutputBuffer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Buffer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mOutputBuffer_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (csl::Buffer *)& ((arg1)->mOutputBuffer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mCaptureBuffer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  csl::Buffer *arg2 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mCaptureBuffer_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mCaptureBuffer_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_mCaptureBuffer_set" "', argument " "2"" of type '" "csl::Buffer *""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  if (arg1) (arg1)->mCaptureBuffer = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mCaptureBuffer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Buffer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mCaptureBuffer_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (csl::Buffer *)& ((arg1)->mCaptureBuffer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mInputPointer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  csl::SampleBuffer arg2 = (csl::SampleBuffer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mInputPointer_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mInputPointer_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_mInputPointer_set" "', argument " "2"" of type '" "csl::SampleBuffer""'"); 
  }
  arg2 = reinterpret_cast< csl::SampleBuffer >(argp2);
  if (arg1) (arg1)->mInputPointer = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mInputPointer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::SampleBuffer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mInputPointer_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (csl::SampleBuffer) ((arg1)->mInputPointer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mChannelMap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mChannelMap_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mChannelMap_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_unsigned_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_mChannelMap_set" "', argument " "2"" of type '" "unsigned int *""'"); 
  }
  arg2 = reinterpret_cast< unsigned int * >(argp2);
  if (arg1) (arg1)->mChannelMap = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mChannelMap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mChannelMap_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (unsigned int *) ((arg1)->mChannelMap);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNumFramesPlayed_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mNumFramesPlayed_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNumFramesPlayed_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mNumFramesPlayed_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mNumFramesPlayed = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNumFramesPlayed_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNumFramesPlayed_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (unsigned int) ((arg1)->mNumFramesPlayed);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mSequence_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mSequence_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mSequence_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mSequence_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mSequence = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mSequence_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mSequence_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (unsigned int) ((arg1)->mSequence);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mLoggingPeriod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mLoggingPeriod_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mLoggingPeriod_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mLoggingPeriod_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mLoggingPeriod = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mLoggingPeriod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mLoggingPeriod_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (unsigned int) ((arg1)->mLoggingPeriod);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNumInChannels_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mNumInChannels_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNumInChannels_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mNumInChannels_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mNumInChannels = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNumInChannels_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNumInChannels_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (unsigned int) ((arg1)->mNumInChannels);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNumOutChannels_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mNumOutChannels_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNumOutChannels_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mNumOutChannels_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mNumOutChannels = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNumOutChannels_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNumOutChannels_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (unsigned int) ((arg1)->mNumOutChannels);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNumRealInChannels_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mNumRealInChannels_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNumRealInChannels_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mNumRealInChannels_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mNumRealInChannels = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNumRealInChannels_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNumRealInChannels_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (unsigned int) ((arg1)->mNumRealInChannels);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNumRealOutChannels_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mNumRealOutChannels_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNumRealOutChannels_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mNumRealOutChannels_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mNumRealOutChannels = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNumRealOutChannels_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNumRealOutChannels_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (unsigned int) ((arg1)->mNumRealOutChannels);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mStatus_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  csl::IO_Status arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mStatus_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mStatus_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mStatus_set" "', argument " "2"" of type '" "csl::IO_Status""'");
  } 
  arg2 = static_cast< csl::IO_Status >(val2);
  if (arg1) (arg1)->mStatus = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mStatus_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::IO_Status result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mStatus_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (csl::IO_Status) ((arg1)->mStatus);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mInterleaved_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mInterleaved_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mInterleaved_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mInterleaved_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mInterleaved = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mInterleaved_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mInterleaved_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (bool) ((arg1)->mInterleaved);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mOffset_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mOffset_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mOffset_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mOffset_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mOffset = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mOffset_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mOffset_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (unsigned int) ((arg1)->mOffset);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mThen_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  timeval arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mThen_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mThen_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_timeval,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_mThen_set" "', argument " "2"" of type '" "timeval""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IO_mThen_set" "', argument " "2"" of type '" "timeval""'");
    } else {
      timeval * temp = reinterpret_cast< timeval * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->mThen = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mThen_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  timeval result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mThen_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result =  ((arg1)->mThen);
  resultobj = SWIG_NewPointerObj((new timeval(static_cast< const timeval& >(result))), SWIGTYPE_p_timeval, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNow_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  timeval arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mNow_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNow_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_timeval,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_mNow_set" "', argument " "2"" of type '" "timeval""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IO_mNow_set" "', argument " "2"" of type '" "timeval""'");
    } else {
      timeval * temp = reinterpret_cast< timeval * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->mNow = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mNow_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  timeval result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mNow_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result =  ((arg1)->mNow);
  resultobj = SWIG_NewPointerObj((new timeval(static_cast< const timeval& >(result))), SWIGTYPE_p_timeval, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mTimeVals_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mTimeVals_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mTimeVals_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mTimeVals_set" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  if (arg1) (arg1)->mTimeVals = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mTimeVals_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mTimeVals_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (long) ((arg1)->mTimeVals);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mThisSec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mThisSec_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mThisSec_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mThisSec_set" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  if (arg1) (arg1)->mThisSec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mThisSec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mThisSec_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (long) ((arg1)->mThisSec);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mTimeSum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mTimeSum_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mTimeSum_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mTimeSum_set" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  if (arg1) (arg1)->mTimeSum = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mTimeSum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mTimeSum_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (long) ((arg1)->mTimeSum);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mUsage_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_mUsage_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mUsage_set" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IO_mUsage_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->mUsage = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_mUsage_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_mUsage_get" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  result = (float) ((arg1)->mUsage);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IO_printTimeStatistics(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  timeval *arg2 = (timeval *) 0 ;
  timeval *arg3 = (timeval *) 0 ;
  long *arg4 = (long *) 0 ;
  long *arg5 = (long *) 0 ;
  long *arg6 = (long *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject *swig_obj[6] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IO_printTimeStatistics", 6, 6, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IO_printTimeStatistics" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_timeval, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IO_printTimeStatistics" "', argument " "2"" of type '" "timeval *""'"); 
  }
  arg2 = reinterpret_cast< timeval * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_timeval, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IO_printTimeStatistics" "', argument " "3"" of type '" "timeval *""'"); 
  }
  arg3 = reinterpret_cast< timeval * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IO_printTimeStatistics" "', argument " "4"" of type '" "long *""'"); 
  }
  arg4 = reinterpret_cast< long * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_long, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IO_printTimeStatistics" "', argument " "5"" of type '" "long *""'"); 
  }
  arg5 = reinterpret_cast< long * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6,SWIGTYPE_p_long, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "IO_printTimeStatistics" "', argument " "6"" of type '" "long *""'"); 
  }
  arg6 = reinterpret_cast< long * >(argp6);
  (arg1)->printTimeStatistics(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__IO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *IO_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_IODevice__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::IODevice *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::IODevice *)new csl::IODevice();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IODevice, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IODevice__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  bool arg5 ;
  bool arg6 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  csl::IODevice *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IODevice" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IODevice" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_IODevice" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_IODevice" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_IODevice" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_IODevice" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (csl::IODevice *)new csl::IODevice(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IODevice, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IODevice__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  bool arg5 ;
  bool arg6 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  csl::IODevice *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_IODevice" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IODevice" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_IODevice" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_IODevice" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_bool(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_IODevice" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_IODevice" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  result = (csl::IODevice *)new csl::IODevice(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IODevice, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IODevice(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_IODevice", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_IODevice__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 6) {
    int _v = 0;
    {
      int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    PyObject *retobj = _wrap_new_IODevice__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_2:
  
  if (argc == 6) {
    PyObject *retobj = _wrap_new_IODevice__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_IODevice'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::IODevice::IODevice()\n"
    "    csl::IODevice::IODevice(char *,unsigned int,unsigned int,unsigned int,bool,bool)\n"
    "    csl::IODevice::IODevice(std::string,unsigned int,unsigned int,unsigned int,bool,bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IODevice_mName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IODevice_mName_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mName_set" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  res2 = SWIG_AsCharArray(swig_obj[1], temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IODevice_mName_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->mName,arg2,256*sizeof(char));
  else memset(arg1->mName,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mName_get" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  result = (char *)(char *) ((arg1)->mName);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mIndex_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IODevice_mIndex_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mIndex_set" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IODevice_mIndex_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mIndex = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mIndex_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mIndex_get" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  result = (unsigned int) ((arg1)->mIndex);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mMaxInputChannels_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IODevice_mMaxInputChannels_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mMaxInputChannels_set" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IODevice_mMaxInputChannels_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mMaxInputChannels = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mMaxInputChannels_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mMaxInputChannels_get" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  result = (unsigned int) ((arg1)->mMaxInputChannels);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mMaxOutputChannels_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IODevice_mMaxOutputChannels_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mMaxOutputChannels_set" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IODevice_mMaxOutputChannels_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mMaxOutputChannels = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mMaxOutputChannels_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mMaxOutputChannels_get" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  result = (unsigned int) ((arg1)->mMaxOutputChannels);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mFrameRate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IODevice_mFrameRate_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mFrameRate_set" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IODevice_mFrameRate_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->mFrameRate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mFrameRate_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mFrameRate_get" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  result = (float) ((arg1)->mFrameRate);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mFrameRates_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  std::vector< float > *arg2 = (std::vector< float > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IODevice_mFrameRates_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mFrameRates_set" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IODevice_mFrameRates_set" "', argument " "2"" of type '" "std::vector< float > *""'"); 
  }
  arg2 = reinterpret_cast< std::vector< float > * >(argp2);
  if (arg1) (arg1)->mFrameRates = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mFrameRates_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::vector< float > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mFrameRates_get" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  result = (std::vector< float > *)& ((arg1)->mFrameRates);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_float_std__allocatorT_float_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mIsDefaultIn_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IODevice_mIsDefaultIn_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mIsDefaultIn_set" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IODevice_mIsDefaultIn_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mIsDefaultIn = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mIsDefaultIn_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mIsDefaultIn_get" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  result = (bool) ((arg1)->mIsDefaultIn);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mIsDefaultOut_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IODevice_mIsDefaultOut_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mIsDefaultOut_set" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IODevice_mIsDefaultOut_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mIsDefaultOut = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_mIsDefaultOut_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_mIsDefaultOut_get" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  result = (bool) ((arg1)->mIsDefaultOut);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IODevice_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IODevice_dump" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  (arg1)->dump();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IODevice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IODevice *arg1 = (csl::IODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IODevice, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IODevice" "', argument " "1"" of type '" "csl::IODevice *""'"); 
  }
  arg1 = reinterpret_cast< csl::IODevice * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IODevice_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__IODevice, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *IODevice_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_RingBufferTap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  csl::RingBufferTap *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RingBufferTap" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RingBufferTap" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (csl::RingBufferTap *)new csl::RingBufferTap(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RingBufferTap, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RingBufferTap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::RingBufferTap *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RingBufferTap" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  result = (csl::RingBufferTap *)new csl::RingBufferTap(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RingBufferTap, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RingBufferTap__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::RingBufferTap *)new csl::RingBufferTap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RingBufferTap, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RingBufferTap(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_RingBufferTap", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_RingBufferTap__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_RingBufferTap__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_RingBufferTap__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_RingBufferTap'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::RingBufferTap::RingBufferTap(csl::RingBuffer *,int)\n"
    "    csl::RingBufferTap::RingBufferTap(csl::RingBuffer *)\n"
    "    csl::RingBufferTap::RingBufferTap()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_mLoopStartFrame_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBufferTap_mLoopStartFrame_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_mLoopStartFrame_set" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RingBufferTap_mLoopStartFrame_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mLoopStartFrame = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_mLoopStartFrame_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_mLoopStartFrame_get" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  result = (unsigned int) ((arg1)->mLoopStartFrame);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_mLoopEndFrame_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBufferTap_mLoopEndFrame_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_mLoopEndFrame_set" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RingBufferTap_mLoopEndFrame_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mLoopEndFrame = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_mLoopEndFrame_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_mLoopEndFrame_get" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  result = (unsigned int) ((arg1)->mLoopEndFrame);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_setOffset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBufferTap_setOffset", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_setOffset" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RingBufferTap_setOffset" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setOffset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_setLoopStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBufferTap_setLoopStart", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_setLoopStart" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RingBufferTap_setLoopStart" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setLoopStart(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_setLoopEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBufferTap_setLoopEnd", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_setLoopEnd" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RingBufferTap_setLoopEnd" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setLoopEnd(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_setBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  csl::RingBuffer *arg2 = (csl::RingBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBufferTap_setBuffer", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_setBuffer" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBufferTap_setBuffer" "', argument " "2"" of type '" "csl::RingBuffer *""'"); 
  }
  arg2 = reinterpret_cast< csl::RingBuffer * >(argp2);
  (arg1)->setBuffer(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_nextBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_nextBuffer" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBufferTap_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RingBufferTap_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->nextBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_nextBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_nextBuffer" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBufferTap_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RingBufferTap_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RingBufferTap_nextBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->nextBuffer(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_nextBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "RingBufferTap_nextBuffer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_RingBufferTap_nextBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_RingBufferTap_nextBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'RingBufferTap_nextBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::RingBufferTap::nextBuffer(csl::Buffer &)\n"
    "    csl::RingBufferTap::nextBuffer(csl::Buffer &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_destructiveNextBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_destructiveNextBuffer" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBufferTap_destructiveNextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RingBufferTap_destructiveNextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->destructiveNextBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_destructiveNextBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBufferTap_destructiveNextBuffer" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBufferTap_destructiveNextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RingBufferTap_destructiveNextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RingBufferTap_destructiveNextBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->destructiveNextBuffer(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBufferTap_destructiveNextBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "RingBufferTap_destructiveNextBuffer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_RingBufferTap_destructiveNextBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_RingBufferTap_destructiveNextBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'RingBufferTap_destructiveNextBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::RingBufferTap::destructiveNextBuffer(csl::Buffer &)\n"
    "    csl::RingBufferTap::destructiveNextBuffer(csl::Buffer &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_RingBufferTap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBufferTap *arg1 = (csl::RingBufferTap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBufferTap, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RingBufferTap" "', argument " "1"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBufferTap * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RingBufferTap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__RingBufferTap, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *RingBufferTap_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_RingBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::RingBuffer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::RingBuffer *)new csl::RingBuffer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RingBuffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RingBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::RingBuffer *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RingBuffer" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RingBuffer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::RingBuffer *)new csl::RingBuffer(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RingBuffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RingBuffer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  csl::RingBuffer *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_RingBuffer" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_RingBuffer" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RingBuffer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RingBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (csl::RingBuffer *)new csl::RingBuffer(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RingBuffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RingBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_RingBuffer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_RingBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_RingBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_RingBuffer__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_RingBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::RingBuffer::RingBuffer()\n"
    "    csl::RingBuffer::RingBuffer(unsigned int,unsigned int)\n"
    "    csl::RingBuffer::RingBuffer(csl::UnitGenerator &,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_RingBuffer_mCurrentWriteFrame_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBuffer_mCurrentWriteFrame_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_mCurrentWriteFrame_set" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RingBuffer_mCurrentWriteFrame_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mCurrentWriteFrame = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_mCurrentWriteFrame_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_mCurrentWriteFrame_get" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  result = (unsigned int) ((arg1)->mCurrentWriteFrame);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_mBuffer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  csl::Buffer *arg2 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBuffer_mBuffer_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_mBuffer_set" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBuffer_mBuffer_set" "', argument " "2"" of type '" "csl::Buffer *""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  if (arg1) (arg1)->mBuffer = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_mBuffer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Buffer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_mBuffer_get" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  result = (csl::Buffer *)& ((arg1)->mBuffer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_mTap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  csl::RingBufferTap *arg2 = (csl::RingBufferTap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBuffer_mTap_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_mTap_set" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBuffer_mTap_set" "', argument " "2"" of type '" "csl::RingBufferTap *""'"); 
  }
  arg2 = reinterpret_cast< csl::RingBufferTap * >(argp2);
  if (arg1) (arg1)->mTap = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_mTap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::RingBufferTap *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_mTap_get" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  result = (csl::RingBufferTap *)& ((arg1)->mTap);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RingBufferTap, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_seekTo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBuffer_seekTo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_seekTo" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RingBuffer_seekTo" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  try {
    result = (unsigned int)(arg1)->seekTo(arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_setLoopStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBuffer_setLoopStart", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_setLoopStart" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RingBuffer_setLoopStart" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setLoopStart(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_setLoopEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBuffer_setLoopEnd", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_setLoopEnd" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RingBuffer_setLoopEnd" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setLoopEnd(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_writeBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_writeBuffer" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBuffer_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RingBuffer_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->writeBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_sumIntoBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_sumIntoBuffer" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBuffer_sumIntoBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RingBuffer_sumIntoBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->sumIntoBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_destructiveNextBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RingBuffer_destructiveNextBuffer", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_destructiveNextBuffer" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBuffer_destructiveNextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RingBuffer_destructiveNextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->destructiveNextBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_writeBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_writeBuffer" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBuffer_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RingBuffer_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RingBuffer_writeBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->writeBuffer(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_writeBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "RingBuffer_writeBuffer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_RingBuffer_writeBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_RingBuffer_writeBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'RingBuffer_writeBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::RingBuffer::writeBuffer(csl::Buffer &)\n"
    "    csl::RingBuffer::writeBuffer(csl::Buffer &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_RingBuffer_sumIntoBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RingBuffer_sumIntoBuffer" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RingBuffer_sumIntoBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RingBuffer_sumIntoBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RingBuffer_sumIntoBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->sumIntoBuffer(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RingBuffer_sumIntoBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "RingBuffer_sumIntoBuffer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_RingBuffer_sumIntoBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_RingBuffer_sumIntoBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'RingBuffer_sumIntoBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::RingBuffer::sumIntoBuffer(csl::Buffer &)\n"
    "    csl::RingBuffer::sumIntoBuffer(csl::Buffer &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_RingBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RingBuffer *arg1 = (csl::RingBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RingBuffer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RingBuffer" "', argument " "1"" of type '" "csl::RingBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::RingBuffer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RingBuffer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__RingBuffer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *RingBuffer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BufferStream__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::BufferStream *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::BufferStream *)new csl::BufferStream();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BufferStream, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BufferStream__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::BufferStream *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BufferStream" "', argument " "1"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BufferStream" "', argument " "1"" of type '" "csl::Buffer &""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (csl::BufferStream *)new csl::BufferStream(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BufferStream, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BufferStream(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_BufferStream", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_BufferStream__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_BufferStream__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_BufferStream'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::BufferStream::BufferStream()\n"
    "    csl::BufferStream::BufferStream(csl::Buffer &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_BufferStream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BufferStream *arg1 = (csl::BufferStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BufferStream, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BufferStream" "', argument " "1"" of type '" "csl::BufferStream *""'"); 
  }
  arg1 = reinterpret_cast< csl::BufferStream * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BufferStream_setBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BufferStream *arg1 = (csl::BufferStream *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BufferStream_setBuffer", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BufferStream, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufferStream_setBuffer" "', argument " "1"" of type '" "csl::BufferStream *""'"); 
  }
  arg1 = reinterpret_cast< csl::BufferStream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BufferStream_setBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufferStream_setBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  (arg1)->setBuffer(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BufferStream_nextBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::BufferStream *arg1 = (csl::BufferStream *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BufferStream, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufferStream_nextBuffer" "', argument " "1"" of type '" "csl::BufferStream *""'"); 
  }
  arg1 = reinterpret_cast< csl::BufferStream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BufferStream_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufferStream_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->nextBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BufferStream_nextBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::BufferStream *arg1 = (csl::BufferStream *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BufferStream, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufferStream_nextBuffer" "', argument " "1"" of type '" "csl::BufferStream *""'"); 
  }
  arg1 = reinterpret_cast< csl::BufferStream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BufferStream_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufferStream_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BufferStream_nextBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->nextBuffer(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BufferStream_nextBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BufferStream_nextBuffer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_BufferStream_nextBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_BufferStream_nextBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BufferStream_nextBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::BufferStream::nextBuffer(csl::Buffer &)\n"
    "    csl::BufferStream::nextBuffer(csl::Buffer &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BufferStream_writeBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::BufferStream *arg1 = (csl::BufferStream *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BufferStream, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufferStream_writeBuffer" "', argument " "1"" of type '" "csl::BufferStream *""'"); 
  }
  arg1 = reinterpret_cast< csl::BufferStream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BufferStream_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufferStream_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->writeBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BufferStream_writeBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::BufferStream *arg1 = (csl::BufferStream *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BufferStream, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BufferStream_writeBuffer" "', argument " "1"" of type '" "csl::BufferStream *""'"); 
  }
  arg1 = reinterpret_cast< csl::BufferStream * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BufferStream_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BufferStream_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BufferStream_writeBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->writeBuffer(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BufferStream_writeBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "BufferStream_writeBuffer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_BufferStream_writeBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_BufferStream_writeBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'BufferStream_writeBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::BufferStream::writeBuffer(csl::Buffer &)\n"
    "    csl::BufferStream::writeBuffer(csl::Buffer &,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *BufferStream_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__BufferStream, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BufferStream_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_CVariable__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::CVariable *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::CVariable *)new csl::CVariable();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CVariable__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::CVariable *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CVariable" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::CVariable *)new csl::CVariable(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CVariable(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_CVariable", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_CVariable__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_CVariable__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_CVariable'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::CVariable::CVariable()\n"
    "    csl::CVariable::CVariable(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CVariable_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CVariable *arg1 = (csl::CVariable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CVariable_value" "', argument " "1"" of type '" "csl::CVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::CVariable * >(argp1);
  result = (float)(arg1)->value();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CVariable_setValue__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CVariable *arg1 = (csl::CVariable *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CVariable_setValue" "', argument " "1"" of type '" "csl::CVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::CVariable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CVariable_setValue" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CVariable_setValue__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CVariable *arg1 = (csl::CVariable *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CVariable_setValue" "', argument " "1"" of type '" "csl::CVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::CVariable * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CVariable_setValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CVariable_setValue__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CVariable *arg1 = (csl::CVariable *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CVariable_setValue" "', argument " "1"" of type '" "csl::CVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::CVariable * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CVariable_setValue" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CVariable_setValue(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "CVariable_setValue", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    return _wrap_CVariable_setValue__SWIG_1(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_CVariable_setValue__SWIG_0(self, argc, argv);
  }
check_2:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_CVariable_setValue__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'CVariable_setValue'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::CVariable::setValue(float)\n"
    "    csl::CVariable::setValue(int)\n"
    "    csl::CVariable::setValue(double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CVariable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CVariable *arg1 = (csl::CVariable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CVariable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CVariable" "', argument " "1"" of type '" "csl::CVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::CVariable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CVariable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__CVariable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *CVariable_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_StaticVariable__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::StaticVariable *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StaticVariable" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::StaticVariable *)new csl::StaticVariable(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__StaticVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StaticVariable__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  csl::StaticVariable *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StaticVariable" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (csl::StaticVariable *)new csl::StaticVariable(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__StaticVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StaticVariable__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  csl::StaticVariable *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StaticVariable" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  result = (csl::StaticVariable *)new csl::StaticVariable(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__StaticVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StaticVariable(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_StaticVariable", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    return _wrap_new_StaticVariable__SWIG_1(self, argc, argv);
  }
check_1:
  
  if (argc == 1) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_float(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_new_StaticVariable__SWIG_0(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_StaticVariable__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_StaticVariable'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::StaticVariable::StaticVariable(float)\n"
    "    csl::StaticVariable::StaticVariable(int)\n"
    "    csl::StaticVariable::StaticVariable(double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StaticVariable_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StaticVariable *arg1 = (csl::StaticVariable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StaticVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StaticVariable_value" "', argument " "1"" of type '" "csl::StaticVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::StaticVariable * >(argp1);
  result = (float)(arg1)->value();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StaticVariable_setValue__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::StaticVariable *arg1 = (csl::StaticVariable *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StaticVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StaticVariable_setValue" "', argument " "1"" of type '" "csl::StaticVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::StaticVariable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StaticVariable_setValue" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StaticVariable_setValue__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::StaticVariable *arg1 = (csl::StaticVariable *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StaticVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StaticVariable_setValue" "', argument " "1"" of type '" "csl::StaticVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::StaticVariable * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StaticVariable_setValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StaticVariable_setValue__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::StaticVariable *arg1 = (csl::StaticVariable *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StaticVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StaticVariable_setValue" "', argument " "1"" of type '" "csl::StaticVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::StaticVariable * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StaticVariable_setValue" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StaticVariable_setValue(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StaticVariable_setValue", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    return _wrap_StaticVariable_setValue__SWIG_1(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_StaticVariable_setValue__SWIG_0(self, argc, argv);
  }
check_2:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_StaticVariable_setValue__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StaticVariable_setValue'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::StaticVariable::setValue(float)\n"
    "    csl::StaticVariable::setValue(int)\n"
    "    csl::StaticVariable::setValue(double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_StaticVariable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StaticVariable *arg1 = (csl::StaticVariable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StaticVariable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StaticVariable" "', argument " "1"" of type '" "csl::StaticVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::StaticVariable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StaticVariable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__StaticVariable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *StaticVariable_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DynamicVariable__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::DynamicVariable *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::DynamicVariable *)new csl::DynamicVariable(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DynamicVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVariable__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  csl::DynamicVariable *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (csl::DynamicVariable *)new csl::DynamicVariable(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DynamicVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVariable__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  csl::UnitGenerator *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::DynamicVariable *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::DynamicVariable *)new csl::DynamicVariable(arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DynamicVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVariable__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  csl::UnitGenerator *arg2 = 0 ;
  csl::VOperator arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  csl::DynamicVariable *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DynamicVariable" "', argument " "3"" of type '" "csl::VOperator""'");
  } 
  arg3 = static_cast< csl::VOperator >(val3);
  result = (csl::DynamicVariable *)new csl::DynamicVariable(arg1,*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DynamicVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVariable__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  csl::VOperator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  csl::DynamicVariable *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DynamicVariable" "', argument " "3"" of type '" "csl::VOperator""'");
  } 
  arg3 = static_cast< csl::VOperator >(val3);
  result = (csl::DynamicVariable *)new csl::DynamicVariable(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DynamicVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVariable__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  csl::UnitGenerator *arg2 = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::DynamicVariable *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::DynamicVariable *)new csl::DynamicVariable(arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DynamicVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVariable__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  csl::DynamicVariable *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (csl::DynamicVariable *)new csl::DynamicVariable(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DynamicVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVariable__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  csl::UnitGenerator *arg2 = 0 ;
  csl::VOperator arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  csl::DynamicVariable *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DynamicVariable" "', argument " "3"" of type '" "csl::VOperator""'");
  } 
  arg3 = static_cast< csl::VOperator >(val3);
  result = (csl::DynamicVariable *)new csl::DynamicVariable(arg1,*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DynamicVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVariable__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  int arg2 ;
  csl::VOperator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  csl::DynamicVariable *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_DynamicVariable" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_DynamicVariable" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_DynamicVariable" "', argument " "3"" of type '" "csl::VOperator""'");
  } 
  arg3 = static_cast< csl::VOperator >(val3);
  result = (csl::DynamicVariable *)new csl::DynamicVariable(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DynamicVariable, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DynamicVariable(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_DynamicVariable", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    return _wrap_new_DynamicVariable__SWIG_6(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_new_DynamicVariable__SWIG_0(self, argc, argv);
  }
check_2:
  
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_3;
    return _wrap_new_DynamicVariable__SWIG_1(self, argc, argv);
  }
check_3:
  
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    PyObject *retobj = _wrap_new_DynamicVariable__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_4:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_DynamicVariable__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_6;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_6;
    PyObject *retobj = _wrap_new_DynamicVariable__SWIG_8(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_6:
  
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_7;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_7;
    PyObject *retobj = _wrap_new_DynamicVariable__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_7:
  
  if (argc == 3) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_8;
    PyObject *retobj = _wrap_new_DynamicVariable__SWIG_7(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_8:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_new_DynamicVariable__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_DynamicVariable'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::DynamicVariable::DynamicVariable(csl::UnitGenerator &,float)\n"
    "    csl::DynamicVariable::DynamicVariable(csl::UnitGenerator &,double)\n"
    "    csl::DynamicVariable::DynamicVariable(float,csl::UnitGenerator &)\n"
    "    csl::DynamicVariable::DynamicVariable(float,csl::UnitGenerator &,csl::VOperator)\n"
    "    csl::DynamicVariable::DynamicVariable(csl::UnitGenerator &,float,csl::VOperator)\n"
    "    csl::DynamicVariable::DynamicVariable(int,csl::UnitGenerator &)\n"
    "    csl::DynamicVariable::DynamicVariable(csl::UnitGenerator &,int)\n"
    "    csl::DynamicVariable::DynamicVariable(int,csl::UnitGenerator &,csl::VOperator)\n"
    "    csl::DynamicVariable::DynamicVariable(csl::UnitGenerator &,int,csl::VOperator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_DynamicVariable_setValue__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::DynamicVariable *arg1 = (csl::DynamicVariable *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__DynamicVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVariable_setValue" "', argument " "1"" of type '" "csl::DynamicVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::DynamicVariable * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVariable_setValue" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVariable_setValue__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::DynamicVariable *arg1 = (csl::DynamicVariable *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__DynamicVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVariable_setValue" "', argument " "1"" of type '" "csl::DynamicVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::DynamicVariable * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVariable_setValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVariable_setValue__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::DynamicVariable *arg1 = (csl::DynamicVariable *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__DynamicVariable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DynamicVariable_setValue" "', argument " "1"" of type '" "csl::DynamicVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::DynamicVariable * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DynamicVariable_setValue" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->setValue(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DynamicVariable_setValue(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "DynamicVariable_setValue", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    return _wrap_DynamicVariable_setValue__SWIG_1(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_DynamicVariable_setValue__SWIG_0(self, argc, argv);
  }
check_2:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_DynamicVariable_setValue__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'DynamicVariable_setValue'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::DynamicVariable::setValue(float)\n"
    "    csl::DynamicVariable::setValue(int)\n"
    "    csl::DynamicVariable::setValue(double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_DynamicVariable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::DynamicVariable *arg1 = (csl::DynamicVariable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__DynamicVariable, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DynamicVariable" "', argument " "1"" of type '" "csl::DynamicVariable *""'"); 
  }
  arg1 = reinterpret_cast< csl::DynamicVariable * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DynamicVariable_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__DynamicVariable, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DynamicVariable_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BlockResizer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::BlockResizer *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_BlockResizer", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BlockResizer" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BlockResizer" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_BlockResizer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::BlockResizer *)new csl::BlockResizer(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BlockResizer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BlockResizer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BlockResizer *arg1 = (csl::BlockResizer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BlockResizer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BlockResizer" "', argument " "1"" of type '" "csl::BlockResizer *""'"); 
  }
  arg1 = reinterpret_cast< csl::BlockResizer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BlockResizer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__BlockResizer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BlockResizer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_CPoint_dimn_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint_dimn_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_dimn_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_dimn_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->dimn = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_dimn_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_dimn_get" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (unsigned int) ((arg1)->dimn);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint_x_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_x_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_x_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_x_get" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (float) ((arg1)->x);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint_y_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_y_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_y_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_y_get" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (float) ((arg1)->y);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint_z_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_z_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_z_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_z_get" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (float) ((arg1)->z);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::CPoint *)new csl::CPoint();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (csl::CPoint *)new csl::CPoint(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::CPoint *)new csl::CPoint(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  result = (csl::CPoint *)new csl::CPoint(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPoint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (csl::CPoint *)new csl::CPoint(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPoint" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::CPoint *)new csl::CPoint(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPoint" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (csl::CPoint *)new csl::CPoint(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPoint" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CPoint" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (csl::CPoint *)new csl::CPoint(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPoint" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CPoint" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::CPoint *)new csl::CPoint(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPoint" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CPoint" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  result = (csl::CPoint *)new csl::CPoint(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::PointMode arg1 ;
  float arg2 ;
  float arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "csl::PointMode""'");
  } 
  arg1 = static_cast< csl::PointMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPoint" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CPoint" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::CPoint *)new csl::CPoint(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_11(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  char arg1 ;
  double arg2 ;
  double arg3 ;
  char val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_char(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "char""'");
  } 
  arg1 = static_cast< char >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPoint" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CPoint" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  result = (csl::CPoint *)new csl::CPoint(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_12(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::PointMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "csl::PointMode""'");
  } 
  arg1 = static_cast< csl::PointMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPoint" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CPoint" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CPoint" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::CPoint *)new csl::CPoint(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint__SWIG_13(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  char arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  char val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  csl::CPoint *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_char(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CPoint" "', argument " "1"" of type '" "char""'");
  } 
  arg1 = static_cast< char >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CPoint" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CPoint" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CPoint" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  result = (csl::CPoint *)new csl::CPoint(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CPoint(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_CPoint", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_CPoint__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_new_CPoint__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_float(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_3;
    return _wrap_new_CPoint__SWIG_2(self, argc, argv);
  }
check_3:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_CPoint__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_5;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_5;
    return _wrap_new_CPoint__SWIG_4(self, argc, argv);
  }
check_5:
  
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_float(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_6;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_6;
    return _wrap_new_CPoint__SWIG_5(self, argc, argv);
  }
check_6:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_CPoint__SWIG_6(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_8;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_8;
    {
      {
        int res = SWIG_AsVal_int(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_8;
    return _wrap_new_CPoint__SWIG_7(self, argc, argv);
  }
check_8:
  
  if (argc == 3) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_9;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_9;
    {
      {
        int res = SWIG_AsVal_float(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_9;
    return _wrap_new_CPoint__SWIG_10(self, argc, argv);
  }
check_9:
  
  if (argc == 3) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_float(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_10;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_10;
    {
      {
        int res = SWIG_AsVal_float(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_10;
    return _wrap_new_CPoint__SWIG_8(self, argc, argv);
  }
check_10:
  
  if (argc == 3) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_double(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_11;
    PyObject *retobj = _wrap_new_CPoint__SWIG_9(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_11:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_new_CPoint__SWIG_11(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_13;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_13;
    {
      {
        int res = SWIG_AsVal_float(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_13;
    {
      {
        int res = SWIG_AsVal_float(argv[3], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_13;
    return _wrap_new_CPoint__SWIG_12(self, argc, argv);
  }
check_13:
  
  if (argc == 4) {
    PyObject *retobj = _wrap_new_CPoint__SWIG_13(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_CPoint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::CPoint::CPoint()\n"
    "    csl::CPoint::CPoint(int)\n"
    "    csl::CPoint::CPoint(float)\n"
    "    csl::CPoint::CPoint(double)\n"
    "    csl::CPoint::CPoint(int,int)\n"
    "    csl::CPoint::CPoint(float,float)\n"
    "    csl::CPoint::CPoint(double,double)\n"
    "    csl::CPoint::CPoint(int,int,int)\n"
    "    csl::CPoint::CPoint(float,float,float)\n"
    "    csl::CPoint::CPoint(double,double,double)\n"
    "    csl::CPoint::CPoint(csl::PointMode,float,float)\n"
    "    csl::CPoint::CPoint(char,double,double)\n"
    "    csl::CPoint::CPoint(csl::PointMode,float,float,float)\n"
    "    csl::CPoint::CPoint(char,double,double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CPoint" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPoint_set" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->set(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPoint_set" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPoint_set" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  (arg1)->set(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_set__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPoint_set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->set(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_set__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPoint_set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPoint_set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->set(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_set__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPoint_set" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  (arg1)->set(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_set__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPoint_set" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPoint_set" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  (arg1)->set(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_set__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::PointMode arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_set" "', argument " "2"" of type '" "csl::PointMode""'");
  } 
  arg2 = static_cast< csl::PointMode >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPoint_set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPoint_set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->set(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_set__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::PointMode arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_set" "', argument " "2"" of type '" "csl::PointMode""'");
  } 
  arg2 = static_cast< csl::PointMode >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPoint_set" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPoint_set" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPoint_set" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->set(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_set__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  char arg2 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_set" "', argument " "2"" of type '" "char""'");
  } 
  arg2 = static_cast< char >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPoint_set" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPoint_set" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  (arg1)->set(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_set__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  char arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_set" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_char(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_set" "', argument " "2"" of type '" "char""'");
  } 
  arg2 = static_cast< char >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CPoint_set" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "CPoint_set" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_double(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "CPoint_set" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  (arg1)->set(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_set(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "CPoint_set", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    {
      {
        int res = SWIG_AsVal_int(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    return _wrap_CPoint_set__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 3) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    {
      {
        int res = SWIG_AsVal_float(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_CPoint_set__SWIG_2(self, argc, argv);
  }
check_2:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_CPoint_set__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    {
      {
        int res = SWIG_AsVal_int(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    {
      {
        int res = SWIG_AsVal_int(argv[3], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    return _wrap_CPoint_set__SWIG_1(self, argc, argv);
  }
check_4:
  
  if (argc == 4) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_5;
    {
      {
        int res = SWIG_AsVal_float(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_5;
    {
      {
        int res = SWIG_AsVal_float(argv[3], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_5;
    return _wrap_CPoint_set__SWIG_6(self, argc, argv);
  }
check_5:
  
  if (argc == 4) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_6;
    {
      {
        int res = SWIG_AsVal_float(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_6;
    {
      {
        int res = SWIG_AsVal_float(argv[3], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_6;
    return _wrap_CPoint_set__SWIG_3(self, argc, argv);
  }
check_6:
  
  if (argc == 4) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_7;
    PyObject *retobj = _wrap_CPoint_set__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_7:
  
  if (argc == 4) {
    PyObject *retobj = _wrap_CPoint_set__SWIG_8(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_9;
    {
      {
        int res = SWIG_AsVal_float(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_9;
    {
      {
        int res = SWIG_AsVal_float(argv[3], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_9;
    {
      {
        int res = SWIG_AsVal_float(argv[4], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_9;
    return _wrap_CPoint_set__SWIG_7(self, argc, argv);
  }
check_9:
  
  if (argc == 5) {
    PyObject *retobj = _wrap_CPoint_set__SWIG_9(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'CPoint_set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::CPoint::set(int,int)\n"
    "    csl::CPoint::set(int,int,int)\n"
    "    csl::CPoint::set(float,float)\n"
    "    csl::CPoint::set(float,float,float)\n"
    "    csl::CPoint::set(double,double)\n"
    "    csl::CPoint::set(double,double,double)\n"
    "    csl::CPoint::set(csl::PointMode,float,float)\n"
    "    csl::CPoint::set(csl::PointMode,float,float,float)\n"
    "    csl::CPoint::set(char,double,double)\n"
    "    csl::CPoint::set(char,double,double,double)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CPoint_setAzimuth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint_setAzimuth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_setAzimuth" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_setAzimuth" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->setAzimuth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_setElevation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint_setElevation", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_setElevation" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_setElevation" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->setElevation(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_setMagnitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint_setMagnitude", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_setMagnitude" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_setMagnitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->setMagnitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_dim(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_dim" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (unsigned int)(arg1)->dim();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_setdim(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint_setdim", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_setdim" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_setdim" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (unsigned int)(arg1)->setdim(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint___neg__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::CPoint result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___neg__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (arg1)->operator -();
  resultobj = SWIG_NewPointerObj((new csl::CPoint(static_cast< const csl::CPoint& >(result))), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_CPoint___invert__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::CPoint result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___invert__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (arg1)->operator ~();
  resultobj = SWIG_NewPointerObj((new csl::CPoint(static_cast< const csl::CPoint& >(result))), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___eq__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint___eq__" "', argument " "2"" of type '" "csl::CPoint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint___eq__" "', argument " "2"" of type '" "csl::CPoint""'");
    } else {
      csl::CPoint * temp = reinterpret_cast< csl::CPoint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (int)(arg1)->operator ==(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_CPoint___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___ne__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___ne__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint___ne__" "', argument " "2"" of type '" "csl::CPoint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint___ne__" "', argument " "2"" of type '" "csl::CPoint""'");
    } else {
      csl::CPoint * temp = reinterpret_cast< csl::CPoint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (int)(arg1)->operator !=(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_CPoint___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::CPoint result;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___add__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint___add__" "', argument " "2"" of type '" "csl::CPoint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint___add__" "', argument " "2"" of type '" "csl::CPoint""'");
    } else {
      csl::CPoint * temp = reinterpret_cast< csl::CPoint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->operator +(arg2);
  resultobj = SWIG_NewPointerObj((new csl::CPoint(static_cast< const csl::CPoint& >(result))), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_CPoint___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::CPoint result;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___sub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___sub__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint___sub__" "', argument " "2"" of type '" "csl::CPoint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint___sub__" "', argument " "2"" of type '" "csl::CPoint""'");
    } else {
      csl::CPoint * temp = reinterpret_cast< csl::CPoint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->operator -(arg2);
  resultobj = SWIG_NewPointerObj((new csl::CPoint(static_cast< const csl::CPoint& >(result))), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_CPoint___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___mul__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint___mul__" "', argument " "2"" of type '" "csl::CPoint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint___mul__" "', argument " "2"" of type '" "csl::CPoint""'");
    } else {
      csl::CPoint * temp = reinterpret_cast< csl::CPoint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (float)(arg1)->operator *(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_CPoint___or__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___or__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___or__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint___or__" "', argument " "2"" of type '" "csl::CPoint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint___or__" "', argument " "2"" of type '" "csl::CPoint""'");
    } else {
      csl::CPoint * temp = reinterpret_cast< csl::CPoint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (float)(arg1)->operator |(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_CPoint___xor__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::CPoint result;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___xor__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___xor__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint___xor__" "', argument " "2"" of type '" "csl::CPoint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint___xor__" "', argument " "2"" of type '" "csl::CPoint""'");
    } else {
      csl::CPoint * temp = reinterpret_cast< csl::CPoint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (arg1)->operator ^(arg2);
  resultobj = SWIG_NewPointerObj((new csl::CPoint(static_cast< const csl::CPoint& >(result))), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_CPoint___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::CPoint *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___imul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___imul__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint___imul__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (csl::CPoint *) &(arg1)->operator *=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint___itruediv__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::CPoint *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___itruediv__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___itruediv__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint___itruediv__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (csl::CPoint *) &(arg1)->operator /=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::CPoint *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___iadd__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint___iadd__" "', argument " "2"" of type '" "csl::CPoint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint___iadd__" "', argument " "2"" of type '" "csl::CPoint""'");
    } else {
      csl::CPoint * temp = reinterpret_cast< csl::CPoint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (csl::CPoint *) &(arg1)->operator +=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::CPoint *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___isub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___isub__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint___isub__" "', argument " "2"" of type '" "csl::CPoint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint___isub__" "', argument " "2"" of type '" "csl::CPoint""'");
    } else {
      csl::CPoint * temp = reinterpret_cast< csl::CPoint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (csl::CPoint *) &(arg1)->operator -=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint___ixor__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::CPoint *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___ixor__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___ixor__" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint___ixor__" "', argument " "2"" of type '" "csl::CPoint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint___ixor__" "', argument " "2"" of type '" "csl::CPoint""'");
    } else {
      csl::CPoint * temp = reinterpret_cast< csl::CPoint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (csl::CPoint *) &(arg1)->operator ^=(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CPoint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_distance__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint *arg2 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_distance" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint_distance" "', argument " "2"" of type '" "csl::CPoint *""'"); 
  }
  arg2 = reinterpret_cast< csl::CPoint * >(argp2);
  result = (float)(arg1)->distance(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_distance2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint *arg2 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_distance2" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint_distance2" "', argument " "2"" of type '" "csl::CPoint *""'"); 
  }
  arg2 = reinterpret_cast< csl::CPoint * >(argp2);
  result = (float)(arg1)->distance2(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_distance__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_distance" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint_distance" "', argument " "2"" of type '" "csl::CPoint &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint_distance" "', argument " "2"" of type '" "csl::CPoint &""'"); 
  }
  arg2 = reinterpret_cast< csl::CPoint * >(argp2);
  result = (float)(arg1)->distance(*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_distance(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "CPoint_distance", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__CPoint, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_CPoint_distance__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_CPoint_distance__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'CPoint_distance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::CPoint::distance(csl::CPoint *)\n"
    "    csl::CPoint::distance(csl::CPoint &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CPoint_distance2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  csl::CPoint *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_distance2" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CPoint,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CPoint_distance2" "', argument " "2"" of type '" "csl::CPoint &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CPoint_distance2" "', argument " "2"" of type '" "csl::CPoint &""'"); 
  }
  arg2 = reinterpret_cast< csl::CPoint * >(argp2);
  result = (float)(arg1)->distance2(*arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_distance2(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "CPoint_distance2", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__CPoint, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_CPoint_distance2__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_CPoint_distance2__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'CPoint_distance2'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::CPoint::distance2(csl::CPoint *)\n"
    "    csl::CPoint::distance2(csl::CPoint &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CPoint___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint___call__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint___call__" "', argument " "1"" of type '" "csl::CPoint const *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint___call__" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (float)((csl::CPoint const *)arg1)->operator ()(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_len(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_len" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (float)(arg1)->len();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_len2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_len2" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (float)(arg1)->len2();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_r(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_r" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (float)(arg1)->r();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_theta(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_theta" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (float)(arg1)->theta();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_phi(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_phi" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (float)(arg1)->phi();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_ele(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_ele" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  result = (float)(arg1)->ele();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_rotateBy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CPoint_rotateBy", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_rotateBy" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CPoint_rotateBy" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->rotateBy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_dump" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  (arg1)->dump();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_dumpPol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_dumpPol" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  (arg1)->dumpPol();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CPoint_normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CPoint *arg1 = (csl::CPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CPoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CPoint_normalize" "', argument " "1"" of type '" "csl::CPoint *""'"); 
  }
  arg1 = reinterpret_cast< csl::CPoint * >(argp1);
  (arg1)->normalize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CPoint_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__CPoint, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *CPoint_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_CThread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CThread *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_CThread", 0, 0, 0)) SWIG_fail;
  result = (csl::CThread *)new csl::CThread();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CThread, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CThread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CThread *arg1 = (csl::CThread *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CThread, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CThread" "', argument " "1"" of type '" "csl::CThread *""'"); 
  }
  arg1 = reinterpret_cast< csl::CThread * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CThread_MakeThread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CThread *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "CThread_MakeThread", 0, 0, 0)) SWIG_fail;
  result = (csl::CThread *)csl::CThread::MakeThread();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CThread, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CThread_createThread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CThread *arg1 = (csl::CThread *) 0 ;
  csl::CThread::VoidFcnPtr arg2 = (csl::CThread::VoidFcnPtr) 0 ;
  void *arg3 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 ;
  PyObject *swig_obj[3] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "CThread_createThread", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CThread, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CThread_createThread" "', argument " "1"" of type '" "csl::CThread *""'"); 
  }
  arg1 = reinterpret_cast< csl::CThread * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(swig_obj[1], (void**)(&arg2), SWIGTYPE_p_f_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "CThread_createThread" "', argument " "2"" of type '" "csl::CThread::VoidFcnPtr""'"); 
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CThread_createThread" "', argument " "3"" of type '" "void *""'"); 
  }
  result = (int)(arg1)->createThread(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CThread_run(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CThread *arg1 = (csl::CThread *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CThread, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CThread_run" "', argument " "1"" of type '" "csl::CThread *""'"); 
  }
  arg1 = reinterpret_cast< csl::CThread * >(argp1);
  (arg1)->run();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CThread_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__CThread, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *CThread_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Window__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Window *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Window *)new csl::Window();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Window, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Window__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  float arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Window *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Window" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Window" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Window *)new csl::Window(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Window, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Window__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::Window *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Window" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::Window *)new csl::Window(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Window, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Window(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Window", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Window__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Window__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Window__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Window'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Window::Window()\n"
    "    csl::Window::Window(unsigned int,float)\n"
    "    csl::Window::Window(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Window(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Window *arg1 = (csl::Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Window, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Window" "', argument " "1"" of type '" "csl::Window *""'"); 
  }
  arg1 = reinterpret_cast< csl::Window * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Window_setSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Window *arg1 = (csl::Window *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Window_setSize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Window_setSize" "', argument " "1"" of type '" "csl::Window *""'"); 
  }
  arg1 = reinterpret_cast< csl::Window * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Window_setSize" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Window_setGain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Window *arg1 = (csl::Window *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Window_setGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Window_setGain" "', argument " "1"" of type '" "csl::Window *""'"); 
  }
  arg1 = reinterpret_cast< csl::Window * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Window_setGain" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Window_window(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Window *arg1 = (csl::Window *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::SampleBuffer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Window, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Window_window" "', argument " "1"" of type '" "csl::Window *""'"); 
  }
  arg1 = reinterpret_cast< csl::Window * >(argp1);
  result = (csl::SampleBuffer)(arg1)->window();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Window_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Window, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Window_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_RectangularWindow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::RectangularWindow *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::RectangularWindow *)new csl::RectangularWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RectangularWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RectangularWindow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::RectangularWindow *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RectangularWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::RectangularWindow *)new csl::RectangularWindow(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RectangularWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RectangularWindow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  float arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::RectangularWindow *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RectangularWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RectangularWindow" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::RectangularWindow *)new csl::RectangularWindow(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RectangularWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RectangularWindow(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_RectangularWindow", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_RectangularWindow__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_RectangularWindow__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_RectangularWindow__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_RectangularWindow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::RectangularWindow::RectangularWindow()\n"
    "    csl::RectangularWindow::RectangularWindow(unsigned int)\n"
    "    csl::RectangularWindow::RectangularWindow(unsigned int,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_RectangularWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RectangularWindow *arg1 = (csl::RectangularWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RectangularWindow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RectangularWindow" "', argument " "1"" of type '" "csl::RectangularWindow *""'"); 
  }
  arg1 = reinterpret_cast< csl::RectangularWindow * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RectangularWindow_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__RectangularWindow, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *RectangularWindow_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_TriangularWindow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::TriangularWindow *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::TriangularWindow *)new csl::TriangularWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__TriangularWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TriangularWindow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::TriangularWindow *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TriangularWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::TriangularWindow *)new csl::TriangularWindow(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__TriangularWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TriangularWindow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  float arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::TriangularWindow *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_TriangularWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_TriangularWindow" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::TriangularWindow *)new csl::TriangularWindow(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__TriangularWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TriangularWindow(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_TriangularWindow", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_TriangularWindow__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_TriangularWindow__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_TriangularWindow__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_TriangularWindow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::TriangularWindow::TriangularWindow()\n"
    "    csl::TriangularWindow::TriangularWindow(unsigned int)\n"
    "    csl::TriangularWindow::TriangularWindow(unsigned int,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_TriangularWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::TriangularWindow *arg1 = (csl::TriangularWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__TriangularWindow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TriangularWindow" "', argument " "1"" of type '" "csl::TriangularWindow *""'"); 
  }
  arg1 = reinterpret_cast< csl::TriangularWindow * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TriangularWindow_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__TriangularWindow, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *TriangularWindow_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_HammingWindow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::HammingWindow *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::HammingWindow *)new csl::HammingWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__HammingWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HammingWindow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::HammingWindow *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_HammingWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::HammingWindow *)new csl::HammingWindow(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__HammingWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HammingWindow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  float arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::HammingWindow *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_HammingWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_HammingWindow" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::HammingWindow *)new csl::HammingWindow(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__HammingWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HammingWindow(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_HammingWindow", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_HammingWindow__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_HammingWindow__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_HammingWindow__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_HammingWindow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::HammingWindow::HammingWindow()\n"
    "    csl::HammingWindow::HammingWindow(unsigned int)\n"
    "    csl::HammingWindow::HammingWindow(unsigned int,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_HammingWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::HammingWindow *arg1 = (csl::HammingWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__HammingWindow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_HammingWindow" "', argument " "1"" of type '" "csl::HammingWindow *""'"); 
  }
  arg1 = reinterpret_cast< csl::HammingWindow * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *HammingWindow_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__HammingWindow, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *HammingWindow_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_HannWindow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::HannWindow *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::HannWindow *)new csl::HannWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__HannWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HannWindow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::HannWindow *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_HannWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::HannWindow *)new csl::HannWindow(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__HannWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HannWindow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  float arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::HannWindow *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_HannWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_HannWindow" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::HannWindow *)new csl::HannWindow(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__HannWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HannWindow(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_HannWindow", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_HannWindow__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_HannWindow__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_HannWindow__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_HannWindow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::HannWindow::HannWindow()\n"
    "    csl::HannWindow::HannWindow(unsigned int)\n"
    "    csl::HannWindow::HannWindow(unsigned int,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_HannWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::HannWindow *arg1 = (csl::HannWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__HannWindow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_HannWindow" "', argument " "1"" of type '" "csl::HannWindow *""'"); 
  }
  arg1 = reinterpret_cast< csl::HannWindow * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *HannWindow_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__HannWindow, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *HannWindow_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BlackmanWindow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::BlackmanWindow *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::BlackmanWindow *)new csl::BlackmanWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BlackmanWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlackmanWindow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::BlackmanWindow *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BlackmanWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::BlackmanWindow *)new csl::BlackmanWindow(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BlackmanWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlackmanWindow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  float arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::BlackmanWindow *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BlackmanWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_BlackmanWindow" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::BlackmanWindow *)new csl::BlackmanWindow(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BlackmanWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlackmanWindow(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_BlackmanWindow", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_BlackmanWindow__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_BlackmanWindow__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_BlackmanWindow__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_BlackmanWindow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::BlackmanWindow::BlackmanWindow()\n"
    "    csl::BlackmanWindow::BlackmanWindow(unsigned int)\n"
    "    csl::BlackmanWindow::BlackmanWindow(unsigned int,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_BlackmanWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BlackmanWindow *arg1 = (csl::BlackmanWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BlackmanWindow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BlackmanWindow" "', argument " "1"" of type '" "csl::BlackmanWindow *""'"); 
  }
  arg1 = reinterpret_cast< csl::BlackmanWindow * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BlackmanWindow_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__BlackmanWindow, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BlackmanWindow_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_BlackmanHarrisWindow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::BlackmanHarrisWindow *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::BlackmanHarrisWindow *)new csl::BlackmanHarrisWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BlackmanHarrisWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlackmanHarrisWindow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::BlackmanHarrisWindow *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BlackmanHarrisWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::BlackmanHarrisWindow *)new csl::BlackmanHarrisWindow(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BlackmanHarrisWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlackmanHarrisWindow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  float arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::BlackmanHarrisWindow *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BlackmanHarrisWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_BlackmanHarrisWindow" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::BlackmanHarrisWindow *)new csl::BlackmanHarrisWindow(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BlackmanHarrisWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BlackmanHarrisWindow(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_BlackmanHarrisWindow", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_BlackmanHarrisWindow__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_BlackmanHarrisWindow__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_BlackmanHarrisWindow__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_BlackmanHarrisWindow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::BlackmanHarrisWindow::BlackmanHarrisWindow()\n"
    "    csl::BlackmanHarrisWindow::BlackmanHarrisWindow(unsigned int)\n"
    "    csl::BlackmanHarrisWindow::BlackmanHarrisWindow(unsigned int,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_BlackmanHarrisWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BlackmanHarrisWindow *arg1 = (csl::BlackmanHarrisWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BlackmanHarrisWindow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BlackmanHarrisWindow" "', argument " "1"" of type '" "csl::BlackmanHarrisWindow *""'"); 
  }
  arg1 = reinterpret_cast< csl::BlackmanHarrisWindow * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BlackmanHarrisWindow_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__BlackmanHarrisWindow, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *BlackmanHarrisWindow_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_WelchWindow__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::WelchWindow *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::WelchWindow *)new csl::WelchWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WelchWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WelchWindow__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::WelchWindow *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_WelchWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::WelchWindow *)new csl::WelchWindow(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WelchWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WelchWindow__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  float arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::WelchWindow *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_WelchWindow" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_WelchWindow" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::WelchWindow *)new csl::WelchWindow(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WelchWindow, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WelchWindow(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_WelchWindow", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_WelchWindow__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_WelchWindow__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_WelchWindow__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_WelchWindow'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::WelchWindow::WelchWindow()\n"
    "    csl::WelchWindow::WelchWindow(unsigned int)\n"
    "    csl::WelchWindow::WelchWindow(unsigned int,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_WelchWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::WelchWindow *arg1 = (csl::WelchWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__WelchWindow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_WelchWindow" "', argument " "1"" of type '" "csl::WelchWindow *""'"); 
  }
  arg1 = reinterpret_cast< csl::WelchWindow * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *WelchWindow_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__WelchWindow, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *WelchWindow_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_LineSegment__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::LineSegment *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::LineSegment *)new csl::LineSegment();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__LineSegment, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LineSegment__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  csl::LineMode arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  csl::LineSegment *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_LineSegment" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_LineSegment" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_LineSegment" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_LineSegment" "', argument " "4"" of type '" "csl::LineMode""'");
  } 
  arg4 = static_cast< csl::LineMode >(val4);
  result = (csl::LineSegment *)new csl::LineSegment(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__LineSegment, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LineSegment__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::LineSegment *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_LineSegment" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_LineSegment" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_LineSegment" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::LineSegment *)new csl::LineSegment(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__LineSegment, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LineSegment(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_LineSegment", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_LineSegment__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_LineSegment__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_LineSegment__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_LineSegment'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::LineSegment::LineSegment()\n"
    "    csl::LineSegment::LineSegment(float,float,float,csl::LineMode)\n"
    "    csl::LineSegment::LineSegment(float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_LineSegment_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_start" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  result = (float)(arg1)->start();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineSegment_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_end" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  result = (float)(arg1)->end();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineSegment_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_duration" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  result = (float)(arg1)->duration();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineSegment_currentFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_currentFrame" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  result = (unsigned int)(arg1)->currentFrame();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineSegment_setEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "LineSegment_setEnd", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_setEnd" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LineSegment_setEnd" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setEnd(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineSegment_setStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "LineSegment_setStart", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_setStart" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LineSegment_setStart" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setStart(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineSegment_setDuration__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_setDuration" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LineSegment_setDuration" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setDuration(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineSegment_setDuration__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_setDuration" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LineSegment_setDuration" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setDuration(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineSegment_setDuration(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "LineSegment_setDuration", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    return _wrap_LineSegment_setDuration__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_LineSegment_setDuration__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'LineSegment_setDuration'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::LineSegment::setDuration(unsigned int)\n"
    "    csl::LineSegment::setDuration(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_LineSegment_setMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  csl::LineMode arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "LineSegment_setMode", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_setMode" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LineSegment_setMode" "', argument " "2"" of type '" "csl::LineMode""'");
  } 
  arg2 = static_cast< csl::LineMode >(val2);
  (arg1)->setMode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineSegment_nextBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_nextBuffer" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LineSegment_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LineSegment_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LineSegment_nextBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->nextBuffer(*arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineSegment_nextBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  csl::Port *arg4 = (csl::Port *) 0 ;
  csl::Port *arg5 = (csl::Port *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_nextBuffer" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LineSegment_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LineSegment_nextBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LineSegment_nextBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "LineSegment_nextBuffer" "', argument " "4"" of type '" "csl::Port *""'"); 
  }
  arg4 = reinterpret_cast< csl::Port * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_csl__Port, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "LineSegment_nextBuffer" "', argument " "5"" of type '" "csl::Port *""'"); 
  }
  arg5 = reinterpret_cast< csl::Port * >(argp5);
  try {
    (arg1)->nextBuffer(*arg2,arg3,arg4,arg5);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineSegment_nextBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "LineSegment_nextBuffer", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    PyObject *retobj = _wrap_LineSegment_nextBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_LineSegment_nextBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'LineSegment_nextBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::LineSegment::nextBuffer(csl::Buffer &,unsigned int)\n"
    "    csl::LineSegment::nextBuffer(csl::Buffer &,unsigned int,csl::Port *,csl::Port *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_LineSegment_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineSegment_reset" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LineSegment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::LineSegment *arg1 = (csl::LineSegment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__LineSegment, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LineSegment" "', argument " "1"" of type '" "csl::LineSegment *""'"); 
  }
  arg1 = reinterpret_cast< csl::LineSegment * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LineSegment_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__LineSegment, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *LineSegment_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Envelope *)new csl::Envelope();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  float arg14 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  float val13 ;
  int ecode13 = 0 ;
  float val14 ;
  int ecode14 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 14) || (nobjs > 14)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Envelope" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_Envelope" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_Envelope" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(swig_obj[11], &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_Envelope" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  ecode13 = SWIG_AsVal_float(swig_obj[12], &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "new_Envelope" "', argument " "13"" of type '" "float""'");
  } 
  arg13 = static_cast< float >(val13);
  ecode14 = SWIG_AsVal_float(swig_obj[13], &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "new_Envelope" "', argument " "14"" of type '" "float""'");
  } 
  arg14 = static_cast< float >(val14);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  float val13 ;
  int ecode13 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 13) || (nobjs > 13)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Envelope" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_Envelope" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_Envelope" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(swig_obj[11], &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_Envelope" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  ecode13 = SWIG_AsVal_float(swig_obj[12], &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "new_Envelope" "', argument " "13"" of type '" "float""'");
  } 
  arg13 = static_cast< float >(val13);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 12) || (nobjs > 12)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Envelope" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_Envelope" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_Envelope" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(swig_obj[11], &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_Envelope" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 11) || (nobjs > 11)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Envelope" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_Envelope" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_Envelope" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 10) || (nobjs > 10)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Envelope" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_Envelope" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 9) || (nobjs > 9)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Envelope" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 8) || (nobjs > 8)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_11(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_12(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  unsigned int arg3 ;
  float *arg4 ;
  float *arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float []""'"); 
  } 
  arg4 = reinterpret_cast< float * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float []""'"); 
  } 
  arg5 = reinterpret_cast< float * >(argp5);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_13(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  float val13 ;
  int ecode13 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 13) || (nobjs > 13)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Envelope" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_Envelope" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_Envelope" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(swig_obj[11], &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_Envelope" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  ecode13 = SWIG_AsVal_float(swig_obj[12], &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "new_Envelope" "', argument " "13"" of type '" "float""'");
  } 
  arg13 = static_cast< float >(val13);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_14(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 12) || (nobjs > 12)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Envelope" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_Envelope" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_Envelope" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(swig_obj[11], &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "new_Envelope" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_15(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 11) || (nobjs > 11)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Envelope" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_Envelope" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "new_Envelope" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_16(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 10) || (nobjs > 10)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Envelope" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "new_Envelope" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_17(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 9) || (nobjs > 9)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "new_Envelope" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_18(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 8) || (nobjs > 8)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "new_Envelope" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_19(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_Envelope" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_20(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_Envelope" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_21(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Envelope" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_22(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_23(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope__SWIG_24(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  unsigned int arg2 ;
  float *arg3 ;
  float *arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  csl::Envelope *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Envelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Envelope" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Envelope" "', argument " "3"" of type '" "float []""'"); 
  } 
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Envelope" "', argument " "4"" of type '" "float []""'"); 
  } 
  arg4 = reinterpret_cast< float * >(argp4);
  result = (csl::Envelope *)new csl::Envelope(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Envelope(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[15] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Envelope", 0, 14, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_23(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_3;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_3;
    {
      {
        int res = SWIG_AsVal_float(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_3;
    {
      {
        int res = SWIG_AsVal_float(argv[3], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_3;
    return _wrap_new_Envelope__SWIG_11(self, argc, argv);
  }
check_3:
  
  if (argc == 4) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    return _wrap_new_Envelope__SWIG_24(self, argc, argv);
  }
check_4:
  
  if (argc == 4) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_22(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_6;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_6;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_6;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_6;
    return _wrap_new_Envelope__SWIG_12(self, argc, argv);
  }
check_6:
  
  if (argc == 5) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_7;
    PyObject *retobj = _wrap_new_Envelope__SWIG_10(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_7:
  
  if (argc == 5) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_21(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 6) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_9;
    PyObject *retobj = _wrap_new_Envelope__SWIG_9(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_9:
  
  if (argc == 6) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_20(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 7) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_11;
    PyObject *retobj = _wrap_new_Envelope__SWIG_8(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_11:
  
  if (argc == 7) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_19(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 8) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_13;
    PyObject *retobj = _wrap_new_Envelope__SWIG_7(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_13:
  
  if (argc == 8) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_18(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 9) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_15;
    PyObject *retobj = _wrap_new_Envelope__SWIG_6(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_15:
  
  if (argc == 9) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_17(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 10) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_17;
    PyObject *retobj = _wrap_new_Envelope__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_17:
  
  if (argc == 10) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_16(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 11) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_19;
    PyObject *retobj = _wrap_new_Envelope__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_19:
  
  if (argc == 11) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_15(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 12) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_21;
    PyObject *retobj = _wrap_new_Envelope__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_21:
  
  if (argc == 12) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_14(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 13) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_23;
    PyObject *retobj = _wrap_new_Envelope__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_23:
  
  if (argc == 13) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_13(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 14) {
    PyObject *retobj = _wrap_new_Envelope__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Envelope'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Envelope::Envelope()\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,float,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,float,float,float)\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,float,float)\n"
    "    csl::Envelope::Envelope(csl::LineMode,float,unsigned int,float [],float [])\n"
    "    csl::Envelope::Envelope(float,float,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(float,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(float,float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(float,float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(float,float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(float,float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(float,float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(float,float,float,float,float)\n"
    "    csl::Envelope::Envelope(float,float,float,float)\n"
    "    csl::Envelope::Envelope(float,float,float)\n"
    "    csl::Envelope::Envelope(float,unsigned int,float [],float [])\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Envelope(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Envelope *arg1 = (csl::Envelope *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Envelope, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Envelope" "', argument " "1"" of type '" "csl::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::Envelope * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_addBreakpoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Envelope *arg1 = (csl::Envelope *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Envelope_addBreakpoint", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_addBreakpoint" "', argument " "1"" of type '" "csl::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::Envelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Envelope_addBreakpoint" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Envelope_addBreakpoint" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->addBreakpoint(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_setMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Envelope *arg1 = (csl::Envelope *) 0 ;
  csl::LineMode arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Envelope_setMode", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_setMode" "', argument " "1"" of type '" "csl::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::Envelope * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Envelope_setMode" "', argument " "2"" of type '" "csl::LineMode""'");
  } 
  arg2 = static_cast< csl::LineMode >(val2);
  (arg1)->setMode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_setDuration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Envelope *arg1 = (csl::Envelope *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Envelope_setDuration", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_setDuration" "', argument " "1"" of type '" "csl::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::Envelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Envelope_setDuration" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setDuration(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_scaleTimes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Envelope *arg1 = (csl::Envelope *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Envelope_scaleTimes", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_scaleTimes" "', argument " "1"" of type '" "csl::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::Envelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Envelope_scaleTimes" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->scaleTimes(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_scaleValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Envelope *arg1 = (csl::Envelope *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Envelope_scaleValues", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_scaleValues" "', argument " "1"" of type '" "csl::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::Envelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Envelope_scaleValues" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->scaleValues(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Envelope_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Envelope *arg1 = (csl::Envelope *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Envelope_reset" "', argument " "1"" of type '" "csl::Envelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::Envelope * >(argp1);
  (arg1)->reset();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Envelope_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Envelope, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Envelope_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ADSR__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::ADSR *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::ADSR *)new csl::ADSR();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ADSR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ADSR__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  csl::ADSR *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ADSR" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ADSR" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ADSR" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ADSR" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ADSR" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ADSR" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  result = (csl::ADSR *)new csl::ADSR(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ADSR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ADSR__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  csl::ADSR *result = 0 ;
  
  if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ADSR" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ADSR" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ADSR" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ADSR" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ADSR" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ADSR" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_ADSR" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  result = (csl::ADSR *)new csl::ADSR(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ADSR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ADSR__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  csl::ADSR *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ADSR" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ADSR" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ADSR" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ADSR" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ADSR" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  result = (csl::ADSR *)new csl::ADSR(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ADSR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ADSR__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  csl::ADSR *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ADSR" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ADSR" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ADSR" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ADSR" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ADSR" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ADSR" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  result = (csl::ADSR *)new csl::ADSR(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ADSR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ADSR(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[8] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ADSR", 0, 7, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_ADSR__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_new_ADSR__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 6) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_3;
    PyObject *retobj = _wrap_new_ADSR__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_3:
  
  if (argc == 6) {
    PyObject *retobj = _wrap_new_ADSR__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 7) {
    PyObject *retobj = _wrap_new_ADSR__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ADSR'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::ADSR::ADSR()\n"
    "    csl::ADSR::ADSR(csl::LineMode,float,float,float,float,float)\n"
    "    csl::ADSR::ADSR(csl::LineMode,float,float,float,float,float,float)\n"
    "    csl::ADSR::ADSR(float,float,float,float,float)\n"
    "    csl::ADSR::ADSR(float,float,float,float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ADSR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::ADSR *arg1 = (csl::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__ADSR, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ADSR" "', argument " "1"" of type '" "csl::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< csl::ADSR * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setDelay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::ADSR *arg1 = (csl::ADSR *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setDelay" "', argument " "1"" of type '" "csl::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< csl::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setDelay" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setAttack(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::ADSR *arg1 = (csl::ADSR *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setAttack", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setAttack" "', argument " "1"" of type '" "csl::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< csl::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setAttack" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setAttack(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setDecay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::ADSR *arg1 = (csl::ADSR *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setDecay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setDecay" "', argument " "1"" of type '" "csl::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< csl::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setDecay" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setDecay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setSustain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::ADSR *arg1 = (csl::ADSR *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setSustain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setSustain" "', argument " "1"" of type '" "csl::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< csl::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setSustain" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setSustain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_setRelease(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::ADSR *arg1 = (csl::ADSR *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ADSR_setRelease", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_setRelease" "', argument " "1"" of type '" "csl::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< csl::ADSR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ADSR_setRelease" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setRelease(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ADSR_release(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::ADSR *arg1 = (csl::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ADSR_release" "', argument " "1"" of type '" "csl::ADSR *""'"); 
  }
  arg1 = reinterpret_cast< csl::ADSR * >(argp1);
  (arg1)->release();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ADSR_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__ADSR, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ADSR_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_AR__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::AR *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::AR *)new csl::AR();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AR__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::AR *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AR" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AR" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_AR" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_AR" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::AR *)new csl::AR(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AR__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  csl::AR *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AR" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AR" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_AR" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_AR" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_AR" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  result = (csl::AR *)new csl::AR(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AR__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::AR *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AR" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AR" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_AR" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::AR *)new csl::AR(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AR__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::AR *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AR" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AR" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_AR" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_AR" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::AR *)new csl::AR(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AR(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_AR", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_AR__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_AR__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_3;
    PyObject *retobj = _wrap_new_AR__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_3:
  
  if (argc == 4) {
    PyObject *retobj = _wrap_new_AR__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_new_AR__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_AR'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::AR::AR()\n"
    "    csl::AR::AR(csl::LineMode,float,float,float)\n"
    "    csl::AR::AR(csl::LineMode,float,float,float,float)\n"
    "    csl::AR::AR(float,float,float)\n"
    "    csl::AR::AR(float,float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_AR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AR *arg1 = (csl::AR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AR, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AR" "', argument " "1"" of type '" "csl::AR *""'"); 
  }
  arg1 = reinterpret_cast< csl::AR * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AR_setDelay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AR *arg1 = (csl::AR *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AR_setDelay", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AR_setDelay" "', argument " "1"" of type '" "csl::AR *""'"); 
  }
  arg1 = reinterpret_cast< csl::AR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AR_setDelay" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AR_setAttack(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AR *arg1 = (csl::AR *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AR_setAttack", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AR_setAttack" "', argument " "1"" of type '" "csl::AR *""'"); 
  }
  arg1 = reinterpret_cast< csl::AR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AR_setAttack" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setAttack(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AR_setRelease(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AR *arg1 = (csl::AR *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AR_setRelease", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AR_setRelease" "', argument " "1"" of type '" "csl::AR *""'"); 
  }
  arg1 = reinterpret_cast< csl::AR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AR_setRelease" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setRelease(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AR_setAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AR *arg1 = (csl::AR *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AR_setAll", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AR_setAll" "', argument " "1"" of type '" "csl::AR *""'"); 
  }
  arg1 = reinterpret_cast< csl::AR * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AR_setAll" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AR_setAll" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AR_setAll" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->setAll(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AR_release(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AR *arg1 = (csl::AR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AR_release" "', argument " "1"" of type '" "csl::AR *""'"); 
  }
  arg1 = reinterpret_cast< csl::AR * >(argp1);
  (arg1)->release();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AR_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__AR, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *AR_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Triangle__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Triangle *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Triangle *)new csl::Triangle();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Triangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Triangle__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Triangle *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Triangle" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Triangle" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Triangle" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Triangle *)new csl::Triangle(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Triangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Triangle__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::LineMode arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Triangle *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Triangle" "', argument " "1"" of type '" "csl::LineMode""'");
  } 
  arg1 = static_cast< csl::LineMode >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Triangle" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Triangle" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Triangle" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Triangle *)new csl::Triangle(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Triangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Triangle__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Triangle *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Triangle" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Triangle" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Triangle *)new csl::Triangle(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Triangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Triangle__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::Triangle *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Triangle" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::Triangle *)new csl::Triangle(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Triangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Triangle__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Triangle *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Triangle" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Triangle" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Triangle" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Triangle *)new csl::Triangle(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Triangle, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Triangle(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Triangle", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Triangle__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Triangle__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Triangle__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    PyObject *retobj = _wrap_new_Triangle__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_4:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Triangle__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_Triangle__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Triangle'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Triangle::Triangle()\n"
    "    csl::Triangle::Triangle(csl::LineMode,float,float)\n"
    "    csl::Triangle::Triangle(csl::LineMode,float,float,float)\n"
    "    csl::Triangle::Triangle(float,float)\n"
    "    csl::Triangle::Triangle(float)\n"
    "    csl::Triangle::Triangle(float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Triangle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Triangle *arg1 = (csl::Triangle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Triangle, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Triangle" "', argument " "1"" of type '" "csl::Triangle *""'"); 
  }
  arg1 = reinterpret_cast< csl::Triangle * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Triangle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Triangle, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Triangle_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_RandEnvelope__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::RandEnvelope *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RandEnvelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RandEnvelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RandEnvelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_RandEnvelope" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::RandEnvelope *)new csl::RandEnvelope(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RandEnvelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandEnvelope__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::RandEnvelope *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RandEnvelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RandEnvelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_RandEnvelope" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::RandEnvelope *)new csl::RandEnvelope(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RandEnvelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandEnvelope__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::RandEnvelope *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RandEnvelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_RandEnvelope" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::RandEnvelope *)new csl::RandEnvelope(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RandEnvelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandEnvelope__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::RandEnvelope *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_RandEnvelope" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::RandEnvelope *)new csl::RandEnvelope(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RandEnvelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandEnvelope__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::RandEnvelope *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::RandEnvelope *)new csl::RandEnvelope();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__RandEnvelope, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RandEnvelope(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_RandEnvelope", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_RandEnvelope__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_RandEnvelope__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_RandEnvelope__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_RandEnvelope__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_RandEnvelope__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_RandEnvelope'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::RandEnvelope::RandEnvelope(float,float,float,float)\n"
    "    csl::RandEnvelope::RandEnvelope(float,float,float)\n"
    "    csl::RandEnvelope::RandEnvelope(float,float)\n"
    "    csl::RandEnvelope::RandEnvelope(float)\n"
    "    csl::RandEnvelope::RandEnvelope()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_RandEnvelope(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RandEnvelope *arg1 = (csl::RandEnvelope *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RandEnvelope, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RandEnvelope" "', argument " "1"" of type '" "csl::RandEnvelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::RandEnvelope * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandEnvelope_setWalk(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RandEnvelope *arg1 = (csl::RandEnvelope *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RandEnvelope_setWalk", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RandEnvelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandEnvelope_setWalk" "', argument " "1"" of type '" "csl::RandEnvelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::RandEnvelope * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandEnvelope_setWalk" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setWalk(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandEnvelope_setAmplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RandEnvelope *arg1 = (csl::RandEnvelope *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RandEnvelope_setAmplitude", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RandEnvelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandEnvelope_setAmplitude" "', argument " "1"" of type '" "csl::RandEnvelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::RandEnvelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandEnvelope_setAmplitude" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setAmplitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandEnvelope_setFrequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RandEnvelope *arg1 = (csl::RandEnvelope *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RandEnvelope_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RandEnvelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandEnvelope_setFrequency" "', argument " "1"" of type '" "csl::RandEnvelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::RandEnvelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandEnvelope_setFrequency" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandEnvelope_setStep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RandEnvelope *arg1 = (csl::RandEnvelope *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RandEnvelope_setStep", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RandEnvelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandEnvelope_setStep" "', argument " "1"" of type '" "csl::RandEnvelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::RandEnvelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandEnvelope_setStep" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setStep(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RandEnvelope_setOffset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::RandEnvelope *arg1 = (csl::RandEnvelope *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "RandEnvelope_setOffset", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__RandEnvelope, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RandEnvelope_setOffset" "', argument " "1"" of type '" "csl::RandEnvelope *""'"); 
  }
  arg1 = reinterpret_cast< csl::RandEnvelope * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RandEnvelope_setOffset" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setOffset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RandEnvelope_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__RandEnvelope, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *RandEnvelope_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Oscillator" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Oscillator" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Oscillator *)new csl::Oscillator(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Oscillator" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Oscillator *)new csl::Oscillator(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Oscillator *)new csl::Oscillator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::Oscillator *)new csl::Oscillator(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Oscillator *)new csl::Oscillator();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Oscillator" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Oscillator" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Oscillator *)new csl::Oscillator(*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Oscillator" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Oscillator *)new csl::Oscillator(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Oscillator *)new csl::Oscillator(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::Oscillator *)new csl::Oscillator(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Oscillator" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Oscillator" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Oscillator *)new csl::Oscillator(*arg1,*arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Oscillator" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Oscillator *)new csl::Oscillator(*arg1,*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_11(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::Oscillator *)new csl::Oscillator(*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_12(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  csl::UnitGenerator *arg3 = 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Oscillator" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg3 = reinterpret_cast< csl::UnitGenerator * >(argp3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Oscillator" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Oscillator *)new csl::Oscillator(*arg1,*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_13(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  csl::UnitGenerator *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Oscillator" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg3 = reinterpret_cast< csl::UnitGenerator * >(argp3);
  result = (csl::Oscillator *)new csl::Oscillator(*arg1,*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator__SWIG_14(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  csl::UnitGenerator *arg2 = 0 ;
  csl::UnitGenerator *arg3 = 0 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Oscillator *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Oscillator" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Oscillator" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Oscillator" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg3 = reinterpret_cast< csl::UnitGenerator * >(argp3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Oscillator" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Oscillator *)new csl::Oscillator(arg1,*arg2,*arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Oscillator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Oscillator", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Oscillator__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_Oscillator__SWIG_8(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Oscillator__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    return _wrap_new_Oscillator__SWIG_11(self, argc, argv);
  }
check_4:
  
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_5;
    PyObject *retobj = _wrap_new_Oscillator__SWIG_7(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_5:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Oscillator__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_7;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_7;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_7;
    return _wrap_new_Oscillator__SWIG_13(self, argc, argv);
  }
check_7:
  
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_8;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_8;
    PyObject *retobj = _wrap_new_Oscillator__SWIG_10(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_8:
  
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_9;
    PyObject *retobj = _wrap_new_Oscillator__SWIG_6(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_9:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Oscillator__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_11;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_11;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_11;
    PyObject *retobj = _wrap_new_Oscillator__SWIG_12(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_11:
  
  if (argc == 4) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_12;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_12;
    {
      {
        int res = SWIG_AsVal_float(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_12;
    PyObject *retobj = _wrap_new_Oscillator__SWIG_9(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_12:
  
  if (argc == 4) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_13;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_13;
    {
      {
        int res = SWIG_AsVal_float(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_13;
    PyObject *retobj = _wrap_new_Oscillator__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_13:
  
  if (argc == 4) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_14;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_14;
    PyObject *retobj = _wrap_new_Oscillator__SWIG_14(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_14:
  
  if (argc == 4) {
    PyObject *retobj = _wrap_new_Oscillator__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Oscillator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Oscillator::Oscillator(float,float,float,float)\n"
    "    csl::Oscillator::Oscillator(float,float,float)\n"
    "    csl::Oscillator::Oscillator(float,float)\n"
    "    csl::Oscillator::Oscillator(float)\n"
    "    csl::Oscillator::Oscillator()\n"
    "    csl::Oscillator::Oscillator(csl::UnitGenerator &,float,float,float)\n"
    "    csl::Oscillator::Oscillator(csl::UnitGenerator &,float,float)\n"
    "    csl::Oscillator::Oscillator(csl::UnitGenerator &,float)\n"
    "    csl::Oscillator::Oscillator(csl::UnitGenerator &)\n"
    "    csl::Oscillator::Oscillator(csl::UnitGenerator &,csl::UnitGenerator &,float,float)\n"
    "    csl::Oscillator::Oscillator(csl::UnitGenerator &,csl::UnitGenerator &,float)\n"
    "    csl::Oscillator::Oscillator(csl::UnitGenerator &,csl::UnitGenerator &)\n"
    "    csl::Oscillator::Oscillator(csl::UnitGenerator &,csl::UnitGenerator &,csl::UnitGenerator &,float)\n"
    "    csl::Oscillator::Oscillator(csl::UnitGenerator &,csl::UnitGenerator &,csl::UnitGenerator &)\n"
    "    csl::Oscillator::Oscillator(float,csl::UnitGenerator &,csl::UnitGenerator &,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Oscillator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Oscillator *arg1 = (csl::Oscillator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Oscillator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Oscillator" "', argument " "1"" of type '" "csl::Oscillator *""'"); 
  }
  arg1 = reinterpret_cast< csl::Oscillator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Oscillator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Oscillator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Oscillator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_WavetableOscillator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Buffer *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::WavetableOscillator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_WavetableOscillator" "', argument " "1"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_WavetableOscillator" "', argument " "1"" of type '" "csl::Buffer &""'"); 
  }
  arg1 = reinterpret_cast< csl::Buffer * >(argp1);
  result = (csl::WavetableOscillator *)new csl::WavetableOscillator(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WavetableOscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WavetableOscillator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::WavetableOscillator *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_WavetableOscillator" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_WavetableOscillator" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_WavetableOscillator" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_WavetableOscillator" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::WavetableOscillator *)new csl::WavetableOscillator(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WavetableOscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WavetableOscillator__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::WavetableOscillator *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_WavetableOscillator" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_WavetableOscillator" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_WavetableOscillator" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::WavetableOscillator *)new csl::WavetableOscillator(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WavetableOscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WavetableOscillator__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::WavetableOscillator *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_WavetableOscillator" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_WavetableOscillator" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::WavetableOscillator *)new csl::WavetableOscillator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WavetableOscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WavetableOscillator__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::WavetableOscillator *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_WavetableOscillator" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::WavetableOscillator *)new csl::WavetableOscillator(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WavetableOscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WavetableOscillator__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::WavetableOscillator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::WavetableOscillator *)new csl::WavetableOscillator();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WavetableOscillator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WavetableOscillator(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_WavetableOscillator", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_WavetableOscillator__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__Buffer, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_WavetableOscillator__SWIG_0(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_WavetableOscillator__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_WavetableOscillator__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_WavetableOscillator__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_WavetableOscillator__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_WavetableOscillator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::WavetableOscillator::WavetableOscillator(csl::Buffer &)\n"
    "    csl::WavetableOscillator::WavetableOscillator(float,float,float,float)\n"
    "    csl::WavetableOscillator::WavetableOscillator(float,float,float)\n"
    "    csl::WavetableOscillator::WavetableOscillator(float,float)\n"
    "    csl::WavetableOscillator::WavetableOscillator(float)\n"
    "    csl::WavetableOscillator::WavetableOscillator()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_WavetableOscillator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::WavetableOscillator *arg1 = (csl::WavetableOscillator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__WavetableOscillator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_WavetableOscillator" "', argument " "1"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg1 = reinterpret_cast< csl::WavetableOscillator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WavetableOscillator_setWaveform__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::WavetableOscillator *arg1 = (csl::WavetableOscillator *) 0 ;
  csl::Buffer *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WavetableOscillator_setWaveform" "', argument " "1"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg1 = reinterpret_cast< csl::WavetableOscillator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WavetableOscillator_setWaveform" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WavetableOscillator_setWaveform" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_bool(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "WavetableOscillator_setWaveform" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->setWaveform(*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WavetableOscillator_setWaveform__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::WavetableOscillator *arg1 = (csl::WavetableOscillator *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WavetableOscillator_setWaveform" "', argument " "1"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg1 = reinterpret_cast< csl::WavetableOscillator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WavetableOscillator_setWaveform" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WavetableOscillator_setWaveform" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  (arg1)->setWaveform(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WavetableOscillator_setWaveform(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "WavetableOscillator_setWaveform", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_WavetableOscillator_setWaveform__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_WavetableOscillator_setWaveform__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'WavetableOscillator_setWaveform'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::WavetableOscillator::setWaveform(csl::Buffer &,bool)\n"
    "    csl::WavetableOscillator::setWaveform(csl::Buffer &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_WavetableOscillator_setInterpolate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::WavetableOscillator *arg1 = (csl::WavetableOscillator *) 0 ;
  csl::InterpolationPolicy arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "WavetableOscillator_setInterpolate", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WavetableOscillator_setInterpolate" "', argument " "1"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg1 = reinterpret_cast< csl::WavetableOscillator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WavetableOscillator_setInterpolate" "', argument " "2"" of type '" "csl::InterpolationPolicy""'");
  } 
  arg2 = static_cast< csl::InterpolationPolicy >(val2);
  (arg1)->setInterpolate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WavetableOscillator_mInterpolate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::WavetableOscillator *arg1 = (csl::WavetableOscillator *) 0 ;
  csl::InterpolationPolicy arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "WavetableOscillator_mInterpolate_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WavetableOscillator_mInterpolate_set" "', argument " "1"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg1 = reinterpret_cast< csl::WavetableOscillator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WavetableOscillator_mInterpolate_set" "', argument " "2"" of type '" "csl::InterpolationPolicy""'");
  } 
  arg2 = static_cast< csl::InterpolationPolicy >(val2);
  if (arg1) (arg1)->mInterpolate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WavetableOscillator_mInterpolate_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::WavetableOscillator *arg1 = (csl::WavetableOscillator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::InterpolationPolicy result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WavetableOscillator_mInterpolate_get" "', argument " "1"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg1 = reinterpret_cast< csl::WavetableOscillator * >(argp1);
  result = (csl::InterpolationPolicy) ((arg1)->mInterpolate);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WavetableOscillator_mWavetable_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::WavetableOscillator *arg1 = (csl::WavetableOscillator *) 0 ;
  csl::Buffer *arg2 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "WavetableOscillator_mWavetable_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WavetableOscillator_mWavetable_set" "', argument " "1"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg1 = reinterpret_cast< csl::WavetableOscillator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WavetableOscillator_mWavetable_set" "', argument " "2"" of type '" "csl::Buffer *""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  if (arg1) (arg1)->mWavetable = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WavetableOscillator_mWavetable_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::WavetableOscillator *arg1 = (csl::WavetableOscillator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Buffer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WavetableOscillator_mWavetable_get" "', argument " "1"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg1 = reinterpret_cast< csl::WavetableOscillator * >(argp1);
  result = (csl::Buffer *)& ((arg1)->mWavetable);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *WavetableOscillator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__WavetableOscillator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *WavetableOscillator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_CompOrCacheOscillator_createCache(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CompOrCacheOscillator *arg1 = (csl::CompOrCacheOscillator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CompOrCacheOscillator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CompOrCacheOscillator_createCache" "', argument " "1"" of type '" "csl::CompOrCacheOscillator *""'"); 
  }
  arg1 = reinterpret_cast< csl::CompOrCacheOscillator * >(argp1);
  (arg1)->createCache();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CompOrCacheOscillator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CompOrCacheOscillator *arg1 = (csl::CompOrCacheOscillator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CompOrCacheOscillator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CompOrCacheOscillator" "', argument " "1"" of type '" "csl::CompOrCacheOscillator *""'"); 
  }
  arg1 = reinterpret_cast< csl::CompOrCacheOscillator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CompOrCacheOscillator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__CompOrCacheOscillator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Sine__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Sine *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Sine" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Sine" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Sine" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Sine" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Sine *)new csl::Sine(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Sine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sine__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Sine *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Sine" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Sine" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Sine" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Sine *)new csl::Sine(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Sine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sine__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Sine *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Sine" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Sine" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Sine *)new csl::Sine(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Sine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sine__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::Sine *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Sine" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::Sine *)new csl::Sine(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Sine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sine__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Sine *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Sine *)new csl::Sine();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Sine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sine(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Sine", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Sine__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Sine__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Sine__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Sine__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_Sine__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Sine'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Sine::Sine(float,float,float,float)\n"
    "    csl::Sine::Sine(float,float,float)\n"
    "    csl::Sine::Sine(float,float)\n"
    "    csl::Sine::Sine(float)\n"
    "    csl::Sine::Sine()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Sine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Sine *arg1 = (csl::Sine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Sine, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Sine" "', argument " "1"" of type '" "csl::Sine *""'"); 
  }
  arg1 = reinterpret_cast< csl::Sine * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Sine_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Sine, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Sine_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FSine__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::FSine *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FSine" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FSine" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FSine" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_FSine" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::FSine *)new csl::FSine(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FSine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FSine__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::FSine *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FSine" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FSine" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FSine" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::FSine *)new csl::FSine(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FSine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FSine__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::FSine *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FSine" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FSine" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::FSine *)new csl::FSine(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FSine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FSine__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::FSine *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FSine" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::FSine *)new csl::FSine(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FSine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FSine__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::FSine *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::FSine *)new csl::FSine();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FSine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FSine(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FSine", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_FSine__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_FSine__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_FSine__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_FSine__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_FSine__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FSine'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FSine::FSine(float,float,float,float)\n"
    "    csl::FSine::FSine(float,float,float)\n"
    "    csl::FSine::FSine(float,float)\n"
    "    csl::FSine::FSine(float)\n"
    "    csl::FSine::FSine()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FSine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FSine *arg1 = (csl::FSine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FSine, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FSine" "', argument " "1"" of type '" "csl::FSine *""'"); 
  }
  arg1 = reinterpret_cast< csl::FSine * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FSine_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__FSine, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FSine_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Sawtooth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Sawtooth *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Sawtooth" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Sawtooth" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Sawtooth" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Sawtooth" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Sawtooth *)new csl::Sawtooth(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Sawtooth, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sawtooth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Sawtooth *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Sawtooth" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Sawtooth" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Sawtooth" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Sawtooth *)new csl::Sawtooth(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Sawtooth, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sawtooth__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Sawtooth *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Sawtooth" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Sawtooth" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Sawtooth *)new csl::Sawtooth(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Sawtooth, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sawtooth__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::Sawtooth *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Sawtooth" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::Sawtooth *)new csl::Sawtooth(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Sawtooth, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sawtooth__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Sawtooth *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Sawtooth *)new csl::Sawtooth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Sawtooth, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Sawtooth(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Sawtooth", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Sawtooth__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Sawtooth__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Sawtooth__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Sawtooth__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_Sawtooth__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Sawtooth'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Sawtooth::Sawtooth(float,float,float,float)\n"
    "    csl::Sawtooth::Sawtooth(float,float,float)\n"
    "    csl::Sawtooth::Sawtooth(float,float)\n"
    "    csl::Sawtooth::Sawtooth(float)\n"
    "    csl::Sawtooth::Sawtooth()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Sawtooth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Sawtooth *arg1 = (csl::Sawtooth *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Sawtooth, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Sawtooth" "', argument " "1"" of type '" "csl::Sawtooth *""'"); 
  }
  arg1 = reinterpret_cast< csl::Sawtooth * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Sawtooth_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Sawtooth, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Sawtooth_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Square__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Square *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Square" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Square" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Square" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Square" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Square *)new csl::Square(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Square, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Square__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Square *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Square" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Square" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Square" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Square *)new csl::Square(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Square, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Square__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Square *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Square" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Square" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Square *)new csl::Square(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Square, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Square__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::Square *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Square" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::Square *)new csl::Square(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Square, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Square__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Square *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Square *)new csl::Square();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Square, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Square(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Square", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Square__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Square__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Square__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Square__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_Square__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Square'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Square::Square(float,float,float,float)\n"
    "    csl::Square::Square(float,float,float)\n"
    "    csl::Square::Square(float,float)\n"
    "    csl::Square::Square(float)\n"
    "    csl::Square::Square()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Square(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Square *arg1 = (csl::Square *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Square, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Square" "', argument " "1"" of type '" "csl::Square *""'"); 
  }
  arg1 = reinterpret_cast< csl::Square * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Square_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Square, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Square_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Impulse__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Impulse *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Impulse *)new csl::Impulse();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Impulse, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Impulse__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::Impulse *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Impulse" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::Impulse *)new csl::Impulse(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Impulse, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Impulse__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Impulse *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Impulse" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Impulse" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Impulse *)new csl::Impulse(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Impulse, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Impulse__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Impulse *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Impulse" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Impulse" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Impulse" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Impulse *)new csl::Impulse(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Impulse, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Impulse__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Impulse *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Impulse" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Impulse" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Impulse" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Impulse" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Impulse *)new csl::Impulse(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Impulse, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Impulse(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Impulse", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Impulse__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Impulse__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Impulse__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Impulse__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_Impulse__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Impulse'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Impulse::Impulse()\n"
    "    csl::Impulse::Impulse(float)\n"
    "    csl::Impulse::Impulse(float,float)\n"
    "    csl::Impulse::Impulse(float,float,float)\n"
    "    csl::Impulse::Impulse(float,float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Impulse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Impulse *arg1 = (csl::Impulse *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Impulse, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Impulse" "', argument " "1"" of type '" "csl::Impulse *""'"); 
  }
  arg1 = reinterpret_cast< csl::Impulse * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Impulse_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Impulse, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Impulse_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_Partial_number_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Partial *arg1 = (csl::Partial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Partial_number_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Partial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Partial_number_set" "', argument " "1"" of type '" "csl::Partial *""'"); 
  }
  arg1 = reinterpret_cast< csl::Partial * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Partial_number_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->number = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Partial_number_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Partial *arg1 = (csl::Partial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Partial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Partial_number_get" "', argument " "1"" of type '" "csl::Partial *""'"); 
  }
  arg1 = reinterpret_cast< csl::Partial * >(argp1);
  result = (float) ((arg1)->number);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Partial_amplitude_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Partial *arg1 = (csl::Partial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Partial_amplitude_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Partial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Partial_amplitude_set" "', argument " "1"" of type '" "csl::Partial *""'"); 
  }
  arg1 = reinterpret_cast< csl::Partial * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Partial_amplitude_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->amplitude = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Partial_amplitude_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Partial *arg1 = (csl::Partial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Partial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Partial_amplitude_get" "', argument " "1"" of type '" "csl::Partial *""'"); 
  }
  arg1 = reinterpret_cast< csl::Partial * >(argp1);
  result = (float) ((arg1)->amplitude);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Partial_phase_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Partial *arg1 = (csl::Partial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Partial_phase_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Partial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Partial_phase_set" "', argument " "1"" of type '" "csl::Partial *""'"); 
  }
  arg1 = reinterpret_cast< csl::Partial * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Partial_phase_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->phase = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Partial_phase_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Partial *arg1 = (csl::Partial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Partial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Partial_phase_get" "', argument " "1"" of type '" "csl::Partial *""'"); 
  }
  arg1 = reinterpret_cast< csl::Partial * >(argp1);
  result = (float) ((arg1)->phase);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Partial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Partial *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Partial", 0, 0, 0)) SWIG_fail;
  result = (csl::Partial *)new csl::Partial();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Partial, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Partial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Partial *arg1 = (csl::Partial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Partial, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Partial" "', argument " "1"" of type '" "csl::Partial *""'"); 
  }
  arg1 = reinterpret_cast< csl::Partial * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Partial_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Partial, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Partial_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_SumOfSines__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SumOfSines *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_SumOfSines", 0, 0)) SWIG_fail;
  result = (csl::SumOfSines *)new csl::SumOfSines();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SumOfSines, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SumOfSines__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  csl::SumOfSines *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_SumOfSines", 1, 1, &obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SumOfSines" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::SumOfSines *)new csl::SumOfSines(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SumOfSines, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SumOfSines__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  float arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csl::SumOfSines *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_SumOfSines", 2, 2, &obj0, &obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SumOfSines" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SumOfSines" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::SumOfSines *)new csl::SumOfSines(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SumOfSines, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SumOfSines__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  unsigned int arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csl::SumOfSines *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_SumOfSines", 3, 3, &obj0, &obj1, &obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SumOfSines" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SumOfSines" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SumOfSines" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::SumOfSines *)new csl::SumOfSines(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SumOfSines, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SumOfSines__SWIG_4__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  csl::PartialDescriptionMode arg1 ;
  unsigned int arg2 ;
  void *arg3 = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csl::SumOfSines *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_SumOfSines", 2, 2, &obj0, &obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SumOfSines" "', argument " "1"" of type '" "csl::PartialDescriptionMode""'");
  } 
  arg1 = static_cast< csl::PartialDescriptionMode >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SumOfSines" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::SumOfSines *)new csl::SumOfSines(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SumOfSines, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SumOfSines__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,2);
  varargs = PyTuple_GetSlice(args,2,PyTuple_Size(args));
  resultobj = _wrap_new_SumOfSines__SWIG_4__varargs__(NULL,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_new_SumOfSines__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csl::SumOfSines *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_SumOfSines", 1, 1, &obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csl__SHARCSpectrum,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SumOfSines" "', argument " "1"" of type '" "csl::SHARCSpectrum &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SumOfSines" "', argument " "1"" of type '" "csl::SHARCSpectrum &""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  result = (csl::SumOfSines *)new csl::SumOfSines(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SumOfSines, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SumOfSines(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_SumOfSines", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_SumOfSines__SWIG_0(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__SHARCSpectrum, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_SumOfSines__SWIG_5(self, args);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_SumOfSines__SWIG_1(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    return _wrap_new_SumOfSines__SWIG_2(self, args);
  }
check_4:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_SumOfSines__SWIG_4(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_SumOfSines__SWIG_3(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_SumOfSines'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SumOfSines::SumOfSines()\n"
    "    csl::SumOfSines::SumOfSines(float)\n"
    "    csl::SumOfSines::SumOfSines(unsigned int,float)\n"
    "    csl::SumOfSines::SumOfSines(float,unsigned int,float)\n"
    "    csl::SumOfSines::SumOfSines(csl::PartialDescriptionMode,unsigned int,...)\n"
    "    csl::SumOfSines::SumOfSines(csl::SHARCSpectrum &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SumOfSines_addPartial__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SumOfSines *arg1 = (csl::SumOfSines *) 0 ;
  csl::Partial *arg2 = (csl::Partial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumOfSines_addPartial" "', argument " "1"" of type '" "csl::SumOfSines *""'"); 
  }
  arg1 = reinterpret_cast< csl::SumOfSines * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Partial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SumOfSines_addPartial" "', argument " "2"" of type '" "csl::Partial *""'"); 
  }
  arg2 = reinterpret_cast< csl::Partial * >(argp2);
  (arg1)->addPartial(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumOfSines_addPartials__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SumOfSines *arg1 = (csl::SumOfSines *) 0 ;
  unsigned int arg2 ;
  csl::Partial **arg3 = (csl::Partial **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumOfSines_addPartials" "', argument " "1"" of type '" "csl::SumOfSines *""'"); 
  }
  arg1 = reinterpret_cast< csl::SumOfSines * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SumOfSines_addPartials" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_csl__Partial, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumOfSines_addPartials" "', argument " "3"" of type '" "csl::Partial **""'"); 
  }
  arg3 = reinterpret_cast< csl::Partial ** >(argp3);
  (arg1)->addPartials(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumOfSines_addPartials__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SumOfSines *arg1 = (csl::SumOfSines *) 0 ;
  int arg2 ;
  void **arg3 = (void **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumOfSines_addPartials" "', argument " "1"" of type '" "csl::SumOfSines *""'"); 
  }
  arg1 = reinterpret_cast< csl::SumOfSines * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SumOfSines_addPartials" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SumOfSines_addPartials" "', argument " "3"" of type '" "void **""'"); 
  }
  arg3 = reinterpret_cast< void ** >(argp3);
  (arg1)->addPartials(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumOfSines_addPartials(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SumOfSines_addPartials", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_p_csl__Partial, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_SumOfSines_addPartials__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_SumOfSines_addPartials__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SumOfSines_addPartials'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SumOfSines::addPartials(unsigned int,csl::Partial **)\n"
    "    csl::SumOfSines::addPartials(int,void **)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SumOfSines_addPartial__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SumOfSines *arg1 = (csl::SumOfSines *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumOfSines_addPartial" "', argument " "1"" of type '" "csl::SumOfSines *""'"); 
  }
  arg1 = reinterpret_cast< csl::SumOfSines * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SumOfSines_addPartial" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SumOfSines_addPartial" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->addPartial(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumOfSines_addPartial__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SumOfSines *arg1 = (csl::SumOfSines *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumOfSines_addPartial" "', argument " "1"" of type '" "csl::SumOfSines *""'"); 
  }
  arg1 = reinterpret_cast< csl::SumOfSines * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SumOfSines_addPartial" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SumOfSines_addPartial" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SumOfSines_addPartial" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->addPartial(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SumOfSines_addPartial(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SumOfSines_addPartial", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_SumOfSines_addPartial__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_SumOfSines_addPartial__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_SumOfSines_addPartial__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SumOfSines_addPartial'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SumOfSines::addPartial(csl::Partial *)\n"
    "    csl::SumOfSines::addPartial(float,float)\n"
    "    csl::SumOfSines::addPartial(float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SumOfSines_clearPartials(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SumOfSines *arg1 = (csl::SumOfSines *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SumOfSines_clearPartials" "', argument " "1"" of type '" "csl::SumOfSines *""'"); 
  }
  arg1 = reinterpret_cast< csl::SumOfSines * >(argp1);
  (arg1)->clearPartials();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SumOfSines(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SumOfSines *arg1 = (csl::SumOfSines *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SumOfSines, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SumOfSines" "', argument " "1"" of type '" "csl::SumOfSines *""'"); 
  }
  arg1 = reinterpret_cast< csl::SumOfSines * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SumOfSines_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__SumOfSines, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SumOfSines_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_Noise_generateRandomNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Noise *arg1 = (csl::Noise *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Noise, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Noise_generateRandomNumber" "', argument " "1"" of type '" "csl::Noise *""'"); 
  }
  arg1 = reinterpret_cast< csl::Noise * >(argp1);
  result = (int)(arg1)->generateRandomNumber();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Noise_generateNormalizedRandomNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Noise *arg1 = (csl::Noise *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Noise, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Noise_generateNormalizedRandomNumber" "', argument " "1"" of type '" "csl::Noise *""'"); 
  }
  arg1 = reinterpret_cast< csl::Noise * >(argp1);
  result = (float)(arg1)->generateNormalizedRandomNumber();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Noise_setSeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Noise *arg1 = (csl::Noise *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Noise_setSeed", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Noise, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Noise_setSeed" "', argument " "1"" of type '" "csl::Noise *""'"); 
  }
  arg1 = reinterpret_cast< csl::Noise * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Noise_setSeed" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setSeed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Noise__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Noise *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Noise *)new csl::Noise();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Noise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Noise__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  csl::Noise *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Noise" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Noise" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (csl::Noise *)new csl::Noise(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Noise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Noise__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  csl::Noise *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Noise" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  result = (csl::Noise *)new csl::Noise(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Noise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Noise__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  double arg2 ;
  double arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  csl::Noise *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Noise" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Noise" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Noise" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  result = (csl::Noise *)new csl::Noise(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Noise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Noise__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  double arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  csl::Noise *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Noise" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Noise" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (csl::Noise *)new csl::Noise(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Noise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Noise__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  csl::Noise *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Noise" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (csl::Noise *)new csl::Noise(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Noise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Noise(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Noise", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Noise__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_new_Noise__SWIG_5(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Noise__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    PyObject *retobj = _wrap_new_Noise__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_4:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Noise__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Noise__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Noise'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Noise::Noise()\n"
    "    csl::Noise::Noise(double,double)\n"
    "    csl::Noise::Noise(double)\n"
    "    csl::Noise::Noise(int,double,double)\n"
    "    csl::Noise::Noise(int,double)\n"
    "    csl::Noise::Noise(int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Noise(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Noise *arg1 = (csl::Noise *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Noise, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Noise" "', argument " "1"" of type '" "csl::Noise *""'"); 
  }
  arg1 = reinterpret_cast< csl::Noise * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Noise_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Noise, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Noise_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_WhiteNoise__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::WhiteNoise *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::WhiteNoise *)new csl::WhiteNoise();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WhiteNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WhiteNoise__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  csl::WhiteNoise *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_WhiteNoise" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_WhiteNoise" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (csl::WhiteNoise *)new csl::WhiteNoise(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WhiteNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WhiteNoise__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  csl::WhiteNoise *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_WhiteNoise" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  result = (csl::WhiteNoise *)new csl::WhiteNoise(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WhiteNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WhiteNoise__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  double arg2 ;
  double arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  csl::WhiteNoise *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_WhiteNoise" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_WhiteNoise" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_WhiteNoise" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  result = (csl::WhiteNoise *)new csl::WhiteNoise(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WhiteNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WhiteNoise__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  double arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  csl::WhiteNoise *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_WhiteNoise" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_WhiteNoise" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (csl::WhiteNoise *)new csl::WhiteNoise(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WhiteNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WhiteNoise__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  csl::WhiteNoise *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_WhiteNoise" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (csl::WhiteNoise *)new csl::WhiteNoise(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WhiteNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WhiteNoise(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_WhiteNoise", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_WhiteNoise__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_new_WhiteNoise__SWIG_5(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_WhiteNoise__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    PyObject *retobj = _wrap_new_WhiteNoise__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_4:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_WhiteNoise__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_WhiteNoise__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_WhiteNoise'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::WhiteNoise::WhiteNoise()\n"
    "    csl::WhiteNoise::WhiteNoise(double,double)\n"
    "    csl::WhiteNoise::WhiteNoise(double)\n"
    "    csl::WhiteNoise::WhiteNoise(int,double,double)\n"
    "    csl::WhiteNoise::WhiteNoise(int,double)\n"
    "    csl::WhiteNoise::WhiteNoise(int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_WhiteNoise(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::WhiteNoise *arg1 = (csl::WhiteNoise *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__WhiteNoise, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_WhiteNoise" "', argument " "1"" of type '" "csl::WhiteNoise *""'"); 
  }
  arg1 = reinterpret_cast< csl::WhiteNoise * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *WhiteNoise_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__WhiteNoise, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *WhiteNoise_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PinkNoise__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::PinkNoise *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::PinkNoise *)new csl::PinkNoise();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__PinkNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PinkNoise__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  csl::PinkNoise *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_PinkNoise" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PinkNoise" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (csl::PinkNoise *)new csl::PinkNoise(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__PinkNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PinkNoise__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  csl::PinkNoise *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_PinkNoise" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  result = (csl::PinkNoise *)new csl::PinkNoise(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__PinkNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PinkNoise__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  double arg2 ;
  double arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  csl::PinkNoise *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_PinkNoise" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PinkNoise" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_PinkNoise" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  result = (csl::PinkNoise *)new csl::PinkNoise(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__PinkNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PinkNoise__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  double arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  csl::PinkNoise *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_PinkNoise" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PinkNoise" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = (csl::PinkNoise *)new csl::PinkNoise(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__PinkNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PinkNoise__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  csl::PinkNoise *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_PinkNoise" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (csl::PinkNoise *)new csl::PinkNoise(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__PinkNoise, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PinkNoise(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_PinkNoise", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_PinkNoise__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_new_PinkNoise__SWIG_5(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_PinkNoise__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    PyObject *retobj = _wrap_new_PinkNoise__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_4:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_PinkNoise__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_PinkNoise__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_PinkNoise'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::PinkNoise::PinkNoise()\n"
    "    csl::PinkNoise::PinkNoise(double,double)\n"
    "    csl::PinkNoise::PinkNoise(double)\n"
    "    csl::PinkNoise::PinkNoise(int,double,double)\n"
    "    csl::PinkNoise::PinkNoise(int,double)\n"
    "    csl::PinkNoise::PinkNoise(int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_PinkNoise(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::PinkNoise *arg1 = (csl::PinkNoise *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__PinkNoise, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PinkNoise" "', argument " "1"" of type '" "csl::PinkNoise *""'"); 
  }
  arg1 = reinterpret_cast< csl::PinkNoise * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PinkNoise_nextPink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::PinkNoise *arg1 = (csl::PinkNoise *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::sample result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__PinkNoise, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PinkNoise_nextPink" "', argument " "1"" of type '" "csl::PinkNoise *""'"); 
  }
  arg1 = reinterpret_cast< csl::PinkNoise * >(argp1);
  result = (csl::sample)(arg1)->nextPink();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PinkNoise_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__PinkNoise, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PinkNoise_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FFT__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  int arg2 ;
  CSL_FFTType arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  csl::FFT *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FFT" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FFT" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FFT" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_CSL_FFTType,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FFT" "', argument " "3"" of type '" "CSL_FFTType""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FFT" "', argument " "3"" of type '" "CSL_FFTType""'");
    } else {
      CSL_FFTType * temp = reinterpret_cast< CSL_FFTType * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  result = (csl::FFT *)new csl::FFT(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FFT, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FFT__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  csl::FFT *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FFT" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FFT" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FFT" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (csl::FFT *)new csl::FFT(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FFT, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FFT__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::FFT *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FFT" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FFT" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::FFT *)new csl::FFT(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FFT, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FFT(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FFT", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_new_FFT__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_FFT__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_FFT__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FFT'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FFT::FFT(csl::UnitGenerator &,int,CSL_FFTType)\n"
    "    csl::FFT::FFT(csl::UnitGenerator &,int)\n"
    "    csl::FFT::FFT(csl::UnitGenerator &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FFT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FFT *arg1 = (csl::FFT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FFT, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FFT" "', argument " "1"" of type '" "csl::FFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::FFT * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FFT_fftSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FFT *arg1 = (csl::FFT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FFT_fftSize" "', argument " "1"" of type '" "csl::FFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::FFT * >(argp1);
  result = (int)(arg1)->fftSize();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FFT_mOverwriteOutput_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FFT *arg1 = (csl::FFT *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FFT_mOverwriteOutput_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FFT_mOverwriteOutput_set" "', argument " "1"" of type '" "csl::FFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::FFT * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FFT_mOverwriteOutput_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mOverwriteOutput = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FFT_mOverwriteOutput_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FFT *arg1 = (csl::FFT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FFT_mOverwriteOutput_get" "', argument " "1"" of type '" "csl::FFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::FFT * >(argp1);
  result = (bool) ((arg1)->mOverwriteOutput);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FFT_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__FFT, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FFT_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_IFFT__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  CSL_FFTType arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  csl::IFFT *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IFFT" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_CSL_FFTType,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_IFFT" "', argument " "2"" of type '" "CSL_FFTType""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IFFT" "', argument " "2"" of type '" "CSL_FFTType""'");
    } else {
      CSL_FFTType * temp = reinterpret_cast< CSL_FFTType * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (csl::IFFT *)new csl::IFFT(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IFFT, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IFFT__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  csl::IFFT *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IFFT" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (csl::IFFT *)new csl::IFFT(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IFFT, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IFFT__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::IFFT *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::IFFT *)new csl::IFFT();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__IFFT, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IFFT(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_IFFT", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_IFFT__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_IFFT__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_IFFT__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_IFFT'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::IFFT::IFFT(int,CSL_FFTType)\n"
    "    csl::IFFT::IFFT(int)\n"
    "    csl::IFFT::IFFT()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_IFFT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IFFT *arg1 = (csl::IFFT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IFFT, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IFFT" "', argument " "1"" of type '" "csl::IFFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::IFFT * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IFFT_fftSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IFFT *arg1 = (csl::IFFT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IFFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IFFT_fftSize" "', argument " "1"" of type '" "csl::IFFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::IFFT * >(argp1);
  result = (int)(arg1)->fftSize();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IFFT_binValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IFFT *arg1 = (csl::IFFT *) 0 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IFFT_binValue", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IFFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IFFT_binValue" "', argument " "1"" of type '" "csl::IFFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::IFFT * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IFFT_binValue" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IFFT_binValue" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IFFT_binValue" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  (arg1)->binValue(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IFFT_binValueMagPhase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IFFT *arg1 = (csl::IFFT *) 0 ;
  int arg2 ;
  float *arg3 = (float *) 0 ;
  float *arg4 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IFFT_binValueMagPhase", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IFFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IFFT_binValueMagPhase" "', argument " "1"" of type '" "csl::IFFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::IFFT * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IFFT_binValueMagPhase" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IFFT_binValueMagPhase" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IFFT_binValueMagPhase" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  (arg1)->binValueMagPhase(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IFFT_setBin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IFFT *arg1 = (csl::IFFT *) 0 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IFFT_setBin", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IFFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IFFT_setBin" "', argument " "1"" of type '" "csl::IFFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::IFFT * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IFFT_setBin" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IFFT_setBin" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IFFT_setBin" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->setBin(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IFFT_setBins__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::IFFT *arg1 = (csl::IFFT *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IFFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IFFT_setBins" "', argument " "1"" of type '" "csl::IFFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::IFFT * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IFFT_setBins" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IFFT_setBins" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  (arg1)->setBins(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IFFT_setBins__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::IFFT *arg1 = (csl::IFFT *) 0 ;
  csl::SampleComplexVector arg2 = (csl::SampleComplexVector) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IFFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IFFT_setBins" "', argument " "1"" of type '" "csl::IFFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::IFFT * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_a_2__float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IFFT_setBins" "', argument " "2"" of type '" "csl::SampleComplexVector""'"); 
  }
  arg2 = reinterpret_cast< csl::SampleComplexVector >(argp2);
  (arg1)->setBins(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IFFT_setBins__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::IFFT *arg1 = (csl::IFFT *) 0 ;
  csl::SampleBuffer arg2 = (csl::SampleBuffer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IFFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IFFT_setBins" "', argument " "1"" of type '" "csl::IFFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::IFFT * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IFFT_setBins" "', argument " "2"" of type '" "csl::SampleBuffer""'"); 
  }
  arg2 = reinterpret_cast< csl::SampleBuffer >(argp2);
  (arg1)->setBins(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IFFT_setBins__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::IFFT *arg1 = (csl::IFFT *) 0 ;
  int arg2 ;
  int arg3 ;
  float *arg4 = (float *) 0 ;
  float *arg5 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IFFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IFFT_setBins" "', argument " "1"" of type '" "csl::IFFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::IFFT * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IFFT_setBins" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IFFT_setBins" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IFFT_setBins" "', argument " "4"" of type '" "float *""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "IFFT_setBins" "', argument " "5"" of type '" "float *""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  (arg1)->setBins(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IFFT_setBins(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "IFFT_setBins", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_a_2__float, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_IFFT_setBins__SWIG_1(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_IFFT_setBins__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_IFFT_setBins__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_IFFT_setBins__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'IFFT_setBins'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::IFFT::setBins(float *,float *)\n"
    "    csl::IFFT::setBins(csl::SampleComplexVector)\n"
    "    csl::IFFT::setBins(csl::SampleBuffer)\n"
    "    csl::IFFT::setBins(int,int,float *,float *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IFFT_setBinMagPhase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IFFT *arg1 = (csl::IFFT *) 0 ;
  int arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IFFT_setBinMagPhase", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IFFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IFFT_setBinMagPhase" "', argument " "1"" of type '" "csl::IFFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::IFFT * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IFFT_setBinMagPhase" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IFFT_setBinMagPhase" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IFFT_setBinMagPhase" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->setBinMagPhase(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IFFT_setBinsMagPhase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IFFT *arg1 = (csl::IFFT *) 0 ;
  float *arg2 = (float *) 0 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "IFFT_setBinsMagPhase", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__IFFT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IFFT_setBinsMagPhase" "', argument " "1"" of type '" "csl::IFFT *""'"); 
  }
  arg1 = reinterpret_cast< csl::IFFT * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IFFT_setBinsMagPhase" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IFFT_setBinsMagPhase" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  (arg1)->setBinsMagPhase(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IFFT_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__IFFT, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *IFFT_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_KarplusString__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::KarplusString *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_KarplusString" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::KarplusString *)new csl::KarplusString(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__KarplusString, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_KarplusString__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::KarplusString *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::KarplusString *)new csl::KarplusString();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__KarplusString, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_KarplusString(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_KarplusString", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_KarplusString__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_KarplusString__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_KarplusString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::KarplusString::KarplusString(float)\n"
    "    csl::KarplusString::KarplusString()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_KarplusString_setFrequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::KarplusString *arg1 = (csl::KarplusString *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "KarplusString_setFrequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__KarplusString, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KarplusString_setFrequency" "', argument " "1"" of type '" "csl::KarplusString *""'"); 
  }
  arg1 = reinterpret_cast< csl::KarplusString * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KarplusString_setFrequency" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KarplusString_mDelayLine_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::KarplusString *arg1 = (csl::KarplusString *) 0 ;
  csl::Buffer *arg2 = (csl::Buffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "KarplusString_mDelayLine_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__KarplusString, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KarplusString_mDelayLine_set" "', argument " "1"" of type '" "csl::KarplusString *""'"); 
  }
  arg1 = reinterpret_cast< csl::KarplusString * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Buffer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "KarplusString_mDelayLine_set" "', argument " "2"" of type '" "csl::Buffer *""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  if (arg1) (arg1)->mDelayLine = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KarplusString_mDelayLine_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::KarplusString *arg1 = (csl::KarplusString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Buffer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__KarplusString, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KarplusString_mDelayLine_get" "', argument " "1"" of type '" "csl::KarplusString *""'"); 
  }
  arg1 = reinterpret_cast< csl::KarplusString * >(argp1);
  result = (csl::Buffer *)& ((arg1)->mDelayLine);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_KarplusString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::KarplusString *arg1 = (csl::KarplusString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__KarplusString, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_KarplusString" "', argument " "1"" of type '" "csl::KarplusString *""'"); 
  }
  arg1 = reinterpret_cast< csl::KarplusString * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *KarplusString_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__KarplusString, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *KarplusString_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_SHARCSpectrum__note_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCSpectrum__note_name_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__note_name_set" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SHARCSpectrum__note_name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg1->_note_name) delete[] arg1->_note_name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->_note_name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->_note_name = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__note_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__note_name_get" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  result = (char *) ((arg1)->_note_name);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__midi_key_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCSpectrum__midi_key_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__midi_key_set" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SHARCSpectrum__midi_key_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->_midi_key = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__midi_key_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__midi_key_get" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  result = (unsigned int) ((arg1)->_midi_key);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__nom_pitch_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCSpectrum__nom_pitch_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__nom_pitch_set" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SHARCSpectrum__nom_pitch_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->_nom_pitch = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__nom_pitch_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__nom_pitch_get" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  result = (float) ((arg1)->_nom_pitch);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__actual_pitch_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCSpectrum__actual_pitch_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__actual_pitch_set" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SHARCSpectrum__actual_pitch_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->_actual_pitch = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__actual_pitch_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__actual_pitch_get" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  result = (float) ((arg1)->_actual_pitch);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__max_amp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCSpectrum__max_amp_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__max_amp_set" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SHARCSpectrum__max_amp_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->_max_amp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__max_amp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__max_amp_get" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  result = (unsigned int) ((arg1)->_max_amp);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__num_partials_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCSpectrum__num_partials_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__num_partials_set" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SHARCSpectrum__num_partials_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->_num_partials = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__num_partials_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__num_partials_get" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  result = (unsigned int) ((arg1)->_num_partials);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__partials_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  csl::Partial **arg2 = (csl::Partial **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCSpectrum__partials_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__partials_set" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_csl__Partial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SHARCSpectrum__partials_set" "', argument " "2"" of type '" "csl::Partial **""'"); 
  }
  arg2 = reinterpret_cast< csl::Partial ** >(argp2);
  if (arg1) (arg1)->_partials = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum__partials_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Partial **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum__partials_get" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  result = (csl::Partial **) ((arg1)->_partials);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_csl__Partial, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SHARCSpectrum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  float arg4 ;
  float arg5 ;
  unsigned int arg6 ;
  unsigned int arg7 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  PyObject *swig_obj[7] ;
  csl::SHARCSpectrum *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_SHARCSpectrum", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SHARCSpectrum" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SHARCSpectrum" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SHARCSpectrum" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_SHARCSpectrum" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_SHARCSpectrum" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_SHARCSpectrum" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_int(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_SHARCSpectrum" "', argument " "7"" of type '" "unsigned int""'");
  } 
  arg7 = static_cast< unsigned int >(val7);
  result = (csl::SHARCSpectrum *)new csl::SHARCSpectrum(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCSpectrum, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SHARCSpectrum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SHARCSpectrum" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum_read_from_file(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject *swig_obj[3] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCSpectrum_read_from_file", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum_read_from_file" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SHARCSpectrum_read_from_file" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(swig_obj[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SHARCSpectrum_read_from_file" "', argument " "3"" of type '" "char *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)(arg1)->read_from_file(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum_count_partials(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum_count_partials" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  result = (unsigned int)(arg1)->count_partials();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCSpectrum_dump_example(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCSpectrum_dump_example" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  (arg1)->dump_example();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SHARCSpectrum_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__SHARCSpectrum, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SHARCSpectrum_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_SHARCInstrument__name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCInstrument__name_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument__name_set" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SHARCInstrument__name_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg1->_name) delete[] arg1->_name;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->_name = (char *)reinterpret_cast< char* >(memcpy(new char[size], reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->_name = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument__name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument__name_get" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  result = (char *) ((arg1)->_name);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument__num_spectra_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCInstrument__num_spectra_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument__num_spectra_set" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SHARCInstrument__num_spectra_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->_num_spectra = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument__num_spectra_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument__num_spectra_get" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  result = (unsigned int) ((arg1)->_num_spectra);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument__spectra_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  csl::SHARCSpectrum **arg2 = (csl::SHARCSpectrum **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCInstrument__spectra_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument__spectra_set" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SHARCInstrument__spectra_set" "', argument " "2"" of type '" "csl::SHARCSpectrum **""'"); 
  }
  arg2 = reinterpret_cast< csl::SHARCSpectrum ** >(argp2);
  if (arg1) (arg1)->_spectra = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument__spectra_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::SHARCSpectrum **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument__spectra_get" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  result = (csl::SHARCSpectrum **) ((arg1)->_spectra);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_csl__SHARCSpectrum, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SHARCInstrument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::SHARCInstrument *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_SHARCInstrument", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SHARCInstrument" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SHARCInstrument" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (csl::SHARCInstrument *)new csl::SHARCInstrument(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCInstrument, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SHARCInstrument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SHARCInstrument" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument_spectrum_names(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument_spectrum_names" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  result = (char **)(arg1)->spectrum_names();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument_spectrum_keys(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument_spectrum_keys" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  result = (unsigned int *)(arg1)->spectrum_keys();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument_spectrum_frequencies(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument_spectrum_frequencies" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  result = (float *)(arg1)->spectrum_frequencies();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument_spectrum_named(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::SHARCSpectrum *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCInstrument_spectrum_named", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument_spectrum_named" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SHARCInstrument_spectrum_named" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (csl::SHARCSpectrum *)(arg1)->spectrum_named(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument_spectrum_with_key(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::SHARCSpectrum *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCInstrument_spectrum_with_key", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument_spectrum_with_key" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SHARCInstrument_spectrum_with_key" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::SHARCSpectrum *)(arg1)->spectrum_with_key(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument_spectrum_with_frequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::SHARCSpectrum *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCInstrument_spectrum_with_frequency", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument_spectrum_with_frequency" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SHARCInstrument_spectrum_with_frequency" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::SHARCSpectrum *)(arg1)->spectrum_with_frequency(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument_count_spectra(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument_count_spectra" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  result = (unsigned int)(arg1)->count_spectra();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument_count_partials(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument_count_partials" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  result = (unsigned int)(arg1)->count_partials();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCInstrument_dump_example(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCInstrument *arg1 = (csl::SHARCInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCInstrument_dump_example" "', argument " "1"" of type '" "csl::SHARCInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCInstrument * >(argp1);
  (arg1)->dump_example();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SHARCInstrument_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__SHARCInstrument, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SHARCInstrument_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_SHARCLibrary__num_instruments_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *arg1 = (csl::SHARCLibrary *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCLibrary__num_instruments_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCLibrary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary__num_instruments_set" "', argument " "1"" of type '" "csl::SHARCLibrary *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCLibrary * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SHARCLibrary__num_instruments_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->_num_instruments = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary__num_instruments_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *arg1 = (csl::SHARCLibrary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCLibrary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary__num_instruments_get" "', argument " "1"" of type '" "csl::SHARCLibrary *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCLibrary * >(argp1);
  result = (unsigned int) ((arg1)->_num_instruments);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary__instruments_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *arg1 = (csl::SHARCLibrary *) 0 ;
  csl::SHARCInstrument **arg2 = (csl::SHARCInstrument **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCLibrary__instruments_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCLibrary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary__instruments_set" "', argument " "1"" of type '" "csl::SHARCLibrary *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCLibrary * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_csl__SHARCInstrument, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SHARCLibrary__instruments_set" "', argument " "2"" of type '" "csl::SHARCInstrument **""'"); 
  }
  arg2 = reinterpret_cast< csl::SHARCInstrument ** >(argp2);
  if (arg1) (arg1)->_instruments = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary__instruments_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *arg1 = (csl::SHARCLibrary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::SHARCInstrument **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCLibrary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary__instruments_get" "', argument " "1"" of type '" "csl::SHARCLibrary *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCLibrary * >(argp1);
  result = (csl::SHARCInstrument **) ((arg1)->_instruments);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_csl__SHARCInstrument, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SHARCLibrary__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::SHARCLibrary *)new csl::SHARCLibrary();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCLibrary, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SHARCLibrary__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  csl::SHARCLibrary *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SHARCLibrary" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (csl::SHARCLibrary *)new csl::SHARCLibrary(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCLibrary, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SHARCLibrary(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_SHARCLibrary", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_SHARCLibrary__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_SHARCLibrary__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_SHARCLibrary'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SHARCLibrary::SHARCLibrary()\n"
    "    csl::SHARCLibrary::SHARCLibrary(char *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SHARCLibrary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *arg1 = (csl::SHARCLibrary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCLibrary, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SHARCLibrary" "', argument " "1"" of type '" "csl::SHARCLibrary *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCLibrary * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_instrument_names(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *arg1 = (csl::SHARCLibrary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  char **result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCLibrary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary_instrument_names" "', argument " "1"" of type '" "csl::SHARCLibrary *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCLibrary * >(argp1);
  result = (char **)(arg1)->instrument_names();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_instrument_named(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *arg1 = (csl::SHARCLibrary *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::SHARCInstrument *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCLibrary_instrument_named", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCLibrary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary_instrument_named" "', argument " "1"" of type '" "csl::SHARCLibrary *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCLibrary * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SHARCLibrary_instrument_named" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (csl::SHARCInstrument *)(arg1)->instrument_named((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_spectrum_named(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *arg1 = (csl::SHARCLibrary *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject *swig_obj[3] ;
  csl::SHARCSpectrum *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCLibrary_spectrum_named", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCLibrary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary_spectrum_named" "', argument " "1"" of type '" "csl::SHARCLibrary *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCLibrary * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SHARCLibrary_spectrum_named" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(swig_obj[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SHARCLibrary_spectrum_named" "', argument " "3"" of type '" "char *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (csl::SHARCSpectrum *)(arg1)->spectrum_named((char const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *arg1 = (csl::SHARCLibrary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCLibrary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary_dump" "', argument " "1"" of type '" "csl::SHARCLibrary *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCLibrary * >(argp1);
  (arg1)->dump();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_dump_stats(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *arg1 = (csl::SHARCLibrary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCLibrary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary_dump_stats" "', argument " "1"" of type '" "csl::SHARCLibrary *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCLibrary * >(argp1);
  (arg1)->dump_stats();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_dump_example(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *arg1 = (csl::SHARCLibrary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCLibrary, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary_dump_example" "', argument " "1"" of type '" "csl::SHARCLibrary *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCLibrary * >(argp1);
  (arg1)->dump_example();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN int Swig_var_SHARCLibrary_sSHARCLib_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_csl__SHARCLibrary,  0 );  
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""csl::SHARCLibrary::sSHARCLib""' of type '""csl::SHARCLibrary *""'");
    }
    csl::SHARCLibrary::sSHARCLib = reinterpret_cast< csl::SHARCLibrary * >(argp);
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_SHARCLibrary_sSHARCLib_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(csl::SHARCLibrary::sSHARCLib), SWIGTYPE_p_csl__SHARCLibrary,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_sSHARCLib_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_SHARCLibrary_sSHARCLib_get();
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_sSHARCLib_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_SHARCLibrary_sSHARCLib_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_loadDefault(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCLibrary_loadDefault", 0, 0, 0)) SWIG_fail;
  csl::SHARCLibrary::loadDefault();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_library(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCLibrary *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "SHARCLibrary_library", 0, 0, 0)) SWIG_fail;
  result = (csl::SHARCLibrary *)csl::SHARCLibrary::library();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCLibrary, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_instrument__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  csl::SHARCInstrument *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary_instrument" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (csl::SHARCInstrument *)csl::SHARCLibrary::instrument(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_instrument__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::SHARCInstrument *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SHARCLibrary_instrument" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::SHARCInstrument *)csl::SHARCLibrary::instrument(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCInstrument, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_instrument(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SHARCLibrary_instrument", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    return _wrap_SHARCLibrary_instrument__SWIG_1(self, argc, argv);
  }
check_1:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_SHARCLibrary_instrument__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SHARCLibrary_instrument'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SHARCLibrary::instrument(char *)\n"
    "    csl::SHARCLibrary::instrument(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_spectrum__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  csl::SHARCSpectrum *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary_spectrum" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SHARCLibrary_spectrum" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (csl::SHARCSpectrum *)csl::SHARCLibrary::spectrum((char const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_spectrum__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  unsigned int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::SHARCSpectrum *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SHARCLibrary_spectrum" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SHARCLibrary_spectrum" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::SHARCSpectrum *)csl::SHARCLibrary::spectrum((char const *)arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_spectrum__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::SHARCSpectrum *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "SHARCLibrary_spectrum" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SHARCLibrary_spectrum" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::SHARCSpectrum *)csl::SHARCLibrary::spectrum(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SHARCLibrary_spectrum(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SHARCLibrary_spectrum", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    return _wrap_SHARCLibrary_spectrum__SWIG_2(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_SHARCLibrary_spectrum__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_SHARCLibrary_spectrum__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SHARCLibrary_spectrum'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SHARCLibrary::spectrum(char const *,char *)\n"
    "    csl::SHARCLibrary::spectrum(char const *,unsigned int)\n"
    "    csl::SHARCLibrary::spectrum(unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *SHARCLibrary_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__SHARCLibrary, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SHARCLibrary_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_BinaryOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BinaryOp *arg1 = (csl::BinaryOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BinaryOp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BinaryOp" "', argument " "1"" of type '" "csl::BinaryOp *""'"); 
  }
  arg1 = reinterpret_cast< csl::BinaryOp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryOp_setOperand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::BinaryOp *arg1 = (csl::BinaryOp *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "BinaryOp_setOperand", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__BinaryOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryOp_setOperand" "', argument " "1"" of type '" "csl::BinaryOp *""'"); 
  }
  arg1 = reinterpret_cast< csl::BinaryOp * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BinaryOp_setOperand" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setOperand(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BinaryOp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__BinaryOp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_AddOp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::AddOp *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AddOp" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AddOp" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AddOp" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AddOp" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::AddOp *)new csl::AddOp(*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AddOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AddOp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::AddOp *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AddOp" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AddOp" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AddOp" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::AddOp *)new csl::AddOp(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AddOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AddOp__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  csl::UnitGenerator *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::AddOp *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AddOp" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AddOp" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AddOp" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::AddOp *)new csl::AddOp(arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AddOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AddOp(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_AddOp", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_new_AddOp__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_new_AddOp__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_AddOp__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_AddOp'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::AddOp::AddOp(csl::UnitGenerator &,csl::UnitGenerator &)\n"
    "    csl::AddOp::AddOp(csl::UnitGenerator &,float)\n"
    "    csl::AddOp::AddOp(float,csl::UnitGenerator &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_AddOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AddOp *arg1 = (csl::AddOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AddOp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AddOp" "', argument " "1"" of type '" "csl::AddOp *""'"); 
  }
  arg1 = reinterpret_cast< csl::AddOp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AddOp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__AddOp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *AddOp_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MulOp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::MulOp *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MulOp" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MulOp" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MulOp" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MulOp" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::MulOp *)new csl::MulOp(*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__MulOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MulOp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::MulOp *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MulOp" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MulOp" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_MulOp" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::MulOp *)new csl::MulOp(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__MulOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MulOp__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  csl::UnitGenerator *arg2 = 0 ;
  float val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::MulOp *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MulOp" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MulOp" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MulOp" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::MulOp *)new csl::MulOp(arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__MulOp, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MulOp(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MulOp", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_new_MulOp__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_new_MulOp__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_MulOp__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MulOp'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::MulOp::MulOp(csl::UnitGenerator &,csl::UnitGenerator &)\n"
    "    csl::MulOp::MulOp(csl::UnitGenerator &,float)\n"
    "    csl::MulOp::MulOp(float,csl::UnitGenerator &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MulOp_setScale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MulOp *arg1 = (csl::MulOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MulOp, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MulOp_setScale" "', argument " "1"" of type '" "csl::MulOp *""'"); 
  }
  arg1 = reinterpret_cast< csl::MulOp * >(argp1);
  (arg1)->setScale();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MulOp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MulOp *arg1 = (csl::MulOp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MulOp, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MulOp" "', argument " "1"" of type '" "csl::MulOp *""'"); 
  }
  arg1 = reinterpret_cast< csl::MulOp * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MulOp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__MulOp, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MulOp_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_InOut__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  csl::InOutFlags arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csl::InOut *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_InOut", 4, 4, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_InOut" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_InOut" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_InOut" "', argument " "4"" of type '" "csl::InOutFlags""'");
  } 
  arg4 = static_cast< csl::InOutFlags >(val4);
  result = (csl::InOut *)new csl::InOut(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__InOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InOut__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csl::InOut *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_InOut", 3, 3, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_InOut" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_InOut" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (csl::InOut *)new csl::InOut(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__InOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InOut__SWIG_2__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  csl::IO *arg1 = (csl::IO *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  csl::InOutFlags arg4 ;
  void *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csl::InOut *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_InOut", 4, 4, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_csl__IO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_InOut" "', argument " "1"" of type '" "csl::IO *""'"); 
  }
  arg1 = reinterpret_cast< csl::IO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_InOut" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_InOut" "', argument " "4"" of type '" "csl::InOutFlags""'");
  } 
  arg4 = static_cast< csl::InOutFlags >(val4);
  result = (csl::InOut *)new csl::InOut(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__InOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InOut__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,4);
  varargs = PyTuple_GetSlice(args,4,PyTuple_Size(args));
  resultobj = _wrap_new_InOut__SWIG_2__varargs__(NULL,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_new_InOut__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  csl::InOutFlags arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csl::InOut *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_InOut", 4, 4, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_InOut" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InOut" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_InOut" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_InOut" "', argument " "4"" of type '" "csl::InOutFlags""'");
  } 
  arg4 = static_cast< csl::InOutFlags >(val4);
  result = (csl::InOut *)new csl::InOut(*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__InOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InOut__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  csl::InOut *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_InOut", 3, 3, &obj0, &obj1, &obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_InOut" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InOut" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_InOut" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (csl::InOut *)new csl::InOut(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__InOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InOut__SWIG_5__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  csl::InOutFlags arg4 ;
  void *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  csl::InOut *result = 0 ;
  
  if (!PyArg_UnpackTuple(args, "new_InOut", 4, 4, &obj0, &obj1, &obj2, &obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_InOut" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_InOut" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_InOut" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_InOut" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_InOut" "', argument " "4"" of type '" "csl::InOutFlags""'");
  } 
  arg4 = static_cast< csl::InOutFlags >(val4);
  result = (csl::InOut *)new csl::InOut(*arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__InOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_InOut__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,4);
  varargs = PyTuple_GetSlice(args,4,PyTuple_Size(args));
  resultobj = _wrap_new_InOut__SWIG_5__varargs__(NULL,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_new_InOut(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_InOut", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__IO, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    PyObject *retobj = _wrap_new_InOut__SWIG_1(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_1:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_new_InOut__SWIG_4(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__IO, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    PyObject *retobj = _wrap_new_InOut__SWIG_2(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_3:
  
  if (argc == 4) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    PyObject *retobj = _wrap_new_InOut__SWIG_3(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_4:
  
  if (argc == 4) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__IO, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_5;
    PyObject *retobj = _wrap_new_InOut__SWIG_0(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_5:
  
  if (argc == 4) {
    PyObject *retobj = _wrap_new_InOut__SWIG_5(self, args);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_InOut'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::InOut::InOut(csl::IO *,unsigned int,unsigned int,csl::InOutFlags)\n"
    "    csl::InOut::InOut(csl::IO *,unsigned int,unsigned int)\n"
    "    csl::InOut::InOut(csl::IO *,unsigned int,unsigned int,csl::InOutFlags,...)\n"
    "    csl::InOut::InOut(csl::UnitGenerator &,unsigned int,unsigned int,csl::InOutFlags)\n"
    "    csl::InOut::InOut(csl::UnitGenerator &,unsigned int,unsigned int)\n"
    "    csl::InOut::InOut(csl::UnitGenerator &,unsigned int,unsigned int,csl::InOutFlags,...)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_InOut(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::InOut *arg1 = (csl::InOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__InOut, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_InOut" "', argument " "1"" of type '" "csl::InOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::InOut * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InOut_setInChan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::InOut *arg1 = (csl::InOut *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "InOut_setInChan", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__InOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InOut_setInChan" "', argument " "1"" of type '" "csl::InOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::InOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InOut_setInChan" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setInChan(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InOut_setOutChan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::InOut *arg1 = (csl::InOut *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "InOut_setOutChan", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__InOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InOut_setOutChan" "', argument " "1"" of type '" "csl::InOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::InOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InOut_setOutChan" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setOutChan(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InOut_getInChan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::InOut *arg1 = (csl::InOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__InOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InOut_getInChan" "', argument " "1"" of type '" "csl::InOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::InOut * >(argp1);
  result = (unsigned int)(arg1)->getInChan();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InOut_getOutChan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::InOut *arg1 = (csl::InOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__InOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InOut_getOutChan" "', argument " "1"" of type '" "csl::InOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::InOut * >(argp1);
  result = (unsigned int)(arg1)->getOutChan();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InOut_setChanMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::InOut *arg1 = (csl::InOut *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "InOut_setChanMap", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__InOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InOut_setChanMap" "', argument " "1"" of type '" "csl::InOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::InOut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "InOut_setChanMap" "', argument " "2"" of type '" "unsigned int *""'"); 
  }
  arg2 = reinterpret_cast< unsigned int * >(argp2);
  (arg1)->setChanMap(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InOut_setChanGains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::InOut *arg1 = (csl::InOut *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "InOut_setChanGains", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__InOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InOut_setChanGains" "', argument " "1"" of type '" "csl::InOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::InOut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "InOut_setChanGains" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  (arg1)->setChanGains(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InOut_setGain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::InOut *arg1 = (csl::InOut *) 0 ;
  unsigned int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "InOut_setGain", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__InOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InOut_setGain" "', argument " "1"" of type '" "csl::InOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::InOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "InOut_setGain" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "InOut_setGain" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->setGain(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *InOut_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__InOut, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *InOut_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FrequencyAmount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FrequencyAmount *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_FrequencyAmount", 0, 0, 0)) SWIG_fail;
  result = (csl::FrequencyAmount *)new csl::FrequencyAmount();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FrequencyAmount, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FrequencyAmount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FrequencyAmount *arg1 = (csl::FrequencyAmount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FrequencyAmount, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FrequencyAmount" "', argument " "1"" of type '" "csl::FrequencyAmount *""'"); 
  }
  arg1 = reinterpret_cast< csl::FrequencyAmount * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrequencyAmount_setFrequency__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FrequencyAmount *arg1 = (csl::FrequencyAmount *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FrequencyAmount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrequencyAmount_setFrequency" "', argument " "1"" of type '" "csl::FrequencyAmount *""'"); 
  }
  arg1 = reinterpret_cast< csl::FrequencyAmount * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrequencyAmount_setFrequency" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrequencyAmount_setFrequency" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->setFrequency(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrequencyAmount_setFrequency__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FrequencyAmount *arg1 = (csl::FrequencyAmount *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FrequencyAmount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrequencyAmount_setFrequency" "', argument " "1"" of type '" "csl::FrequencyAmount *""'"); 
  }
  arg1 = reinterpret_cast< csl::FrequencyAmount * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FrequencyAmount_setFrequency" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setFrequency(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrequencyAmount_setFrequency(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FrequencyAmount_setFrequency", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_FrequencyAmount_setFrequency__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_FrequencyAmount_setFrequency__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FrequencyAmount_setFrequency'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FrequencyAmount::setFrequency(csl::UnitGenerator &)\n"
    "    csl::FrequencyAmount::setFrequency(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FrequencyAmount_getFrequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FrequencyAmount *arg1 = (csl::FrequencyAmount *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FrequencyAmount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrequencyAmount_getFrequency" "', argument " "1"" of type '" "csl::FrequencyAmount *""'"); 
  }
  arg1 = reinterpret_cast< csl::FrequencyAmount * >(argp1);
  result = (float)(arg1)->getFrequency();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrequencyAmount_setAmount__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FrequencyAmount *arg1 = (csl::FrequencyAmount *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FrequencyAmount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrequencyAmount_setAmount" "', argument " "1"" of type '" "csl::FrequencyAmount *""'"); 
  }
  arg1 = reinterpret_cast< csl::FrequencyAmount * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FrequencyAmount_setAmount" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FrequencyAmount_setAmount" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->setAmount(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrequencyAmount_setAmount__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FrequencyAmount *arg1 = (csl::FrequencyAmount *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FrequencyAmount, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FrequencyAmount_setAmount" "', argument " "1"" of type '" "csl::FrequencyAmount *""'"); 
  }
  arg1 = reinterpret_cast< csl::FrequencyAmount * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FrequencyAmount_setAmount" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setAmount(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FrequencyAmount_setAmount(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FrequencyAmount_setAmount", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_FrequencyAmount_setAmount__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_FrequencyAmount_setAmount__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FrequencyAmount_setAmount'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FrequencyAmount::setAmount(csl::UnitGenerator &)\n"
    "    csl::FrequencyAmount::setAmount(float)\n");
  return 0;
}


SWIGINTERN PyObject *FrequencyAmount_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__FrequencyAmount, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FrequencyAmount_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Filter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Filter *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Filter *)new csl::Filter();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Filter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Filter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::Filter *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Filter" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Filter" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::Filter *)new csl::Filter(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Filter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Filter__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::Filter *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Filter" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::Filter *)new csl::Filter(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Filter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Filter__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  csl::Filter *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Filter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Filter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Filter" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Filter" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (csl::Filter *)new csl::Filter(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Filter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Filter__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::Filter *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Filter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Filter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Filter" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::Filter *)new csl::Filter(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Filter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Filter__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::Filter *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Filter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Filter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::Filter *)new csl::Filter(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Filter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Filter__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::SampleBuffer arg2 = (csl::SampleBuffer) 0 ;
  csl::SampleBuffer arg3 = (csl::SampleBuffer) 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  csl::Filter *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Filter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Filter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Filter" "', argument " "2"" of type '" "csl::SampleBuffer""'"); 
  }
  arg2 = reinterpret_cast< csl::SampleBuffer >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Filter" "', argument " "3"" of type '" "csl::SampleBuffer""'"); 
  }
  arg3 = reinterpret_cast< csl::SampleBuffer >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Filter" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Filter" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (csl::Filter *)new csl::Filter(*arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Filter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Filter(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Filter", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Filter__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_Filter__SWIG_5(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Filter__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    PyObject *retobj = _wrap_new_Filter__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_4:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Filter__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Filter__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_new_Filter__SWIG_6(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Filter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Filter::Filter()\n"
    "    csl::Filter::Filter(unsigned int,unsigned int)\n"
    "    csl::Filter::Filter(unsigned int)\n"
    "    csl::Filter::Filter(csl::UnitGenerator &,unsigned int,unsigned int)\n"
    "    csl::Filter::Filter(csl::UnitGenerator &,unsigned int)\n"
    "    csl::Filter::Filter(csl::UnitGenerator &)\n"
    "    csl::Filter::Filter(csl::UnitGenerator &,csl::SampleBuffer,csl::SampleBuffer,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Filter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Filter *arg1 = (csl::Filter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Filter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Filter" "', argument " "1"" of type '" "csl::Filter *""'"); 
  }
  arg1 = reinterpret_cast< csl::Filter * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Filter *arg1 = (csl::Filter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_clear" "', argument " "1"" of type '" "csl::Filter *""'"); 
  }
  arg1 = reinterpret_cast< csl::Filter * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_setupCoeffs__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Filter *arg1 = (csl::Filter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_setupCoeffs" "', argument " "1"" of type '" "csl::Filter *""'"); 
  }
  arg1 = reinterpret_cast< csl::Filter * >(argp1);
  (arg1)->setupCoeffs();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_setupCoeffs__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Filter *arg1 = (csl::Filter *) 0 ;
  csl::SampleBuffer arg2 = (csl::SampleBuffer) 0 ;
  csl::SampleBuffer arg3 = (csl::SampleBuffer) 0 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Filter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Filter_setupCoeffs" "', argument " "1"" of type '" "csl::Filter *""'"); 
  }
  arg1 = reinterpret_cast< csl::Filter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Filter_setupCoeffs" "', argument " "2"" of type '" "csl::SampleBuffer""'"); 
  }
  arg2 = reinterpret_cast< csl::SampleBuffer >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Filter_setupCoeffs" "', argument " "3"" of type '" "csl::SampleBuffer""'"); 
  }
  arg3 = reinterpret_cast< csl::SampleBuffer >(argp3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Filter_setupCoeffs" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Filter_setupCoeffs" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  (arg1)->setupCoeffs(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Filter_setupCoeffs(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Filter_setupCoeffs", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_Filter_setupCoeffs__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_Filter_setupCoeffs__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Filter_setupCoeffs'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Filter::setupCoeffs()\n"
    "    csl::Filter::setupCoeffs(csl::SampleBuffer,csl::SampleBuffer,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *Filter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Filter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Filter_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Butter__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Butter *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Butter *)new csl::Butter();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Butter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Butter__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FilterType arg1 ;
  float arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Butter *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Butter" "', argument " "1"" of type '" "csl::FilterType""'");
  } 
  arg1 = static_cast< csl::FilterType >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Butter" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Butter *)new csl::Butter(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Butter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Butter__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FilterType arg1 ;
  float arg2 ;
  float arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Butter *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Butter" "', argument " "1"" of type '" "csl::FilterType""'");
  } 
  arg1 = static_cast< csl::FilterType >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Butter" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Butter" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Butter *)new csl::Butter(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Butter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Butter__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::FilterType arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Butter *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Butter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Butter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Butter" "', argument " "2"" of type '" "csl::FilterType""'");
  } 
  arg2 = static_cast< csl::FilterType >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Butter" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Butter *)new csl::Butter(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Butter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Butter__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::FilterType arg2 ;
  csl::UnitGenerator *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  csl::Butter *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Butter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Butter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Butter" "', argument " "2"" of type '" "csl::FilterType""'");
  } 
  arg2 = static_cast< csl::FilterType >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Butter" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Butter" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg3 = reinterpret_cast< csl::UnitGenerator * >(argp3);
  result = (csl::Butter *)new csl::Butter(*arg1,arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Butter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Butter__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::FilterType arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Butter *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Butter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Butter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Butter" "', argument " "2"" of type '" "csl::FilterType""'");
  } 
  arg2 = static_cast< csl::FilterType >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Butter" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Butter" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Butter *)new csl::Butter(*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Butter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Butter__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::FilterType arg2 ;
  csl::UnitGenerator *arg3 = 0 ;
  csl::UnitGenerator *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  csl::Butter *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Butter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Butter" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Butter" "', argument " "2"" of type '" "csl::FilterType""'");
  } 
  arg2 = static_cast< csl::FilterType >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Butter" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Butter" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg3 = reinterpret_cast< csl::UnitGenerator * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Butter" "', argument " "4"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Butter" "', argument " "4"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg4 = reinterpret_cast< csl::UnitGenerator * >(argp4);
  result = (csl::Butter *)new csl::Butter(*arg1,arg2,*arg3,*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Butter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Butter(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Butter", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Butter__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Butter__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_3;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    return _wrap_new_Butter__SWIG_4(self, argc, argv);
  }
check_3:
  
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    PyObject *retobj = _wrap_new_Butter__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_4:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Butter__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_6;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_6;
    return _wrap_new_Butter__SWIG_6(self, argc, argv);
  }
check_6:
  
  if (argc == 4) {
    PyObject *retobj = _wrap_new_Butter__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Butter'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Butter::Butter()\n"
    "    csl::Butter::Butter(csl::FilterType,float)\n"
    "    csl::Butter::Butter(csl::FilterType,float,float)\n"
    "    csl::Butter::Butter(csl::UnitGenerator &,csl::FilterType,float)\n"
    "    csl::Butter::Butter(csl::UnitGenerator &,csl::FilterType,csl::UnitGenerator &)\n"
    "    csl::Butter::Butter(csl::UnitGenerator &,csl::FilterType,float,float)\n"
    "    csl::Butter::Butter(csl::UnitGenerator &,csl::FilterType,csl::UnitGenerator &,csl::UnitGenerator &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Butter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Butter *arg1 = (csl::Butter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Butter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Butter" "', argument " "1"" of type '" "csl::Butter *""'"); 
  }
  arg1 = reinterpret_cast< csl::Butter * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Butter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Butter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Butter_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Biquad__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Biquad *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Biquad *)new csl::Biquad();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Biquad, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Biquad__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FilterType arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Biquad *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Biquad" "', argument " "1"" of type '" "csl::FilterType""'");
  } 
  arg1 = static_cast< csl::FilterType >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Biquad" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Biquad" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Biquad" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Biquad *)new csl::Biquad(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Biquad, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Biquad__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FilterType arg1 ;
  float arg2 ;
  float arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Biquad *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Biquad" "', argument " "1"" of type '" "csl::FilterType""'");
  } 
  arg1 = static_cast< csl::FilterType >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Biquad" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Biquad" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Biquad *)new csl::Biquad(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Biquad, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Biquad__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::FilterType arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  csl::Biquad *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Biquad" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Biquad" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Biquad" "', argument " "2"" of type '" "csl::FilterType""'");
  } 
  arg2 = static_cast< csl::FilterType >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Biquad" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Biquad" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Biquad" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  result = (csl::Biquad *)new csl::Biquad(*arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Biquad, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Biquad__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::FilterType arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  csl::Biquad *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Biquad" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Biquad" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Biquad" "', argument " "2"" of type '" "csl::FilterType""'");
  } 
  arg2 = static_cast< csl::FilterType >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Biquad" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Biquad" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (csl::Biquad *)new csl::Biquad(*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Biquad, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Biquad(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Biquad", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Biquad__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Biquad__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_3;
    PyObject *retobj = _wrap_new_Biquad__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_3:
  
  if (argc == 4) {
    PyObject *retobj = _wrap_new_Biquad__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_new_Biquad__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Biquad'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Biquad::Biquad()\n"
    "    csl::Biquad::Biquad(csl::FilterType,float,float,float)\n"
    "    csl::Biquad::Biquad(csl::FilterType,float,float)\n"
    "    csl::Biquad::Biquad(csl::UnitGenerator &,csl::FilterType,float,float,float)\n"
    "    csl::Biquad::Biquad(csl::UnitGenerator &,csl::FilterType,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Biquad_setQ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Biquad *arg1 = (csl::Biquad *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Biquad_setQ", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Biquad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Biquad_setQ" "', argument " "1"" of type '" "csl::Biquad *""'"); 
  }
  arg1 = reinterpret_cast< csl::Biquad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Biquad_setQ" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setQ(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Biquad_setFrq(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Biquad *arg1 = (csl::Biquad *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Biquad_setFrq", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Biquad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Biquad_setFrq" "', argument " "1"" of type '" "csl::Biquad *""'"); 
  }
  arg1 = reinterpret_cast< csl::Biquad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Biquad_setFrq" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setFrq(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Biquad_incrFrq(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Biquad *arg1 = (csl::Biquad *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Biquad_incrFrq", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Biquad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Biquad_incrFrq" "', argument " "1"" of type '" "csl::Biquad *""'"); 
  }
  arg1 = reinterpret_cast< csl::Biquad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Biquad_incrFrq" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->incrFrq(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Biquad_setBoost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Biquad *arg1 = (csl::Biquad *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Biquad_setBoost", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Biquad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Biquad_setBoost" "', argument " "1"" of type '" "csl::Biquad *""'"); 
  }
  arg1 = reinterpret_cast< csl::Biquad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Biquad_setBoost" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setBoost(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Biquad_incrBoost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Biquad *arg1 = (csl::Biquad *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Biquad_incrBoost", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Biquad, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Biquad_incrBoost" "', argument " "1"" of type '" "csl::Biquad *""'"); 
  }
  arg1 = reinterpret_cast< csl::Biquad * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Biquad_incrBoost" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->incrBoost(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Biquad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Biquad *arg1 = (csl::Biquad *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Biquad, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Biquad" "', argument " "1"" of type '" "csl::Biquad *""'"); 
  }
  arg1 = reinterpret_cast< csl::Biquad * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Biquad_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Biquad, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Biquad_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Formant__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Formant *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Formant" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Formant" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Formant" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Formant" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Formant *)new csl::Formant(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Formant, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Formant__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Formant *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Formant" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Formant" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Formant" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Formant" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Formant" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Formant *)new csl::Formant(*arg1,*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Formant, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Formant(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Formant", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    PyObject *retobj = _wrap_new_Formant__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_1:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Formant__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Formant'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Formant::Formant(csl::UnitGenerator &,float,float)\n"
    "    csl::Formant::Formant(csl::UnitGenerator &,csl::UnitGenerator &,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Formant(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Formant *arg1 = (csl::Formant *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Formant, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Formant" "', argument " "1"" of type '" "csl::Formant *""'"); 
  }
  arg1 = reinterpret_cast< csl::Formant * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Formant_setNormalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Formant *arg1 = (csl::Formant *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Formant_setNormalize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Formant, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Formant_setNormalize" "', argument " "1"" of type '" "csl::Formant *""'"); 
  }
  arg1 = reinterpret_cast< csl::Formant * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Formant_setNormalize" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setNormalize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Formant_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Formant, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Formant_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Notch__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Notch *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Notch" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Notch" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Notch" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Notch" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Notch *)new csl::Notch(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Notch, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Notch__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Notch *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Notch" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Notch" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Notch" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Notch" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Notch" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Notch *)new csl::Notch(*arg1,*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Notch, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Notch(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Notch", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    PyObject *retobj = _wrap_new_Notch__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_1:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Notch__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Notch'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Notch::Notch(csl::UnitGenerator &,float,float)\n"
    "    csl::Notch::Notch(csl::UnitGenerator &,csl::UnitGenerator &,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Notch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Notch *arg1 = (csl::Notch *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Notch, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Notch" "', argument " "1"" of type '" "csl::Notch *""'"); 
  }
  arg1 = reinterpret_cast< csl::Notch * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Notch_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Notch, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Notch_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Allpass__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Allpass *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Allpass" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Allpass" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Allpass" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Allpass *)new csl::Allpass(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Allpass, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Allpass__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::Allpass *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Allpass" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Allpass" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Allpass" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Allpass" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::Allpass *)new csl::Allpass(*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Allpass, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Allpass(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Allpass", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_new_Allpass__SWIG_1(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Allpass__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Allpass'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Allpass::Allpass(csl::UnitGenerator &,float)\n"
    "    csl::Allpass::Allpass(csl::UnitGenerator &,csl::UnitGenerator &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Allpass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Allpass *arg1 = (csl::Allpass *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Allpass, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Allpass" "', argument " "1"" of type '" "csl::Allpass *""'"); 
  }
  arg1 = reinterpret_cast< csl::Allpass * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Allpass_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Allpass, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Allpass_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Moog__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::Moog *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Moog" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Moog" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::Moog *)new csl::Moog(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Moog, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Moog__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::Moog *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Moog" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Moog" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Moog" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Moog" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::Moog *)new csl::Moog(*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Moog, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Moog__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  csl::UnitGenerator *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  csl::Moog *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Moog" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Moog" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Moog" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Moog" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Moog" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Moog" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg3 = reinterpret_cast< csl::UnitGenerator * >(argp3);
  result = (csl::Moog *)new csl::Moog(*arg1,*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Moog, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Moog__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Moog *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Moog" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Moog" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Moog" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Moog *)new csl::Moog(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Moog, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Moog__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Moog *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Moog" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Moog" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Moog" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Moog" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Moog *)new csl::Moog(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Moog, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Moog(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Moog", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Moog__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_Moog__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Moog__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    return _wrap_new_Moog__SWIG_2(self, argc, argv);
  }
check_4:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Moog__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Moog'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Moog::Moog(csl::UnitGenerator &)\n"
    "    csl::Moog::Moog(csl::UnitGenerator &,csl::UnitGenerator &)\n"
    "    csl::Moog::Moog(csl::UnitGenerator &,csl::UnitGenerator &,csl::UnitGenerator &)\n"
    "    csl::Moog::Moog(csl::UnitGenerator &,float)\n"
    "    csl::Moog::Moog(csl::UnitGenerator &,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Moog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Moog *arg1 = (csl::Moog *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Moog, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Moog" "', argument " "1"" of type '" "csl::Moog *""'"); 
  }
  arg1 = reinterpret_cast< csl::Moog * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Moog_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Moog, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Moog_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_DelayLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::DelayLine *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_DelayLine" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::DelayLine *)new csl::DelayLine(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__DelayLine, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayLine_delayTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::DelayLine *arg1 = (csl::DelayLine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__DelayLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayLine_delayTime" "', argument " "1"" of type '" "csl::DelayLine *""'"); 
  }
  arg1 = reinterpret_cast< csl::DelayLine * >(argp1);
  result = (float)(arg1)->delayTime();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayLine_delayLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::DelayLine *arg1 = (csl::DelayLine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__DelayLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayLine_delayLength" "', argument " "1"" of type '" "csl::DelayLine *""'"); 
  }
  arg1 = reinterpret_cast< csl::DelayLine * >(argp1);
  result = (unsigned int)(arg1)->delayLength();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayLine_setDelayTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::DelayLine *arg1 = (csl::DelayLine *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "DelayLine_setDelayTime", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__DelayLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayLine_setDelayTime" "', argument " "1"" of type '" "csl::DelayLine *""'"); 
  }
  arg1 = reinterpret_cast< csl::DelayLine * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DelayLine_setDelayTime" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (float)(arg1)->setDelayTime(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DelayLine_setDelayLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::DelayLine *arg1 = (csl::DelayLine *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "DelayLine_setDelayLength", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__DelayLine, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DelayLine_setDelayLength" "', argument " "1"" of type '" "csl::DelayLine *""'"); 
  }
  arg1 = reinterpret_cast< csl::DelayLine * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DelayLine_setDelayLength" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (unsigned int)(arg1)->setDelayLength(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DelayLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::DelayLine *arg1 = (csl::DelayLine *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__DelayLine, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DelayLine" "', argument " "1"" of type '" "csl::DelayLine *""'"); 
  }
  arg1 = reinterpret_cast< csl::DelayLine * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DelayLine_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__DelayLine, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *DelayLine_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Mixer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Mixer *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Mixer *)new csl::Mixer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Mixer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Mixer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::Mixer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Mixer" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::Mixer *)new csl::Mixer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Mixer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Mixer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::Mixer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Mixer" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Mixer" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::Mixer *)new csl::Mixer(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Mixer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Mixer__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  csl::UnitGenerator *arg2 = 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::Mixer *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Mixer" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Mixer" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Mixer" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::Mixer *)new csl::Mixer(arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Mixer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Mixer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Mixer", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Mixer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_Mixer__SWIG_2(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Mixer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Mixer__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Mixer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Mixer::Mixer()\n"
    "    csl::Mixer::Mixer(unsigned int)\n"
    "    csl::Mixer::Mixer(csl::UnitGenerator &)\n"
    "    csl::Mixer::Mixer(unsigned int,csl::UnitGenerator &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Mixer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Mixer" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mixer_getInputs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::UGenVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mixer_getInputs" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  result = (csl::UGenVector *)(arg1)->getInputs();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_csl__UnitGenerator_p_std__allocatorT_csl__UnitGenerator_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mixer_getNumInputs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mixer_getNumInputs" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  result = (unsigned int)(arg1)->getNumInputs();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mixer_addInput__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mixer_addInput" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mixer_addInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Mixer_addInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->addInput(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mixer_addInput__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  csl::UnitGenerator *arg2 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mixer_addInput" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mixer_addInput" "', argument " "2"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->addInput(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mixer_addInput__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mixer_addInput" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mixer_addInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Mixer_addInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mixer_addInput" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->addInput(*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mixer_addInput__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  csl::UnitGenerator *arg2 = (csl::UnitGenerator *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mixer_addInput" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mixer_addInput" "', argument " "2"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mixer_addInput" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->addInput(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mixer_addInput(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Mixer_addInput", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_Mixer_addInput__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_Mixer_addInput__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    PyObject *retobj = _wrap_Mixer_addInput__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_3:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_Mixer_addInput__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Mixer_addInput'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Mixer::addInput(csl::UnitGenerator &)\n"
    "    csl::Mixer::addInput(csl::UnitGenerator *)\n"
    "    csl::Mixer::addInput(csl::UnitGenerator &,float)\n"
    "    csl::Mixer::addInput(csl::UnitGenerator *,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Mixer_removeInput__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mixer_removeInput" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mixer_removeInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Mixer_removeInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->removeInput(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mixer_removeInput__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  csl::UnitGenerator *arg2 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mixer_removeInput" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mixer_removeInput" "', argument " "2"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->removeInput(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mixer_removeInput(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Mixer_removeInput", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_Mixer_removeInput__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_Mixer_removeInput__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Mixer_removeInput'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Mixer::removeInput(csl::UnitGenerator &)\n"
    "    csl::Mixer::removeInput(csl::UnitGenerator *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Mixer_deleteInputs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mixer_deleteInputs" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  (arg1)->deleteInputs();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mixer_scaleInput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Mixer_scaleInput", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mixer_scaleInput" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Mixer_scaleInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Mixer_scaleInput" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Mixer_scaleInput" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->scaleInput(*arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Mixer_activeSources(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Mixer *arg1 = (csl::Mixer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Mixer_activeSources" "', argument " "1"" of type '" "csl::Mixer *""'"); 
  }
  arg1 = reinterpret_cast< csl::Mixer * >(argp1);
  result = (unsigned int)(arg1)->activeSources();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Mixer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Mixer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Mixer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Panner__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Panner *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Panner *)new csl::Panner();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Panner__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::Panner *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::Panner *)new csl::Panner(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Panner__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::Panner *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Panner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Panner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  result = (csl::Panner *)new csl::Panner(*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Panner__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::Panner *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Panner" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::Panner *)new csl::Panner(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Panner__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  csl::UnitGenerator *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  csl::Panner *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Panner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Panner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Panner" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Panner" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg3 = reinterpret_cast< csl::UnitGenerator * >(argp3);
  result = (csl::Panner *)new csl::Panner(*arg1,*arg2,*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Panner__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Panner *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Panner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Panner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Panner" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Panner *)new csl::Panner(*arg1,*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Panner__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::Panner *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Panner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Panner" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Panner" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::Panner *)new csl::Panner(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Panner(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Panner", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Panner__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Panner__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    return _wrap_new_Panner__SWIG_2(self, argc, argv);
  }
check_3:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Panner__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_5;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_5;
    return _wrap_new_Panner__SWIG_4(self, argc, argv);
  }
check_5:
  
  if (argc == 3) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_6;
    PyObject *retobj = _wrap_new_Panner__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_6:
  
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Panner__SWIG_6(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Panner'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Panner::Panner()\n"
    "    csl::Panner::Panner(csl::UnitGenerator &)\n"
    "    csl::Panner::Panner(csl::UnitGenerator &,csl::UnitGenerator &)\n"
    "    csl::Panner::Panner(csl::UnitGenerator &,float)\n"
    "    csl::Panner::Panner(csl::UnitGenerator &,csl::UnitGenerator &,csl::UnitGenerator &)\n"
    "    csl::Panner::Panner(csl::UnitGenerator &,csl::UnitGenerator &,float)\n"
    "    csl::Panner::Panner(csl::UnitGenerator &,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Panner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Panner *arg1 = (csl::Panner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Panner, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Panner" "', argument " "1"" of type '" "csl::Panner *""'"); 
  }
  arg1 = reinterpret_cast< csl::Panner * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Panner_setPosition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Panner *arg1 = (csl::Panner *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Panner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Panner_setPosition" "', argument " "1"" of type '" "csl::Panner *""'"); 
  }
  arg1 = reinterpret_cast< csl::Panner * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Panner_setPosition" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Panner_setPosition" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->setPosition(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Panner_setPosition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Panner *arg1 = (csl::Panner *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Panner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Panner_setPosition" "', argument " "1"" of type '" "csl::Panner *""'"); 
  }
  arg1 = reinterpret_cast< csl::Panner * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Panner_setPosition" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setPosition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Panner_setPosition(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Panner_setPosition", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_Panner_setPosition__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_Panner_setPosition__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Panner_setPosition'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Panner::setPosition(csl::UnitGenerator &)\n"
    "    csl::Panner::setPosition(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Panner_position(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Panner *arg1 = (csl::Panner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Panner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Panner_position" "', argument " "1"" of type '" "csl::Panner *""'"); 
  }
  arg1 = reinterpret_cast< csl::Panner * >(argp1);
  result = (float)(arg1)->position();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Panner_numChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Panner *arg1 = (csl::Panner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Panner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Panner_numChannels" "', argument " "1"" of type '" "csl::Panner const *""'"); 
  }
  arg1 = reinterpret_cast< csl::Panner * >(argp1);
  result = (unsigned int)((csl::Panner const *)arg1)->numChannels();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Panner_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Panner, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Panner_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_NtoMPanner__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::NtoMPanner *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::NtoMPanner *)new csl::NtoMPanner();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__NtoMPanner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NtoMPanner__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  float arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  csl::NtoMPanner *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NtoMPanner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_NtoMPanner" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_NtoMPanner" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_NtoMPanner" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (csl::NtoMPanner *)new csl::NtoMPanner(*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__NtoMPanner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NtoMPanner__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  csl::UnitGenerator *arg3 = 0 ;
  csl::UnitGenerator *arg4 = 0 ;
  unsigned int arg5 ;
  unsigned int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  csl::NtoMPanner *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NtoMPanner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NtoMPanner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NtoMPanner" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg3 = reinterpret_cast< csl::UnitGenerator * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NtoMPanner" "', argument " "4"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "4"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg4 = reinterpret_cast< csl::UnitGenerator * >(argp4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_NtoMPanner" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_NtoMPanner" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  result = (csl::NtoMPanner *)new csl::NtoMPanner(*arg1,*arg2,*arg3,*arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__NtoMPanner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NtoMPanner__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  csl::UnitGenerator *arg3 = 0 ;
  csl::UnitGenerator *arg4 = 0 ;
  unsigned int arg5 ;
  unsigned int arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  csl::NtoMPanner *result = 0 ;
  
  if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NtoMPanner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NtoMPanner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NtoMPanner" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg3 = reinterpret_cast< csl::UnitGenerator * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_NtoMPanner" "', argument " "4"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "4"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg4 = reinterpret_cast< csl::UnitGenerator * >(argp4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_NtoMPanner" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_NtoMPanner" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_NtoMPanner" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  result = (csl::NtoMPanner *)new csl::NtoMPanner(*arg1,*arg2,*arg3,*arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__NtoMPanner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NtoMPanner__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  csl::UnitGenerator *arg3 = 0 ;
  float arg4 ;
  unsigned int arg5 ;
  unsigned int arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  csl::NtoMPanner *result = 0 ;
  
  if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_NtoMPanner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_NtoMPanner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_NtoMPanner" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_NtoMPanner" "', argument " "3"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg3 = reinterpret_cast< csl::UnitGenerator * >(argp3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_NtoMPanner" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_NtoMPanner" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_NtoMPanner" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "new_NtoMPanner" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  result = (csl::NtoMPanner *)new csl::NtoMPanner(*arg1,*arg2,*arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__NtoMPanner, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_NtoMPanner(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[8] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_NtoMPanner", 0, 7, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_NtoMPanner__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_NtoMPanner__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 6) {
    PyObject *retobj = _wrap_new_NtoMPanner__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 7) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    PyObject *retobj = _wrap_new_NtoMPanner__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
check_4:
  
  if (argc == 7) {
    PyObject *retobj = _wrap_new_NtoMPanner__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_NtoMPanner'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::NtoMPanner::NtoMPanner()\n"
    "    csl::NtoMPanner::NtoMPanner(csl::UnitGenerator &,float,unsigned int,unsigned int)\n"
    "    csl::NtoMPanner::NtoMPanner(csl::UnitGenerator &,csl::UnitGenerator &,csl::UnitGenerator &,csl::UnitGenerator &,unsigned int,unsigned int)\n"
    "    csl::NtoMPanner::NtoMPanner(csl::UnitGenerator &,csl::UnitGenerator &,csl::UnitGenerator &,csl::UnitGenerator &,unsigned int,unsigned int,float)\n"
    "    csl::NtoMPanner::NtoMPanner(csl::UnitGenerator &,csl::UnitGenerator &,csl::UnitGenerator &,float,unsigned int,unsigned int,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_NtoMPanner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::NtoMPanner *arg1 = (csl::NtoMPanner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__NtoMPanner, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NtoMPanner" "', argument " "1"" of type '" "csl::NtoMPanner *""'"); 
  }
  arg1 = reinterpret_cast< csl::NtoMPanner * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NtoMPanner_init_stereo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::NtoMPanner *arg1 = (csl::NtoMPanner *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "NtoMPanner_init_stereo", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__NtoMPanner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NtoMPanner_init_stereo" "', argument " "1"" of type '" "csl::NtoMPanner *""'"); 
  }
  arg1 = reinterpret_cast< csl::NtoMPanner * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NtoMPanner_init_stereo" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->init_stereo(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NtoMPanner_init_quad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::NtoMPanner *arg1 = (csl::NtoMPanner *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "NtoMPanner_init_quad", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__NtoMPanner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NtoMPanner_init_quad" "', argument " "1"" of type '" "csl::NtoMPanner *""'"); 
  }
  arg1 = reinterpret_cast< csl::NtoMPanner * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NtoMPanner_init_quad" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->init_quad(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NtoMPanner_init_5point1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::NtoMPanner *arg1 = (csl::NtoMPanner *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "NtoMPanner_init_5point1", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__NtoMPanner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NtoMPanner_init_5point1" "', argument " "1"" of type '" "csl::NtoMPanner *""'"); 
  }
  arg1 = reinterpret_cast< csl::NtoMPanner * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NtoMPanner_init_5point1" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->init_5point1(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NtoMPanner_init_6ch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::NtoMPanner *arg1 = (csl::NtoMPanner *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "NtoMPanner_init_6ch", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__NtoMPanner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NtoMPanner_init_6ch" "', argument " "1"" of type '" "csl::NtoMPanner *""'"); 
  }
  arg1 = reinterpret_cast< csl::NtoMPanner * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NtoMPanner_init_6ch" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NtoMPanner_init_6ch" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->init_6ch(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NtoMPanner_setX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::NtoMPanner *arg1 = (csl::NtoMPanner *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "NtoMPanner_setX", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__NtoMPanner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NtoMPanner_setX" "', argument " "1"" of type '" "csl::NtoMPanner *""'"); 
  }
  arg1 = reinterpret_cast< csl::NtoMPanner * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NtoMPanner_setX" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setX(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NtoMPanner_setY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::NtoMPanner *arg1 = (csl::NtoMPanner *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "NtoMPanner_setY", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__NtoMPanner, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NtoMPanner_setY" "', argument " "1"" of type '" "csl::NtoMPanner *""'"); 
  }
  arg1 = reinterpret_cast< csl::NtoMPanner * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NtoMPanner_setY" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setY(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NtoMPanner_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__NtoMPanner, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *NtoMPanner_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_StereoWidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StereoWidth *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_StereoWidth", 0, 0, 0)) SWIG_fail;
  result = (csl::StereoWidth *)new csl::StereoWidth();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__StereoWidth, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StereoWidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StereoWidth *arg1 = (csl::StereoWidth *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StereoWidth, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StereoWidth" "', argument " "1"" of type '" "csl::StereoWidth *""'"); 
  }
  arg1 = reinterpret_cast< csl::StereoWidth * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StereoWidth_setWidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StereoWidth *arg1 = (csl::StereoWidth *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StereoWidth_setWidth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StereoWidth, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StereoWidth_setWidth" "', argument " "1"" of type '" "csl::StereoWidth *""'"); 
  }
  arg1 = reinterpret_cast< csl::StereoWidth * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StereoWidth_setWidth" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setWidth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StereoWidth_setPan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StereoWidth *arg1 = (csl::StereoWidth *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StereoWidth_setPan", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StereoWidth, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StereoWidth_setPan" "', argument " "1"" of type '" "csl::StereoWidth *""'"); 
  }
  arg1 = reinterpret_cast< csl::StereoWidth * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StereoWidth_setPan" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setPan(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StereoWidth_setGain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StereoWidth *arg1 = (csl::StereoWidth *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StereoWidth_setGain", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StereoWidth, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StereoWidth_setGain" "', argument " "1"" of type '" "csl::StereoWidth *""'"); 
  }
  arg1 = reinterpret_cast< csl::StereoWidth * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StereoWidth_setGain" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setGain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StereoWidth_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__StereoWidth, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *StereoWidth_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Convolver__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::Convolver *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Convolver" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::Convolver *)new csl::Convolver(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Convolver, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Convolver__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Convolver *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Convolver *)new csl::Convolver();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Convolver, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Convolver__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  unsigned int arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::Convolver *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Convolver" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Convolver" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::Convolver *)new csl::Convolver(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Convolver, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Convolver__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  csl::Convolver *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Convolver" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (csl::Convolver *)new csl::Convolver(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Convolver, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Convolver__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  csl::Convolver *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Convolver" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Convolver" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Convolver" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Convolver" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_Convolver" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (csl::Convolver *)new csl::Convolver(*arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Convolver, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Convolver__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  csl::Convolver *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Convolver" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Convolver" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Convolver" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Convolver" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (csl::Convolver *)new csl::Convolver(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Convolver, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Convolver__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  csl::Convolver *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Convolver" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Convolver" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Convolver" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (csl::Convolver *)new csl::Convolver(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Convolver, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Convolver(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Convolver", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Convolver__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_2;
    return _wrap_new_Convolver__SWIG_0(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Convolver__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    return _wrap_new_Convolver__SWIG_6(self, argc, argv);
  }
check_4:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_Convolver__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_Convolver__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_Convolver__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Convolver'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Convolver::Convolver(unsigned int)\n"
    "    csl::Convolver::Convolver()\n"
    "    csl::Convolver::Convolver(char *,unsigned int)\n"
    "    csl::Convolver::Convolver(char *)\n"
    "    csl::Convolver::Convolver(csl::UnitGenerator &,char *,unsigned int,unsigned int)\n"
    "    csl::Convolver::Convolver(csl::UnitGenerator &,char *,unsigned int)\n"
    "    csl::Convolver::Convolver(csl::UnitGenerator &,char *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Convolver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Convolver *arg1 = (csl::Convolver *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Convolver, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Convolver" "', argument " "1"" of type '" "csl::Convolver *""'"); 
  }
  arg1 = reinterpret_cast< csl::Convolver * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Convolver_setIRFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Convolver *arg1 = (csl::Convolver *) 0 ;
  char *arg2 = (char *) 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Convolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Convolver_setIRFile" "', argument " "1"" of type '" "csl::Convolver *""'"); 
  }
  arg1 = reinterpret_cast< csl::Convolver * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Convolver_setIRFile" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Convolver_setIRFile" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->setIRFile(arg2,arg3);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Convolver_setIRFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Convolver *arg1 = (csl::Convolver *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Convolver, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Convolver_setIRFile" "', argument " "1"" of type '" "csl::Convolver *""'"); 
  }
  arg1 = reinterpret_cast< csl::Convolver * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Convolver_setIRFile" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->setIRFile(arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Convolver_setIRFile(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Convolver_setIRFile", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_Convolver_setIRFile__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_Convolver_setIRFile__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Convolver_setIRFile'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Convolver::setIRFile(char *,unsigned int)\n"
    "    csl::Convolver::setIRFile(char *)\n");
  return 0;
}


SWIGINTERN PyObject *Convolver_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Convolver, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Convolver_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FilterSpecification__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  double *arg3 = (double *) 0 ;
  double *arg4 = (double *) 0 ;
  double *arg5 = (double *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  csl::FilterSpecification *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FilterSpecification" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FilterSpecification" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FilterSpecification" "', argument " "3"" of type '" "double *""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FilterSpecification" "', argument " "4"" of type '" "double *""'"); 
  }
  arg4 = reinterpret_cast< double * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_FilterSpecification" "', argument " "5"" of type '" "double *""'"); 
  }
  arg5 = reinterpret_cast< double * >(argp5);
  result = (csl::FilterSpecification *)new csl::FilterSpecification(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FilterSpecification, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FilterSpecification__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  double *arg3 = (double *) 0 ;
  double *arg4 = (double *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  csl::FilterSpecification *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FilterSpecification" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FilterSpecification" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FilterSpecification" "', argument " "3"" of type '" "double *""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_FilterSpecification" "', argument " "4"" of type '" "double *""'"); 
  }
  arg4 = reinterpret_cast< double * >(argp4);
  result = (csl::FilterSpecification *)new csl::FilterSpecification(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FilterSpecification, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FilterSpecification__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  double *arg3 = (double *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  csl::FilterSpecification *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FilterSpecification" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FilterSpecification" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FilterSpecification" "', argument " "3"" of type '" "double *""'"); 
  }
  arg3 = reinterpret_cast< double * >(argp3);
  result = (csl::FilterSpecification *)new csl::FilterSpecification(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FilterSpecification, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FilterSpecification__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::FilterSpecification *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FilterSpecification" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FilterSpecification" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::FilterSpecification *)new csl::FilterSpecification(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FilterSpecification, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FilterSpecification__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::FilterSpecification *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FilterSpecification" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::FilterSpecification *)new csl::FilterSpecification(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FilterSpecification, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FilterSpecification__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::FilterSpecification *)new csl::FilterSpecification();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FilterSpecification, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FilterSpecification(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FilterSpecification", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_FilterSpecification__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_FilterSpecification__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_FilterSpecification__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_FilterSpecification__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_FilterSpecification__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_new_FilterSpecification__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FilterSpecification'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FilterSpecification::FilterSpecification(unsigned int,unsigned int,double *,double *,double *)\n"
    "    csl::FilterSpecification::FilterSpecification(unsigned int,unsigned int,double *,double *)\n"
    "    csl::FilterSpecification::FilterSpecification(unsigned int,unsigned int,double *)\n"
    "    csl::FilterSpecification::FilterSpecification(unsigned int,unsigned int)\n"
    "    csl::FilterSpecification::FilterSpecification(unsigned int)\n"
    "    csl::FilterSpecification::FilterSpecification()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FilterSpecification(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FilterSpecification" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_setFrequencies(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FilterSpecification_setFrequencies", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_setFrequencies" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterSpecification_setFrequencies" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  (arg1)->setFrequencies(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_setResponses(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FilterSpecification_setResponses", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_setResponses" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterSpecification_setResponses" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  (arg1)->setResponses(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_setWeights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FilterSpecification_setWeights", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_setWeights" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterSpecification_setWeights" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  (arg1)->setWeights(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_setNumTaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FilterSpecification_setNumTaps", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_setNumTaps" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FilterSpecification_setNumTaps" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setNumTaps(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mNumTaps_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FilterSpecification_mNumTaps_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mNumTaps_set" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FilterSpecification_mNumTaps_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mNumTaps = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mNumTaps_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mNumTaps_get" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  result = (unsigned int) ((arg1)->mNumTaps);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_planFilter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_planFilter" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  (arg1)->planFilter();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mTapData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FilterSpecification_mTapData_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mTapData_set" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterSpecification_mTapData_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->mTapData = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mTapData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mTapData_get" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  result = (double *) ((arg1)->mTapData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mNumBands_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FilterSpecification_mNumBands_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mNumBands_set" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FilterSpecification_mNumBands_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mNumBands = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mNumBands_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mNumBands_get" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  result = (unsigned int) ((arg1)->mNumBands);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mFrequencies_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FilterSpecification_mFrequencies_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mFrequencies_set" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterSpecification_mFrequencies_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->mFrequencies = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mFrequencies_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mFrequencies_get" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  result = (double *) ((arg1)->mFrequencies);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mResponses_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FilterSpecification_mResponses_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mResponses_set" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterSpecification_mResponses_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->mResponses = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mResponses_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mResponses_get" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  result = (double *) ((arg1)->mResponses);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mWeights_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  double *arg2 = (double *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FilterSpecification_mWeights_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mWeights_set" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_double, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FilterSpecification_mWeights_set" "', argument " "2"" of type '" "double *""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  if (arg1) (arg1)->mWeights = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FilterSpecification_mWeights_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = (csl::FilterSpecification *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FilterSpecification, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FilterSpecification_mWeights_get" "', argument " "1"" of type '" "csl::FilterSpecification *""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  result = (double *) ((arg1)->mWeights);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FilterSpecification_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__FilterSpecification, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FilterSpecification_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FIR__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  unsigned int arg2 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  csl::FIR *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FIR" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FIR" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FIR" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FIR" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  result = (csl::FIR *)new csl::FIR(*arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FIR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FIR__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::FIR *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FIR" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FIR" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_FIR" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::FIR *)new csl::FIR(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FIR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FIR__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::FIR *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FIR" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FIR" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::FIR *)new csl::FIR(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FIR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FIR__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FilterSpecification *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::FIR *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__FilterSpecification,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FIR" "', argument " "1"" of type '" "csl::FilterSpecification &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FIR" "', argument " "1"" of type '" "csl::FilterSpecification &""'"); 
  }
  arg1 = reinterpret_cast< csl::FilterSpecification * >(argp1);
  result = (csl::FIR *)new csl::FIR(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FIR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FIR__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  csl::FIR *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FIR" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FIR" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FIR" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (csl::FIR *)new csl::FIR(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FIR, SWIG_POINTER_NEW |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FIR__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  csl::FilterSpecification *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::FIR *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FIR" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FIR" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__FilterSpecification,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_FIR" "', argument " "2"" of type '" "csl::FilterSpecification &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FIR" "', argument " "2"" of type '" "csl::FilterSpecification &""'"); 
  }
  arg2 = reinterpret_cast< csl::FilterSpecification * >(argp2);
  result = (csl::FIR *)new csl::FIR(*arg1,*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FIR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FIR(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FIR", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_new_FIR__SWIG_2(self, argc, argv);
  }
check_1:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_FIR__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__FilterSpecification, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    return _wrap_new_FIR__SWIG_5(self, argc, argv);
  }
check_3:
  
  if (argc == 2) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_4;
    return _wrap_new_FIR__SWIG_1(self, argc, argv);
  }
check_4:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_new_FIR__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_FIR__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FIR'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FIR::FIR(csl::UnitGenerator &,unsigned int,float *)\n"
    "    csl::FIR::FIR(csl::UnitGenerator &,unsigned int)\n"
    "    csl::FIR::FIR(csl::UnitGenerator &)\n"
    "    csl::FIR::FIR(csl::FilterSpecification &)\n"
    "    csl::FIR::FIR(csl::UnitGenerator &,char *)\n"
    "    csl::FIR::FIR(csl::UnitGenerator &,csl::FilterSpecification &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FIR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FIR *arg1 = (csl::FIR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FIR, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FIR" "', argument " "1"" of type '" "csl::FIR *""'"); 
  }
  arg1 = reinterpret_cast< csl::FIR * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FIR_setTaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FIR *arg1 = (csl::FIR *) 0 ;
  unsigned int arg2 ;
  float *arg3 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FIR_setTaps", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FIR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FIR_setTaps" "', argument " "1"" of type '" "csl::FIR *""'"); 
  }
  arg1 = reinterpret_cast< csl::FIR * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FIR_setTaps" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FIR_setTaps" "', argument " "3"" of type '" "float *""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  (arg1)->setTaps(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FIR_readTaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FIR *arg1 = (csl::FIR *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FIR_readTaps", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FIR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FIR_readTaps" "', argument " "1"" of type '" "csl::FIR *""'"); 
  }
  arg1 = reinterpret_cast< csl::FIR * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FIR_readTaps" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  (arg1)->readTaps(arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FIR_print_taps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FIR *arg1 = (csl::FIR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FIR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FIR_print_taps" "', argument " "1"" of type '" "csl::FIR *""'"); 
  }
  arg1 = reinterpret_cast< csl::FIR * >(argp1);
  (arg1)->print_taps();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FIR_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__FIR, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FIR_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Freeverb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Freeverb *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Freeverb" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Freeverb" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::Freeverb *)new csl::Freeverb(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Freeverb, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Freeverb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Freeverb *arg1 = (csl::Freeverb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Freeverb, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Freeverb" "', argument " "1"" of type '" "csl::Freeverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Freeverb * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Freeverb_setRoomSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Freeverb *arg1 = (csl::Freeverb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Freeverb_setRoomSize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Freeverb_setRoomSize" "', argument " "1"" of type '" "csl::Freeverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Freeverb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Freeverb_setRoomSize" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setRoomSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Freeverb_roomSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Freeverb *arg1 = (csl::Freeverb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Freeverb_roomSize" "', argument " "1"" of type '" "csl::Freeverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Freeverb * >(argp1);
  result = (float)(arg1)->roomSize();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Freeverb_dampening(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Freeverb *arg1 = (csl::Freeverb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Freeverb_dampening" "', argument " "1"" of type '" "csl::Freeverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Freeverb * >(argp1);
  result = (float)(arg1)->dampening();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Freeverb_setDampening(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Freeverb *arg1 = (csl::Freeverb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Freeverb_setDampening", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Freeverb_setDampening" "', argument " "1"" of type '" "csl::Freeverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Freeverb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Freeverb_setDampening" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setDampening(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Freeverb_setWetLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Freeverb *arg1 = (csl::Freeverb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Freeverb_setWetLevel", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Freeverb_setWetLevel" "', argument " "1"" of type '" "csl::Freeverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Freeverb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Freeverb_setWetLevel" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setWetLevel(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Freeverb_wetLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Freeverb *arg1 = (csl::Freeverb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Freeverb_wetLevel" "', argument " "1"" of type '" "csl::Freeverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Freeverb * >(argp1);
  result = (float)(arg1)->wetLevel();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Freeverb_setDryLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Freeverb *arg1 = (csl::Freeverb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Freeverb_setDryLevel", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Freeverb_setDryLevel" "', argument " "1"" of type '" "csl::Freeverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Freeverb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Freeverb_setDryLevel" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setDryLevel(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Freeverb_dryLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Freeverb *arg1 = (csl::Freeverb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Freeverb_dryLevel" "', argument " "1"" of type '" "csl::Freeverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Freeverb * >(argp1);
  result = (float)(arg1)->dryLevel();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Freeverb_setWidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Freeverb *arg1 = (csl::Freeverb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Freeverb_setWidth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Freeverb_setWidth" "', argument " "1"" of type '" "csl::Freeverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Freeverb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Freeverb_setWidth" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setWidth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Freeverb_width(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Freeverb *arg1 = (csl::Freeverb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Freeverb_width" "', argument " "1"" of type '" "csl::Freeverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Freeverb * >(argp1);
  result = (float)(arg1)->width();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Freeverb_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Freeverb, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Freeverb_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Comb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Comb *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Comb", 0, 0, 0)) SWIG_fail;
  result = (csl::Comb *)new csl::Comb();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Comb, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comb_mute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Comb *arg1 = (csl::Comb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Comb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Comb_mute" "', argument " "1"" of type '" "csl::Comb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Comb * >(argp1);
  (arg1)->mute();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comb_damp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Comb *arg1 = (csl::Comb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Comb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Comb_damp" "', argument " "1"" of type '" "csl::Comb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Comb * >(argp1);
  result = (float)(arg1)->damp();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comb_feedback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Comb *arg1 = (csl::Comb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Comb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Comb_feedback" "', argument " "1"" of type '" "csl::Comb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Comb * >(argp1);
  result = (float)(arg1)->feedback();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comb_setDamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Comb *arg1 = (csl::Comb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Comb_setDamp", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Comb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Comb_setDamp" "', argument " "1"" of type '" "csl::Comb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Comb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Comb_setDamp" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setDamp(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comb_setFeedback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Comb *arg1 = (csl::Comb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Comb_setFeedback", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Comb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Comb_setFeedback" "', argument " "1"" of type '" "csl::Comb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Comb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Comb_setFeedback" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setFeedback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comb_setBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Comb *arg1 = (csl::Comb *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Comb_setBuffer", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Comb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Comb_setBuffer" "', argument " "1"" of type '" "csl::Comb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Comb * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Comb_setBuffer" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Comb_setBuffer" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->setBuffer(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comb_process(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Comb *arg1 = (csl::Comb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "Comb_process", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Comb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Comb_process" "', argument " "1"" of type '" "csl::Comb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Comb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Comb_process" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (float)(arg1)->process(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Comb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Comb *arg1 = (csl::Comb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Comb, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Comb" "', argument " "1"" of type '" "csl::Comb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Comb * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Comb_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Comb, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Comb_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FAllpass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FAllpass *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_FAllpass", 0, 0, 0)) SWIG_fail;
  result = (csl::FAllpass *)new csl::FAllpass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FAllpass, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FAllpass_mute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FAllpass *arg1 = (csl::FAllpass *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FAllpass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FAllpass_mute" "', argument " "1"" of type '" "csl::FAllpass *""'"); 
  }
  arg1 = reinterpret_cast< csl::FAllpass * >(argp1);
  (arg1)->mute();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FAllpass_feedback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FAllpass *arg1 = (csl::FAllpass *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FAllpass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FAllpass_feedback" "', argument " "1"" of type '" "csl::FAllpass *""'"); 
  }
  arg1 = reinterpret_cast< csl::FAllpass * >(argp1);
  result = (float)(arg1)->feedback();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FAllpass_setFeedback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FAllpass *arg1 = (csl::FAllpass *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FAllpass_setFeedback", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FAllpass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FAllpass_setFeedback" "', argument " "1"" of type '" "csl::FAllpass *""'"); 
  }
  arg1 = reinterpret_cast< csl::FAllpass * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FAllpass_setFeedback" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setFeedback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FAllpass_setBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FAllpass *arg1 = (csl::FAllpass *) 0 ;
  float *arg2 = (float *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FAllpass_setBuffer", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FAllpass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FAllpass_setBuffer" "', argument " "1"" of type '" "csl::FAllpass *""'"); 
  }
  arg1 = reinterpret_cast< csl::FAllpass * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FAllpass_setBuffer" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FAllpass_setBuffer" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->setBuffer(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FAllpass_process(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FAllpass *arg1 = (csl::FAllpass *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "FAllpass_process", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FAllpass, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FAllpass_process" "', argument " "1"" of type '" "csl::FAllpass *""'"); 
  }
  arg1 = reinterpret_cast< csl::FAllpass * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FAllpass_process" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (float)(arg1)->process(arg2);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FAllpass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FAllpass *arg1 = (csl::FAllpass *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FAllpass, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FAllpass" "', argument " "1"" of type '" "csl::FAllpass *""'"); 
  }
  arg1 = reinterpret_cast< csl::FAllpass * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FAllpass_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__FAllpass, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FAllpass_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Stereoverb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::UnitGenerator *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Stereoverb *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Stereoverb" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Stereoverb" "', argument " "1"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg1 = reinterpret_cast< csl::UnitGenerator * >(argp1);
  result = (csl::Stereoverb *)new csl::Stereoverb(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Stereoverb, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Stereoverb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Stereoverb *arg1 = (csl::Stereoverb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Stereoverb, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Stereoverb" "', argument " "1"" of type '" "csl::Stereoverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Stereoverb * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Stereoverb_setRoomSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Stereoverb *arg1 = (csl::Stereoverb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Stereoverb_setRoomSize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Stereoverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Stereoverb_setRoomSize" "', argument " "1"" of type '" "csl::Stereoverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Stereoverb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Stereoverb_setRoomSize" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setRoomSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Stereoverb_setDampening(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Stereoverb *arg1 = (csl::Stereoverb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Stereoverb_setDampening", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Stereoverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Stereoverb_setDampening" "', argument " "1"" of type '" "csl::Stereoverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Stereoverb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Stereoverb_setDampening" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setDampening(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Stereoverb_setWetLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Stereoverb *arg1 = (csl::Stereoverb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Stereoverb_setWetLevel", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Stereoverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Stereoverb_setWetLevel" "', argument " "1"" of type '" "csl::Stereoverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Stereoverb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Stereoverb_setWetLevel" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setWetLevel(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Stereoverb_setDryLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Stereoverb *arg1 = (csl::Stereoverb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Stereoverb_setDryLevel", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Stereoverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Stereoverb_setDryLevel" "', argument " "1"" of type '" "csl::Stereoverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Stereoverb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Stereoverb_setDryLevel" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setDryLevel(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Stereoverb_setWidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Stereoverb *arg1 = (csl::Stereoverb *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Stereoverb_setWidth", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Stereoverb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Stereoverb_setWidth" "', argument " "1"" of type '" "csl::Stereoverb *""'"); 
  }
  arg1 = reinterpret_cast< csl::Stereoverb * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Stereoverb_setWidth" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setWidth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Stereoverb_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Stereoverb, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Stereoverb_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN int Swig_var_projectName_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable projectName is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_projectName_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_FromCharPtr(ProjectInfo::projectName);
  return pyobj;
}


SWIGINTERN int Swig_var_companyName_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable companyName is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_companyName_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_FromCharPtr(ProjectInfo::companyName);
  return pyobj;
}


SWIGINTERN int Swig_var_versionString_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable versionString is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_versionString_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_FromCharPtr(ProjectInfo::versionString);
  return pyobj;
}


SWIGINTERN int Swig_var_versionNumber_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable versionNumber is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_versionNumber_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_int(static_cast< int >(ProjectInfo::versionNumber));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_delete_AudioIODeviceCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODeviceCallback *arg1 = (juce::AudioIODeviceCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODeviceCallback, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AudioIODeviceCallback" "', argument " "1"" of type '" "juce::AudioIODeviceCallback *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODeviceCallback * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODeviceCallback_audioDeviceIOCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODeviceCallback *arg1 = (juce::AudioIODeviceCallback *) 0 ;
  float **arg2 = (float **) 0 ;
  int arg3 ;
  float **arg4 = (float **) 0 ;
  int arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  PyObject *swig_obj[6] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AudioIODeviceCallback_audioDeviceIOCallback", 6, 6, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODeviceCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODeviceCallback_audioDeviceIOCallback" "', argument " "1"" of type '" "juce::AudioIODeviceCallback *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODeviceCallback * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioIODeviceCallback_audioDeviceIOCallback" "', argument " "2"" of type '" "float const **""'"); 
  }
  arg2 = reinterpret_cast< float ** >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioIODeviceCallback_audioDeviceIOCallback" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AudioIODeviceCallback_audioDeviceIOCallback" "', argument " "4"" of type '" "float **""'"); 
  }
  arg4 = reinterpret_cast< float ** >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AudioIODeviceCallback_audioDeviceIOCallback" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "AudioIODeviceCallback_audioDeviceIOCallback" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  (arg1)->audioDeviceIOCallback((float const **)arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODeviceCallback_audioDeviceAboutToStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODeviceCallback *arg1 = (juce::AudioIODeviceCallback *) 0 ;
  juce::AudioIODevice *arg2 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AudioIODeviceCallback_audioDeviceAboutToStart", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODeviceCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODeviceCallback_audioDeviceAboutToStart" "', argument " "1"" of type '" "juce::AudioIODeviceCallback *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODeviceCallback * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioIODeviceCallback_audioDeviceAboutToStart" "', argument " "2"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg2 = reinterpret_cast< juce::AudioIODevice * >(argp2);
  (arg1)->audioDeviceAboutToStart(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODeviceCallback_audioDeviceStopped(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODeviceCallback *arg1 = (juce::AudioIODeviceCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODeviceCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODeviceCallback_audioDeviceStopped" "', argument " "1"" of type '" "juce::AudioIODeviceCallback *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODeviceCallback * >(argp1);
  (arg1)->audioDeviceStopped();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODeviceCallback_audioDeviceError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODeviceCallback *arg1 = (juce::AudioIODeviceCallback *) 0 ;
  String *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AudioIODeviceCallback_audioDeviceError", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODeviceCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODeviceCallback_audioDeviceError" "', argument " "1"" of type '" "juce::AudioIODeviceCallback *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODeviceCallback * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_String,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioIODeviceCallback_audioDeviceError" "', argument " "2"" of type '" "String const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioIODeviceCallback_audioDeviceError" "', argument " "2"" of type '" "String const &""'"); 
  }
  arg2 = reinterpret_cast< String * >(argp2);
  (arg1)->audioDeviceError((String const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AudioIODeviceCallback_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_juce__AudioIODeviceCallback, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_AudioIODevice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AudioIODevice" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  String *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getName" "', argument " "1"" of type '" "juce::AudioIODevice const *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (String *) &((juce::AudioIODevice const *)arg1)->getName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getTypeName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  String *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getTypeName" "', argument " "1"" of type '" "juce::AudioIODevice const *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (String *) &((juce::AudioIODevice const *)arg1)->getTypeName();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_String, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getOutputChannelNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  StringArray result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getOutputChannelNames" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (arg1)->getOutputChannelNames();
  resultobj = SWIG_NewPointerObj((new StringArray(static_cast< const StringArray& >(result))), SWIGTYPE_p_StringArray, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getInputChannelNames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  StringArray result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getInputChannelNames" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (arg1)->getInputChannelNames();
  resultobj = SWIG_NewPointerObj((new StringArray(static_cast< const StringArray& >(result))), SWIGTYPE_p_StringArray, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getAvailableSampleRates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Array< double > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getAvailableSampleRates" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (arg1)->getAvailableSampleRates();
  resultobj = SWIG_NewPointerObj((new Array< double >(static_cast< const Array< double >& >(result))), SWIGTYPE_p_ArrayT_double_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getAvailableBufferSizes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  Array< int > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getAvailableBufferSizes" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (arg1)->getAvailableBufferSizes();
  resultobj = SWIG_NewPointerObj((new Array< int >(static_cast< const Array< int >& >(result))), SWIGTYPE_p_ArrayT_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getDefaultBufferSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getDefaultBufferSize" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (int)(arg1)->getDefaultBufferSize();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  BigInteger *arg2 = 0 ;
  BigInteger *arg3 = 0 ;
  double arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject *swig_obj[5] ;
  String result;
  
  if (!SWIG_Python_UnpackTuple(args, "AudioIODevice_open", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_open" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_BigInteger,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioIODevice_open" "', argument " "2"" of type '" "BigInteger const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioIODevice_open" "', argument " "2"" of type '" "BigInteger const &""'"); 
  }
  arg2 = reinterpret_cast< BigInteger * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_BigInteger,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioIODevice_open" "', argument " "3"" of type '" "BigInteger const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioIODevice_open" "', argument " "3"" of type '" "BigInteger const &""'"); 
  }
  arg3 = reinterpret_cast< BigInteger * >(argp3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AudioIODevice_open" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AudioIODevice_open" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (arg1)->open((BigInteger const &)*arg2,(BigInteger const &)*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj((new String(static_cast< const String& >(result))), SWIGTYPE_p_String, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_close(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_close" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  (arg1)->close();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_isOpen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_isOpen" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (bool)(arg1)->isOpen();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  juce::AudioIODeviceCallback *arg2 = (juce::AudioIODeviceCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AudioIODevice_start", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_start" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_juce__AudioIODeviceCallback, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioIODevice_start" "', argument " "2"" of type '" "juce::AudioIODeviceCallback *""'"); 
  }
  arg2 = reinterpret_cast< juce::AudioIODeviceCallback * >(argp2);
  (arg1)->start(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_stop" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  (arg1)->stop();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_isPlaying(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_isPlaying" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (bool)(arg1)->isPlaying();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getLastError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  String result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getLastError" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (arg1)->getLastError();
  resultobj = SWIG_NewPointerObj((new String(static_cast< const String& >(result))), SWIGTYPE_p_String, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getCurrentBufferSizeSamples(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getCurrentBufferSizeSamples" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (int)(arg1)->getCurrentBufferSizeSamples();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getCurrentSampleRate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getCurrentSampleRate" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (double)(arg1)->getCurrentSampleRate();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getCurrentBitDepth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getCurrentBitDepth" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (int)(arg1)->getCurrentBitDepth();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getActiveOutputChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  BigInteger result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getActiveOutputChannels" "', argument " "1"" of type '" "juce::AudioIODevice const *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = ((juce::AudioIODevice const *)arg1)->getActiveOutputChannels();
  resultobj = SWIG_NewPointerObj((new BigInteger(static_cast< const BigInteger& >(result))), SWIGTYPE_p_BigInteger, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getActiveInputChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  BigInteger result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getActiveInputChannels" "', argument " "1"" of type '" "juce::AudioIODevice const *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = ((juce::AudioIODevice const *)arg1)->getActiveInputChannels();
  resultobj = SWIG_NewPointerObj((new BigInteger(static_cast< const BigInteger& >(result))), SWIGTYPE_p_BigInteger, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getOutputLatencyInSamples(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getOutputLatencyInSamples" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (int)(arg1)->getOutputLatencyInSamples();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getInputLatencyInSamples(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getInputLatencyInSamples" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (int)(arg1)->getInputLatencyInSamples();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_hasControlPanel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_hasControlPanel" "', argument " "1"" of type '" "juce::AudioIODevice const *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (bool)((juce::AudioIODevice const *)arg1)->hasControlPanel();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_showControlPanel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_showControlPanel" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (bool)(arg1)->showControlPanel();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_setAudioPreprocessingEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "AudioIODevice_setAudioPreprocessingEnabled", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_setAudioPreprocessingEnabled" "', argument " "1"" of type '" "juce::AudioIODevice *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioIODevice_setAudioPreprocessingEnabled" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)(arg1)->setAudioPreprocessingEnabled(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioIODevice_getXRunCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::AudioIODevice *arg1 = (juce::AudioIODevice *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__AudioIODevice, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioIODevice_getXRunCount" "', argument " "1"" of type '" "juce::AudioIODevice const *""'"); 
  }
  arg1 = reinterpret_cast< juce::AudioIODevice * >(argp1);
  result = (int)((juce::AudioIODevice const *)arg1)->getXRunCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AudioIODevice_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_juce__AudioIODevice, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_JUCEIO__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  int arg3 ;
  int arg4 ;
  unsigned int arg5 ;
  unsigned int arg6 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  csl::JUCEIO *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_JUCEIO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_JUCEIO" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_JUCEIO" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_JUCEIO" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_JUCEIO" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_JUCEIO" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  result = (csl::JUCEIO *)new csl::JUCEIO(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__JUCEIO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JUCEIO__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  int arg3 ;
  int arg4 ;
  unsigned int arg5 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  csl::JUCEIO *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_JUCEIO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_JUCEIO" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_JUCEIO" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_JUCEIO" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_JUCEIO" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  result = (csl::JUCEIO *)new csl::JUCEIO(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__JUCEIO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JUCEIO__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  int arg3 ;
  int arg4 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  csl::JUCEIO *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_JUCEIO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_JUCEIO" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_JUCEIO" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_JUCEIO" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (csl::JUCEIO *)new csl::JUCEIO(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__JUCEIO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JUCEIO__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  int arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  csl::JUCEIO *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_JUCEIO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_JUCEIO" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_JUCEIO" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (csl::JUCEIO *)new csl::JUCEIO(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__JUCEIO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JUCEIO__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::JUCEIO *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_JUCEIO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_JUCEIO" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::JUCEIO *)new csl::JUCEIO(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__JUCEIO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JUCEIO__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  csl::JUCEIO *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_JUCEIO" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (csl::JUCEIO *)new csl::JUCEIO(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__JUCEIO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JUCEIO__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::JUCEIO *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::JUCEIO *)new csl::JUCEIO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__JUCEIO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JUCEIO(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_JUCEIO", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_JUCEIO__SWIG_6(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_JUCEIO__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_JUCEIO__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_JUCEIO__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_JUCEIO__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_new_JUCEIO__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 6) {
    PyObject *retobj = _wrap_new_JUCEIO__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_JUCEIO'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::JUCEIO::JUCEIO(unsigned int,unsigned int,int,int,unsigned int,unsigned int)\n"
    "    csl::JUCEIO::JUCEIO(unsigned int,unsigned int,int,int,unsigned int)\n"
    "    csl::JUCEIO::JUCEIO(unsigned int,unsigned int,int,int)\n"
    "    csl::JUCEIO::JUCEIO(unsigned int,unsigned int,int)\n"
    "    csl::JUCEIO::JUCEIO(unsigned int,unsigned int)\n"
    "    csl::JUCEIO::JUCEIO(unsigned int)\n"
    "    csl::JUCEIO::JUCEIO()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_JUCEIO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::JUCEIO *arg1 = (csl::JUCEIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__JUCEIO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_JUCEIO" "', argument " "1"" of type '" "csl::JUCEIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::JUCEIO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *JUCEIO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__JUCEIO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *JUCEIO_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FileIO__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  csl::FileIO *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FileIO" "', argument " "1"" of type '" "char *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (csl::FileIO *)new csl::FileIO(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FileIO, SWIG_POINTER_NEW |  0 );
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileIO__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::FileIO *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::FileIO *)new csl::FileIO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FileIO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FileIO(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FileIO", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_FileIO__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_FileIO__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FileIO'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FileIO::FileIO(char *)\n"
    "    csl::FileIO::FileIO()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FileIO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FileIO *arg1 = (csl::FileIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FileIO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FileIO" "', argument " "1"" of type '" "csl::FileIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::FileIO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileIO_mIsPlaying_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FileIO *arg1 = (csl::FileIO *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileIO_mIsPlaying_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FileIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileIO_mIsPlaying_set" "', argument " "1"" of type '" "csl::FileIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::FileIO * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileIO_mIsPlaying_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mIsPlaying = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileIO_mIsPlaying_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FileIO *arg1 = (csl::FileIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FileIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileIO_mIsPlaying_get" "', argument " "1"" of type '" "csl::FileIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::FileIO * >(argp1);
  result = (bool) ((arg1)->mIsPlaying);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileIO_mIsThreadRunning_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FileIO *arg1 = (csl::FileIO *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileIO_mIsThreadRunning_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FileIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileIO_mIsThreadRunning_set" "', argument " "1"" of type '" "csl::FileIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::FileIO * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileIO_mIsThreadRunning_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mIsThreadRunning = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileIO_mIsThreadRunning_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FileIO *arg1 = (csl::FileIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FileIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileIO_mIsThreadRunning_get" "', argument " "1"" of type '" "csl::FileIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::FileIO * >(argp1);
  result = (bool) ((arg1)->mIsThreadRunning);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileIO_mDuration_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FileIO *arg1 = (csl::FileIO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FileIO_mDuration_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FileIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileIO_mDuration_set" "', argument " "1"" of type '" "csl::FileIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::FileIO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileIO_mDuration_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mDuration = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileIO_mDuration_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FileIO *arg1 = (csl::FileIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FileIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileIO_mDuration_get" "', argument " "1"" of type '" "csl::FileIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::FileIO * >(argp1);
  result = (unsigned int) ((arg1)->mDuration);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileIO_start__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FileIO *arg1 = (csl::FileIO *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FileIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileIO_start" "', argument " "1"" of type '" "csl::FileIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::FileIO * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileIO_start" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  try {
    (arg1)->start(arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileIO_start__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FileIO *arg1 = (csl::FileIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FileIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileIO_start" "', argument " "1"" of type '" "csl::FileIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::FileIO * >(argp1);
  try {
    (arg1)->start();
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileIO_start(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileIO_start", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_FileIO_start__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_FileIO_start__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileIO_start'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FileIO::start(float)\n"
    "    csl::FileIO::start()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FileIO_getInput__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FileIO *arg1 = (csl::FileIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::Buffer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FileIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileIO_getInput" "', argument " "1"" of type '" "csl::FileIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::FileIO * >(argp1);
  try {
    result = (csl::Buffer *) &(arg1)->getInput();
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileIO_getInput__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FileIO *arg1 = (csl::FileIO *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  csl::Buffer *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FileIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileIO_getInput" "', argument " "1"" of type '" "csl::FileIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::FileIO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FileIO_getInput" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FileIO_getInput" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    result = (csl::Buffer *) &(arg1)->getInput(arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Buffer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileIO_getInput(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FileIO_getInput", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_FileIO_getInput__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_FileIO_getInput__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FileIO_getInput'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FileIO::getInput()\n"
    "    csl::FileIO::getInput(unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *FileIO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__FileIO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FileIO_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_SoundFileMetadata_mTitle_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundFileMetadata_mTitle_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mTitle_set" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SoundFileMetadata_mTitle_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SoundFileMetadata_mTitle_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->mTitle = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mTitle_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mTitle_get" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  result = (std::string *) & ((arg1)->mTitle);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mArtist_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundFileMetadata_mArtist_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mArtist_set" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SoundFileMetadata_mArtist_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SoundFileMetadata_mArtist_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->mArtist = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mArtist_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mArtist_get" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  result = (std::string *) & ((arg1)->mArtist);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mAlbum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundFileMetadata_mAlbum_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mAlbum_set" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SoundFileMetadata_mAlbum_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SoundFileMetadata_mAlbum_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->mAlbum = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mAlbum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mAlbum_get" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  result = (std::string *) & ((arg1)->mAlbum);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mYear_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundFileMetadata_mYear_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mYear_set" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundFileMetadata_mYear_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mYear = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mYear_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mYear_get" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  result = (unsigned int) ((arg1)->mYear);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mComment_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundFileMetadata_mComment_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mComment_set" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SoundFileMetadata_mComment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SoundFileMetadata_mComment_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->mComment = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mComment_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mComment_get" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  result = (std::string *) & ((arg1)->mComment);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mTrack_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundFileMetadata_mTrack_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mTrack_set" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundFileMetadata_mTrack_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mTrack = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mTrack_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mTrack_get" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  result = (unsigned int) ((arg1)->mTrack);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mGenre_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundFileMetadata_mGenre_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mGenre_set" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SoundFileMetadata_mGenre_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SoundFileMetadata_mGenre_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->mGenre = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mGenre_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mGenre_get" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  result = (std::string *) & ((arg1)->mGenre);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mBitRate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundFileMetadata_mBitRate_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mBitRate_set" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundFileMetadata_mBitRate_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mBitRate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mBitRate_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mBitRate_get" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  result = (unsigned int) ((arg1)->mBitRate);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mSampleRate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundFileMetadata_mSampleRate_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mSampleRate_set" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundFileMetadata_mSampleRate_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mSampleRate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mSampleRate_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mSampleRate_get" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  result = (unsigned int) ((arg1)->mSampleRate);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mChannels_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundFileMetadata_mChannels_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mChannels_set" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundFileMetadata_mChannels_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mChannels = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mChannels_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mChannels_get" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  result = (unsigned int) ((arg1)->mChannels);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mLength_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundFileMetadata_mLength_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mLength_set" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundFileMetadata_mLength_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mLength = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_mLength_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_mLength_get" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  result = (unsigned int) ((arg1)->mLength);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SoundFileMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_SoundFileMetadata", 0, 0, 0)) SWIG_fail;
  result = (csl::SoundFileMetadata *)new csl::SoundFileMetadata();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SoundFileMetadata, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SoundFileMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SoundFileMetadata" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileMetadata_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileMetadata *arg1 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileMetadata_dump" "', argument " "1"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileMetadata * >(argp1);
  (arg1)->dump();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SoundFileMetadata_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__SoundFileMetadata, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SoundFileMetadata_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_Abst_SoundFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Abst_SoundFile" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_isSndfileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_isSndfileName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (bool)csl::Abst_SoundFile::isSndfileName((char const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_sndfileNameType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::SoundFileFormat result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_sndfileNameType" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (csl::SoundFileFormat)csl::Abst_SoundFile::sndfileNameType((char const *)arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_mimeType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject *swig_obj[1] ;
  char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_mimeType" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)csl::Abst_SoundFile::mimeType((char const *)arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_openForRead__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_openForRead" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_openForRead" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  try {
    (arg1)->openForRead(arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_openForRead__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_openForRead" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  try {
    (arg1)->openForRead();
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_openForRead(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Abst_SoundFile_openForRead", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_Abst_SoundFile_openForRead__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_Abst_SoundFile_openForRead__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Abst_SoundFile_openForRead'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Abst_SoundFile::openForRead(bool)\n"
    "    csl::Abst_SoundFile::openForRead()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_openForWrite__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  csl::SoundFileFormat arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_openForWrite" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_openForWrite" "', argument " "2"" of type '" "csl::SoundFileFormat""'");
  } 
  arg2 = static_cast< csl::SoundFileFormat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Abst_SoundFile_openForWrite" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Abst_SoundFile_openForWrite" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Abst_SoundFile_openForWrite" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  try {
    (arg1)->openForWrite(arg2,arg3,arg4,arg5);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_openForWrite__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  csl::SoundFileFormat arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_openForWrite" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_openForWrite" "', argument " "2"" of type '" "csl::SoundFileFormat""'");
  } 
  arg2 = static_cast< csl::SoundFileFormat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Abst_SoundFile_openForWrite" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Abst_SoundFile_openForWrite" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  try {
    (arg1)->openForWrite(arg2,arg3,arg4);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_openForWrite__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  csl::SoundFileFormat arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_openForWrite" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_openForWrite" "', argument " "2"" of type '" "csl::SoundFileFormat""'");
  } 
  arg2 = static_cast< csl::SoundFileFormat >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Abst_SoundFile_openForWrite" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->openForWrite(arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_openForWrite__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  csl::SoundFileFormat arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_openForWrite" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_openForWrite" "', argument " "2"" of type '" "csl::SoundFileFormat""'");
  } 
  arg2 = static_cast< csl::SoundFileFormat >(val2);
  try {
    (arg1)->openForWrite(arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_openForWrite__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_openForWrite" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  try {
    (arg1)->openForWrite();
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_openForWrite(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Abst_SoundFile_openForWrite", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_Abst_SoundFile_openForWrite__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_Abst_SoundFile_openForWrite__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_Abst_SoundFile_openForWrite__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_Abst_SoundFile_openForWrite__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_Abst_SoundFile_openForWrite__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Abst_SoundFile_openForWrite'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Abst_SoundFile::openForWrite(csl::SoundFileFormat,unsigned int,unsigned int,unsigned int)\n"
    "    csl::Abst_SoundFile::openForWrite(csl::SoundFileFormat,unsigned int,unsigned int)\n"
    "    csl::Abst_SoundFile::openForWrite(csl::SoundFileFormat,unsigned int)\n"
    "    csl::Abst_SoundFile::openForWrite(csl::SoundFileFormat)\n"
    "    csl::Abst_SoundFile::openForWrite()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_seekTo__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  int arg2 ;
  csl::SeekPosition arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  unsigned int result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_seekTo" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_seekTo" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Abst_SoundFile_seekTo" "', argument " "3"" of type '" "csl::SeekPosition""'");
  } 
  arg3 = static_cast< csl::SeekPosition >(val3);
  try {
    result = (unsigned int)(arg1)->seekTo(arg2,arg3);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_seekTo__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_seekTo" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_seekTo" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  try {
    result = (unsigned int)(arg1)->seekTo(arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_seekTo(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Abst_SoundFile_seekTo", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_Abst_SoundFile_seekTo__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_Abst_SoundFile_seekTo__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Abst_SoundFile_seekTo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Abst_SoundFile::seekTo(int,csl::SeekPosition)\n"
    "    csl::Abst_SoundFile::seekTo(int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_readBufferFromFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_readBufferFromFile", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_readBufferFromFile" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_readBufferFromFile" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->readBufferFromFile(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_writeBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  csl::Buffer *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_writeBuffer" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Abst_SoundFile_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Abst_SoundFile_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  try {
    (arg1)->writeBuffer(*arg2);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_writeBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  csl::Buffer *arg2 = 0 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_writeBuffer" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__Buffer,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Abst_SoundFile_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Abst_SoundFile_writeBuffer" "', argument " "2"" of type '" "csl::Buffer &""'"); 
  }
  arg2 = reinterpret_cast< csl::Buffer * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Abst_SoundFile_writeBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Abst_SoundFile_writeBuffer" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  try {
    (arg1)->writeBuffer(*arg2,arg3,arg4);
  } catch(csl::CException &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new csl::CException(static_cast< const csl::CException& >(_e))),SWIGTYPE_p_csl__CException,SWIG_POINTER_OWN), "csl::CException", SWIGTYPE_p_csl__CException); SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_writeBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Abst_SoundFile_writeBuffer", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_Abst_SoundFile_writeBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_Abst_SoundFile_writeBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Abst_SoundFile_writeBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Abst_SoundFile::writeBuffer(csl::Buffer &)\n"
    "    csl::Abst_SoundFile::writeBuffer(csl::Buffer &,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_buffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::SampleBuffer result;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_buffer", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_buffer" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_buffer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::SampleBuffer)(arg1)->buffer(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_channels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_channels" "', argument " "1"" of type '" "csl::Abst_SoundFile const *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (unsigned int)((csl::Abst_SoundFile const *)arg1)->channels();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_durationInSecs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_durationInSecs" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (float)(arg1)->durationInSecs();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_sampleSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_sampleSize" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (unsigned int)(arg1)->sampleSize();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_mode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::SoundFileMode result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_mode" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (csl::SoundFileMode)(arg1)->mode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_cacheSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_cacheSize" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (unsigned int)(arg1)->cacheSize();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_mergeToMono(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_mergeToMono" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  (arg1)->mergeToMono();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setToEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setToEnd" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  (arg1)->setToEnd();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_close(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_close" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  (arg1)->close();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_freeBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_freeBuffer" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  (arg1)->freeBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_convertRate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_convertRate", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_convertRate" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_convertRate" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Abst_SoundFile_convertRate" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  (arg1)->convertRate(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_isValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_isValid" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (bool)(arg1)->isValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_isCached__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_isCached" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (bool)(arg1)->isCached();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_isCached__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_isCached" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_isCached" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (bool)(arg1)->isCached(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_isCached(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Abst_SoundFile_isCached", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_Abst_SoundFile_isCached__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_Abst_SoundFile_isCached__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Abst_SoundFile_isCached'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Abst_SoundFile::isCached()\n"
    "    csl::Abst_SoundFile::isCached(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setPath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_setPath", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setPath" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Abst_SoundFile_setPath" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  (arg1)->setPath(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_path(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_path" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (arg1)->path();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_startFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_startFrame" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (int)(arg1)->startFrame();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_setStart", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setStart" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_setStart" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setStart(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setStartSec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_setStartSec", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setStartSec" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_setStartSec" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setStartSec(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setStartRatio(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_setStartRatio", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setStartRatio" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_setStartRatio" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setStartRatio(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_stopFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_stopFrame" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (int)(arg1)->stopFrame();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setStop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_setStop", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setStop" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_setStop" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setStop(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setStopSec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_setStopSec", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setStopSec" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_setStopSec" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setStopSec(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setStopRatio(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_setStopRatio", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setStopRatio" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_setStopRatio" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setStopRatio(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_setBase", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setBase" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_setBase" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->setBase(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_base(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_base" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (unsigned int)(arg1)->base();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_playbackRate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_playbackRate" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (double)(arg1)->playbackRate();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setRate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  csl::UnitGenerator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setRate" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__UnitGenerator,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Abst_SoundFile_setRate" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Abst_SoundFile_setRate" "', argument " "2"" of type '" "csl::UnitGenerator &""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  (arg1)->setRate(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setRate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setRate" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_setRate" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->setRate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setRate(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "Abst_SoundFile_setRate", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_Abst_SoundFile_setRate__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    PyObject *retobj = _wrap_Abst_SoundFile_setRate__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'Abst_SoundFile_setRate'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Abst_SoundFile::setRate(csl::UnitGenerator &)\n"
    "    csl::Abst_SoundFile::setRate(float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_isLooping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_isLooping" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (bool)(arg1)->isLooping();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_setIsLooping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_setIsLooping", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_setIsLooping" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Abst_SoundFile_setIsLooping" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->setIsLooping(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_mProperties_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  csl::SoundFileMetadata *arg2 = (csl::SoundFileMetadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Abst_SoundFile_mProperties_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_mProperties_set" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__SoundFileMetadata, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Abst_SoundFile_mProperties_set" "', argument " "2"" of type '" "csl::SoundFileMetadata *""'"); 
  }
  arg2 = reinterpret_cast< csl::SoundFileMetadata * >(argp2);
  if (arg1) (arg1)->mProperties = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Abst_SoundFile_mProperties_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::SoundFileMetadata *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Abst_SoundFile_mProperties_get" "', argument " "1"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (csl::SoundFileMetadata *) ((arg1)->mProperties);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SoundFileMetadata, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Abst_SoundFile_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Abst_SoundFile, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SoundCue__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::SoundCue *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::SoundCue *)new csl::SoundCue();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SoundCue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SoundCue__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  csl::Abst_SoundFile *arg2 = (csl::Abst_SoundFile *) 0 ;
  int arg3 ;
  int arg4 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  csl::SoundCue *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_SoundCue" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SoundCue" "', argument " "2"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg2 = reinterpret_cast< csl::Abst_SoundFile * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SoundCue" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_SoundCue" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (csl::SoundCue *)new csl::SoundCue(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SoundCue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SoundCue__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  csl::Abst_SoundFile *arg2 = (csl::Abst_SoundFile *) 0 ;
  int arg3 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  csl::SoundCue *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_SoundCue" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SoundCue" "', argument " "2"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg2 = reinterpret_cast< csl::Abst_SoundFile * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_SoundCue" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (csl::SoundCue *)new csl::SoundCue(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SoundCue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SoundCue__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  csl::Abst_SoundFile *arg2 = (csl::Abst_SoundFile *) 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::SoundCue *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_SoundCue" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SoundCue" "', argument " "2"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg2 = reinterpret_cast< csl::Abst_SoundFile * >(argp2);
  result = (csl::SoundCue *)new csl::SoundCue(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SoundCue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SoundCue__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  csl::SoundCue *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_SoundCue" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (csl::SoundCue *)new csl::SoundCue(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SoundCue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SoundCue(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_SoundCue", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_SoundCue__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_SoundCue__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_SoundCue__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_SoundCue__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_SoundCue__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_SoundCue'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SoundCue::SoundCue()\n"
    "    csl::SoundCue::SoundCue(std::string,csl::Abst_SoundFile *,int,int)\n"
    "    csl::SoundCue::SoundCue(std::string,csl::Abst_SoundFile *,int)\n"
    "    csl::SoundCue::SoundCue(std::string,csl::Abst_SoundFile *)\n"
    "    csl::SoundCue::SoundCue(std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SoundCue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SoundCue" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundCue_mName_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mName_set" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SoundCue_mName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SoundCue_mName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->mName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mName_get" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  result = (std::string *) & ((arg1)->mName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  csl::Abst_SoundFile *arg2 = (csl::Abst_SoundFile *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundCue_mFile_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mFile_set" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Abst_SoundFile, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SoundCue_mFile_set" "', argument " "2"" of type '" "csl::Abst_SoundFile *""'"); 
  }
  arg2 = reinterpret_cast< csl::Abst_SoundFile * >(argp2);
  if (arg1) (arg1)->mFile = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Abst_SoundFile *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mFile_get" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  result = (csl::Abst_SoundFile *) ((arg1)->mFile);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Abst_SoundFile, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mStart_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundCue_mStart_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mStart_set" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundCue_mStart_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->mStart = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mStart_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mStart_get" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  result = (int) ((arg1)->mStart);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mStop_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundCue_mStop_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mStop_set" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundCue_mStop_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->mStop = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mStop_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mStop_get" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  result = (int) ((arg1)->mStop);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mCurrent_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundCue_mCurrent_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mCurrent_set" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundCue_mCurrent_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->mCurrent = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mCurrent_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mCurrent_get" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  result = (int) ((arg1)->mCurrent);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mReadRate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  csl::UnitGenerator *arg2 = (csl::UnitGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundCue_mReadRate_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mReadRate_set" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__UnitGenerator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SoundCue_mReadRate_set" "', argument " "2"" of type '" "csl::UnitGenerator *""'"); 
  }
  arg2 = reinterpret_cast< csl::UnitGenerator * >(argp2);
  if (arg1) (arg1)->mReadRate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_mReadRate_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::UnitGenerator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_mReadRate_get" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  result = (csl::UnitGenerator *) ((arg1)->mReadRate);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_readFrom(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SoundCue_readFrom", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_readFrom" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_FILE, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SoundCue_readFrom" "', argument " "2"" of type '" "FILE *""'"); 
  }
  arg2 = reinterpret_cast< FILE * >(argp2);
  (arg1)->readFrom(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_channels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_channels" "', argument " "1"" of type '" "csl::SoundCue const *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  result = (unsigned int)((csl::SoundCue const *)arg1)->channels();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_setToEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_setToEnd" "', argument " "1"" of type '" "csl::SoundCue *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  (arg1)->setToEnd();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundCue_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundCue *arg1 = (csl::SoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundCue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundCue_duration" "', argument " "1"" of type '" "csl::SoundCue const *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundCue * >(argp1);
  result = (float)((csl::SoundCue const *)arg1)->duration();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SoundCue_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__SoundCue, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SoundCue_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_SoundFileBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  unsigned int arg2 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  csl::SoundFileBuffer *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_SoundFileBuffer" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_SoundFileBuffer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (csl::SoundFileBuffer *)new csl::SoundFileBuffer(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SoundFileBuffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SoundFileBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  csl::SoundFileBuffer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_SoundFileBuffer" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (csl::SoundFileBuffer *)new csl::SoundFileBuffer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SoundFileBuffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SoundFileBuffer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Abst_SoundFile *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::SoundFileBuffer *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__Abst_SoundFile,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SoundFileBuffer" "', argument " "1"" of type '" "csl::Abst_SoundFile &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SoundFileBuffer" "', argument " "1"" of type '" "csl::Abst_SoundFile &""'"); 
  }
  arg1 = reinterpret_cast< csl::Abst_SoundFile * >(argp1);
  result = (csl::SoundFileBuffer *)new csl::SoundFileBuffer(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SoundFileBuffer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SoundFileBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_SoundFileBuffer", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__Abst_SoundFile, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_new_SoundFileBuffer__SWIG_2(self, argc, argv);
  }
check_1:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_SoundFileBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_SoundFileBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_SoundFileBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SoundFileBuffer::SoundFileBuffer(std::string,unsigned int)\n"
    "    csl::SoundFileBuffer::SoundFileBuffer(std::string)\n"
    "    csl::SoundFileBuffer::SoundFileBuffer(csl::Abst_SoundFile &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SoundFileBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SoundFileBuffer *arg1 = (csl::SoundFileBuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileBuffer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SoundFileBuffer" "', argument " "1"" of type '" "csl::SoundFileBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileBuffer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileBuffer_samplePtrFor__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SoundFileBuffer *arg1 = (csl::SoundFileBuffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  csl::SampleBuffer result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileBuffer_samplePtrFor" "', argument " "1"" of type '" "csl::SoundFileBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundFileBuffer_samplePtrFor" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SoundFileBuffer_samplePtrFor" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (csl::SampleBuffer)(arg1)->samplePtrFor(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileBuffer_samplePtrFor__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SoundFileBuffer *arg1 = (csl::SoundFileBuffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  csl::SampleBuffer result;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileBuffer_samplePtrFor" "', argument " "1"" of type '" "csl::SoundFileBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundFileBuffer_samplePtrFor" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SoundFileBuffer_samplePtrFor" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SoundFileBuffer_samplePtrFor" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (csl::SampleBuffer)(arg1)->samplePtrFor(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileBuffer_samplePtrFor(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SoundFileBuffer_samplePtrFor", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    PyObject *retobj = _wrap_SoundFileBuffer_samplePtrFor__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_SoundFileBuffer_samplePtrFor__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SoundFileBuffer_samplePtrFor'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SoundFileBuffer::samplePtrFor(unsigned int,unsigned int)\n"
    "    csl::SoundFileBuffer::samplePtrFor(unsigned int,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SoundFileBuffer_setBuffer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SoundFileBuffer *arg1 = (csl::SoundFileBuffer *) 0 ;
  unsigned int arg2 ;
  csl::SampleBuffer arg3 = (csl::SampleBuffer) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileBuffer_setBuffer" "', argument " "1"" of type '" "csl::SoundFileBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundFileBuffer_setBuffer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SoundFileBuffer_setBuffer" "', argument " "3"" of type '" "csl::SampleBuffer""'"); 
  }
  arg3 = reinterpret_cast< csl::SampleBuffer >(argp3);
  (arg1)->setBuffer(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileBuffer_setBuffer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SoundFileBuffer *arg1 = (csl::SoundFileBuffer *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  csl::sample arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SoundFileBuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SoundFileBuffer_setBuffer" "', argument " "1"" of type '" "csl::SoundFileBuffer *""'"); 
  }
  arg1 = reinterpret_cast< csl::SoundFileBuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SoundFileBuffer_setBuffer" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SoundFileBuffer_setBuffer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SoundFileBuffer_setBuffer" "', argument " "4"" of type '" "csl::sample""'");
  } 
  arg4 = static_cast< csl::sample >(val4);
  (arg1)->setBuffer(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SoundFileBuffer_setBuffer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SoundFileBuffer_setBuffer", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    PyObject *retobj = _wrap_SoundFileBuffer_setBuffer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_SoundFileBuffer_setBuffer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SoundFileBuffer_setBuffer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SoundFileBuffer::setBuffer(unsigned int,csl::SampleBuffer)\n"
    "    csl::SoundFileBuffer::setBuffer(unsigned int,unsigned int,csl::sample)\n");
  return 0;
}


SWIGINTERN PyObject *SoundFileBuffer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__SoundFileBuffer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SoundFileBuffer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ReferenceCountedObject_incReferenceCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::ReferenceCountedObject *arg1 = (juce::ReferenceCountedObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__ReferenceCountedObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReferenceCountedObject_incReferenceCount" "', argument " "1"" of type '" "juce::ReferenceCountedObject *""'"); 
  }
  arg1 = reinterpret_cast< juce::ReferenceCountedObject * >(argp1);
  (arg1)->incReferenceCount();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReferenceCountedObject_decReferenceCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::ReferenceCountedObject *arg1 = (juce::ReferenceCountedObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__ReferenceCountedObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReferenceCountedObject_decReferenceCount" "', argument " "1"" of type '" "juce::ReferenceCountedObject *""'"); 
  }
  arg1 = reinterpret_cast< juce::ReferenceCountedObject * >(argp1);
  (arg1)->decReferenceCount();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReferenceCountedObject_decReferenceCountWithoutDeleting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::ReferenceCountedObject *arg1 = (juce::ReferenceCountedObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__ReferenceCountedObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReferenceCountedObject_decReferenceCountWithoutDeleting" "', argument " "1"" of type '" "juce::ReferenceCountedObject *""'"); 
  }
  arg1 = reinterpret_cast< juce::ReferenceCountedObject * >(argp1);
  result = (bool)(arg1)->decReferenceCountWithoutDeleting();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ReferenceCountedObject_getReferenceCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::ReferenceCountedObject *arg1 = (juce::ReferenceCountedObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__ReferenceCountedObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ReferenceCountedObject_getReferenceCount" "', argument " "1"" of type '" "juce::ReferenceCountedObject const *""'"); 
  }
  arg1 = reinterpret_cast< juce::ReferenceCountedObject * >(argp1);
  result = (int)((juce::ReferenceCountedObject const *)arg1)->getReferenceCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ReferenceCountedObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_juce__ReferenceCountedObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SingleThreadedReferenceCountedObject_incReferenceCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::SingleThreadedReferenceCountedObject *arg1 = (juce::SingleThreadedReferenceCountedObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__SingleThreadedReferenceCountedObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingleThreadedReferenceCountedObject_incReferenceCount" "', argument " "1"" of type '" "juce::SingleThreadedReferenceCountedObject *""'"); 
  }
  arg1 = reinterpret_cast< juce::SingleThreadedReferenceCountedObject * >(argp1);
  (arg1)->incReferenceCount();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingleThreadedReferenceCountedObject_decReferenceCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::SingleThreadedReferenceCountedObject *arg1 = (juce::SingleThreadedReferenceCountedObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__SingleThreadedReferenceCountedObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingleThreadedReferenceCountedObject_decReferenceCount" "', argument " "1"" of type '" "juce::SingleThreadedReferenceCountedObject *""'"); 
  }
  arg1 = reinterpret_cast< juce::SingleThreadedReferenceCountedObject * >(argp1);
  (arg1)->decReferenceCount();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingleThreadedReferenceCountedObject_decReferenceCountWithoutDeleting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::SingleThreadedReferenceCountedObject *arg1 = (juce::SingleThreadedReferenceCountedObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__SingleThreadedReferenceCountedObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingleThreadedReferenceCountedObject_decReferenceCountWithoutDeleting" "', argument " "1"" of type '" "juce::SingleThreadedReferenceCountedObject *""'"); 
  }
  arg1 = reinterpret_cast< juce::SingleThreadedReferenceCountedObject * >(argp1);
  result = (bool)(arg1)->decReferenceCountWithoutDeleting();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SingleThreadedReferenceCountedObject_getReferenceCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::SingleThreadedReferenceCountedObject *arg1 = (juce::SingleThreadedReferenceCountedObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_juce__SingleThreadedReferenceCountedObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SingleThreadedReferenceCountedObject_getReferenceCount" "', argument " "1"" of type '" "juce::SingleThreadedReferenceCountedObject const *""'"); 
  }
  arg1 = reinterpret_cast< juce::SingleThreadedReferenceCountedObject * >(argp1);
  result = (int)((juce::SingleThreadedReferenceCountedObject const *)arg1)->getReferenceCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SingleThreadedReferenceCountedObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_juce__SingleThreadedReferenceCountedObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CMIDIMessage__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::CMIDIMessage *)new csl::CMIDIMessage();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CMIDIMessage, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CMIDIMessage__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::CMIDIMessageType arg1 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  csl::CMIDIMessage *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CMIDIMessage" "', argument " "1"" of type '" "csl::CMIDIMessageType""'");
  } 
  arg1 = static_cast< csl::CMIDIMessageType >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_CMIDIMessage" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_CMIDIMessage" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_CMIDIMessage" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  result = (csl::CMIDIMessage *)new csl::CMIDIMessage(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CMIDIMessage, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CMIDIMessage(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_CMIDIMessage", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_CMIDIMessage__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_new_CMIDIMessage__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_CMIDIMessage'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::CMIDIMessage::CMIDIMessage()\n"
    "    csl::CMIDIMessage::CMIDIMessage(csl::CMIDIMessageType,unsigned int,unsigned int,unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_isNoteOn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_isNoteOn" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (bool)(arg1)->isNoteOn();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_isNoteOff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_isNoteOff" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (bool)(arg1)->isNoteOff();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_isNoteOnOff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_isNoteOnOff" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (bool)(arg1)->isNoteOnOff();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_isPolyTouch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_isPolyTouch" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (bool)(arg1)->isPolyTouch();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_isControlChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_isControlChange" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (bool)(arg1)->isControlChange();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_isProgramChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_isProgramChange" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (bool)(arg1)->isProgramChange();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_isAftertouch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_isAftertouch" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (bool)(arg1)->isAftertouch();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_isPitchWheel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_isPitchWheel" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (bool)(arg1)->isPitchWheel();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_isSysEX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_isSysEX" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (bool)(arg1)->isSysEX();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_getCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_getCommand" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int)(arg1)->getCommand();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_getNote(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_getNote" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int)(arg1)->getNote();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_getVelocity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_getVelocity" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int)(arg1)->getVelocity();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_getPolyAftertouch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_getPolyAftertouch" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int)(arg1)->getPolyAftertouch();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_getControlFunction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_getControlFunction" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int)(arg1)->getControlFunction();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_getControlValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_getControlValue" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int)(arg1)->getControlValue();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_getProgramNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_getProgramNumber" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int)(arg1)->getProgramNumber();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_getAftertouch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_getAftertouch" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int)(arg1)->getAftertouch();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_getPitchWheel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_getPitchWheel" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int)(arg1)->getPitchWheel();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_getFrequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_getFrequency" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (float)(arg1)->getFrequency();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_getVelocityFloat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_getVelocityFloat" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (float)(arg1)->getVelocityFloat();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_message_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  csl::CMIDIMessageType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CMIDIMessage_message_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_message_set" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CMIDIMessage_message_set" "', argument " "2"" of type '" "csl::CMIDIMessageType""'");
  } 
  arg2 = static_cast< csl::CMIDIMessageType >(val2);
  if (arg1) (arg1)->message = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_message_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::CMIDIMessageType result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_message_get" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (csl::CMIDIMessageType) ((arg1)->message);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_command_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CMIDIMessage_command_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_command_set" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CMIDIMessage_command_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->command = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_command_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_command_get" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int) ((arg1)->command);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_channel_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CMIDIMessage_channel_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_channel_set" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CMIDIMessage_channel_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->channel = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_channel_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_channel_get" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int) ((arg1)->channel);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_data1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CMIDIMessage_data1_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_data1_set" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CMIDIMessage_data1_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->data1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_data1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_data1_get" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int) ((arg1)->data1);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_data2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CMIDIMessage_data2_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_data2_set" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CMIDIMessage_data2_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->data2 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_data2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_data2_get" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (unsigned int) ((arg1)->data2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_time_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "CMIDIMessage_time_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_time_set" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CMIDIMessage_time_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->time = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CMIDIMessage_time_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CMIDIMessage_time_get" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  result = (float) ((arg1)->time);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CMIDIMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::CMIDIMessage *arg1 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__CMIDIMessage, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CMIDIMessage" "', argument " "1"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg1 = reinterpret_cast< csl::CMIDIMessage * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CMIDIMessage_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__CMIDIMessage, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *CMIDIMessage_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MidiDeviceListEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  juce::MidiDeviceInfo arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::MidiDeviceListEntry *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_juce__MidiDeviceInfo,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MidiDeviceListEntry" "', argument " "1"" of type '" "juce::MidiDeviceInfo""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MidiDeviceListEntry" "', argument " "1"" of type '" "juce::MidiDeviceInfo""'");
    } else {
      juce::MidiDeviceInfo * temp = reinterpret_cast< juce::MidiDeviceInfo * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (csl::MidiDeviceListEntry *)new csl::MidiDeviceListEntry(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__MidiDeviceListEntry, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiDeviceListEntry_deviceInfo_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MidiDeviceListEntry *arg1 = (csl::MidiDeviceListEntry *) 0 ;
  juce::MidiDeviceInfo arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MidiDeviceListEntry_deviceInfo_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MidiDeviceListEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiDeviceListEntry_deviceInfo_set" "', argument " "1"" of type '" "csl::MidiDeviceListEntry *""'"); 
  }
  arg1 = reinterpret_cast< csl::MidiDeviceListEntry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_juce__MidiDeviceInfo,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MidiDeviceListEntry_deviceInfo_set" "', argument " "2"" of type '" "juce::MidiDeviceInfo""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MidiDeviceListEntry_deviceInfo_set" "', argument " "2"" of type '" "juce::MidiDeviceInfo""'");
    } else {
      juce::MidiDeviceInfo * temp = reinterpret_cast< juce::MidiDeviceInfo * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->deviceInfo = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiDeviceListEntry_deviceInfo_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MidiDeviceListEntry *arg1 = (csl::MidiDeviceListEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  juce::MidiDeviceInfo result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MidiDeviceListEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiDeviceListEntry_deviceInfo_get" "', argument " "1"" of type '" "csl::MidiDeviceListEntry *""'"); 
  }
  arg1 = reinterpret_cast< csl::MidiDeviceListEntry * >(argp1);
  result =  ((arg1)->deviceInfo);
  resultobj = SWIG_NewPointerObj((new juce::MidiDeviceInfo(static_cast< const juce::MidiDeviceInfo& >(result))), SWIGTYPE_p_juce__MidiDeviceInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiDeviceListEntry_inDevice_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MidiDeviceListEntry *arg1 = (csl::MidiDeviceListEntry *) 0 ;
  std::unique_ptr< juce::MidiInput > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MidiDeviceListEntry_inDevice_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MidiDeviceListEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiDeviceListEntry_inDevice_set" "', argument " "1"" of type '" "csl::MidiDeviceListEntry *""'"); 
  }
  arg1 = reinterpret_cast< csl::MidiDeviceListEntry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__unique_ptrT_juce__MidiInput_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MidiDeviceListEntry_inDevice_set" "', argument " "2"" of type '" "std::unique_ptr< juce::MidiInput >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MidiDeviceListEntry_inDevice_set" "', argument " "2"" of type '" "std::unique_ptr< juce::MidiInput >""'");
    } else {
      std::unique_ptr< juce::MidiInput > * temp = reinterpret_cast< std::unique_ptr< juce::MidiInput > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->inDevice = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiDeviceListEntry_inDevice_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MidiDeviceListEntry *arg1 = (csl::MidiDeviceListEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::unique_ptr< juce::MidiInput > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MidiDeviceListEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiDeviceListEntry_inDevice_get" "', argument " "1"" of type '" "csl::MidiDeviceListEntry *""'"); 
  }
  arg1 = reinterpret_cast< csl::MidiDeviceListEntry * >(argp1);
  result =  ((arg1)->inDevice);
  resultobj = SWIG_NewPointerObj((new std::unique_ptr< juce::MidiInput >(static_cast< const std::unique_ptr< juce::MidiInput >& >(result))), SWIGTYPE_p_std__unique_ptrT_juce__MidiInput_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiDeviceListEntry_outDevice_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MidiDeviceListEntry *arg1 = (csl::MidiDeviceListEntry *) 0 ;
  std::unique_ptr< juce::MidiOutput > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MidiDeviceListEntry_outDevice_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MidiDeviceListEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiDeviceListEntry_outDevice_set" "', argument " "1"" of type '" "csl::MidiDeviceListEntry *""'"); 
  }
  arg1 = reinterpret_cast< csl::MidiDeviceListEntry * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__unique_ptrT_juce__MidiOutput_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MidiDeviceListEntry_outDevice_set" "', argument " "2"" of type '" "std::unique_ptr< juce::MidiOutput >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MidiDeviceListEntry_outDevice_set" "', argument " "2"" of type '" "std::unique_ptr< juce::MidiOutput >""'");
    } else {
      std::unique_ptr< juce::MidiOutput > * temp = reinterpret_cast< std::unique_ptr< juce::MidiOutput > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->outDevice = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MidiDeviceListEntry_outDevice_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MidiDeviceListEntry *arg1 = (csl::MidiDeviceListEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::unique_ptr< juce::MidiOutput > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MidiDeviceListEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MidiDeviceListEntry_outDevice_get" "', argument " "1"" of type '" "csl::MidiDeviceListEntry *""'"); 
  }
  arg1 = reinterpret_cast< csl::MidiDeviceListEntry * >(argp1);
  result =  ((arg1)->outDevice);
  resultobj = SWIG_NewPointerObj((new std::unique_ptr< juce::MidiOutput >(static_cast< const std::unique_ptr< juce::MidiOutput >& >(result))), SWIGTYPE_p_std__unique_ptrT_juce__MidiOutput_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MidiDeviceListEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MidiDeviceListEntry *arg1 = (csl::MidiDeviceListEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MidiDeviceListEntry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MidiDeviceListEntry" "', argument " "1"" of type '" "csl::MidiDeviceListEntry *""'"); 
  }
  arg1 = reinterpret_cast< csl::MidiDeviceListEntry * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MidiDeviceListEntry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__MidiDeviceListEntry, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MidiDeviceListEntry_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_MIDIIO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MIDIIO" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_countDevices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_countDevices" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  result = (int)(arg1)->countDevices();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_dumpDevices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_dumpDevices" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  (arg1)->dumpDevices();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_open__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_open" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  (arg1)->open();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_open__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_open" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIIO_open" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->open(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_open(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "MIDIIO_open", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_MIDIIO_open__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_MIDIIO_open__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'MIDIIO_open'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::MIDIIO::open()\n"
    "    csl::MIDIIO::open(int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MIDIIO_isOpen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_isOpen" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  result = (bool)(arg1)->isOpen();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_close(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_close" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  (arg1)->close();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_start" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  (arg1)->start();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_stop" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  (arg1)->stop();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_clear" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_dumpBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_dumpBuffer" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  (arg1)->dumpBuffer();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_mDeviceID_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIO_mDeviceID_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_mDeviceID_set" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIIO_mDeviceID_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->mDeviceID = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_mDeviceID_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_mDeviceID_get" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  result = (int) ((arg1)->mDeviceID);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_mMsg_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  csl::CMIDIMessage *arg2 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIO_mMsg_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_mMsg_set" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIIO_mMsg_set" "', argument " "2"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg2 = reinterpret_cast< csl::CMIDIMessage * >(argp2);
  if (arg1) (arg1)->mMsg = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_mMsg_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::CMIDIMessage *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_mMsg_get" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  result = (csl::CMIDIMessage *)& ((arg1)->mMsg);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_mMsg2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  csl::CMIDIMessage *arg2 = (csl::CMIDIMessage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIO_mMsg2_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_mMsg2_set" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIIO_mMsg2_set" "', argument " "2"" of type '" "csl::CMIDIMessage *""'"); 
  }
  arg2 = reinterpret_cast< csl::CMIDIMessage * >(argp2);
  if (arg1) (arg1)->mMsg2 = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_mMsg2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::CMIDIMessage *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_mMsg2_get" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  result = (csl::CMIDIMessage *)& ((arg1)->mMsg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__CMIDIMessage, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_mBuffer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  juce::MidiBuffer arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIO_mBuffer_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_mBuffer_set" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_juce__MidiBuffer,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIIO_mBuffer_set" "', argument " "2"" of type '" "juce::MidiBuffer""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MIDIIO_mBuffer_set" "', argument " "2"" of type '" "juce::MidiBuffer""'");
    } else {
      juce::MidiBuffer * temp = reinterpret_cast< juce::MidiBuffer * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->mBuffer = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIO_mBuffer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIO *arg1 = (csl::MIDIIO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  juce::MidiBuffer result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIO_mBuffer_get" "', argument " "1"" of type '" "csl::MIDIIO *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIO * >(argp1);
  result =  ((arg1)->mBuffer);
  resultobj = SWIG_NewPointerObj((new juce::MidiBuffer(static_cast< const juce::MidiBuffer& >(result))), SWIGTYPE_p_juce__MidiBuffer, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MIDIIO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__MIDIIO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_MIDIIn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_MIDIIn", 0, 0, 0)) SWIG_fail;
  result = (csl::MIDIIn *)new csl::MIDIIn();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__MIDIIn, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_bufferSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_bufferSize" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  result = (unsigned int)(arg1)->bufferSize();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_setBufferSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIn_setBufferSize", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_setBufferSize" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIIn_setBufferSize" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  (arg1)->setBufferSize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_poll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_poll" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  result = (bool)(arg1)->poll();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_nextEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_nextEvent" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  (arg1)->nextEvent();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_dumpMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_dumpMessage" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  (arg1)->dumpMessage();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_mDevice_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  std::unique_ptr< juce::MidiInput > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIn_mDevice_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_mDevice_set" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_std__unique_ptrT_juce__MidiInput_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIIn_mDevice_set" "', argument " "2"" of type '" "std::unique_ptr< juce::MidiInput >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MIDIIn_mDevice_set" "', argument " "2"" of type '" "std::unique_ptr< juce::MidiInput >""'");
    } else {
      std::unique_ptr< juce::MidiInput > * temp = reinterpret_cast< std::unique_ptr< juce::MidiInput > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->mDevice = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_mDevice_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::unique_ptr< juce::MidiInput > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_mDevice_get" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  result =  ((arg1)->mDevice);
  resultobj = SWIG_NewPointerObj((new std::unique_ptr< juce::MidiInput >(static_cast< const std::unique_ptr< juce::MidiInput >& >(result))), SWIGTYPE_p_std__unique_ptrT_juce__MidiInput_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_mStartTime_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIn_mStartTime_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_mStartTime_set" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIIn_mStartTime_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->mStartTime = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_mStartTime_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_mStartTime_get" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  result = (double) ((arg1)->mStartTime);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_handleIncomingMidiMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  juce::MidiInput *arg2 = (juce::MidiInput *) 0 ;
  juce::MidiMessage *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIn_handleIncomingMidiMessage", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_handleIncomingMidiMessage" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_juce__MidiInput, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIIn_handleIncomingMidiMessage" "', argument " "2"" of type '" "juce::MidiInput *""'"); 
  }
  arg2 = reinterpret_cast< juce::MidiInput * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_juce__MidiMessage,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MIDIIn_handleIncomingMidiMessage" "', argument " "3"" of type '" "juce::MidiMessage const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MIDIIn_handleIncomingMidiMessage" "', argument " "3"" of type '" "juce::MidiMessage const &""'"); 
  }
  arg3 = reinterpret_cast< juce::MidiMessage * >(argp3);
  (arg1)->handleIncomingMidiMessage(arg2,(juce::MidiMessage const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_handleNoteOn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  juce::MidiKeyboardState *arg2 = (juce::MidiKeyboardState *) 0 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject *swig_obj[5] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIn_handleNoteOn", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_handleNoteOn" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_juce__MidiKeyboardState, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIIn_handleNoteOn" "', argument " "2"" of type '" "juce::MidiKeyboardState *""'"); 
  }
  arg2 = reinterpret_cast< juce::MidiKeyboardState * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MIDIIn_handleNoteOn" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MIDIIn_handleNoteOn" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "MIDIIn_handleNoteOn" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->handleNoteOn(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_handleNoteOff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  juce::MidiKeyboardState *arg2 = (juce::MidiKeyboardState *) 0 ;
  int arg3 ;
  int arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject *swig_obj[5] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIn_handleNoteOff", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_handleNoteOff" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_juce__MidiKeyboardState, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIIn_handleNoteOff" "', argument " "2"" of type '" "juce::MidiKeyboardState *""'"); 
  }
  arg2 = reinterpret_cast< juce::MidiKeyboardState * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MIDIIn_handleNoteOff" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MIDIIn_handleNoteOff" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "MIDIIn_handleNoteOff" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->handleNoteOff(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_handleAsyncUpdate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_handleAsyncUpdate" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  (arg1)->handleAsyncUpdate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_midiMonitorLock_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  juce::CriticalSection arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIn_midiMonitorLock_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_midiMonitorLock_set" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_juce__CriticalSection,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIIn_midiMonitorLock_set" "', argument " "2"" of type '" "juce::CriticalSection""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MIDIIn_midiMonitorLock_set" "', argument " "2"" of type '" "juce::CriticalSection""'");
    } else {
      juce::CriticalSection * temp = reinterpret_cast< juce::CriticalSection * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->midiMonitorLock = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_midiMonitorLock_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  juce::CriticalSection result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_midiMonitorLock_get" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  result =  ((arg1)->midiMonitorLock);
  resultobj = SWIG_NewPointerObj((new juce::CriticalSection(static_cast< const juce::CriticalSection& >(result))), SWIGTYPE_p_juce__CriticalSection, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_incomingMessages_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  juce::Array< juce::MidiMessage > arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIn_incomingMessages_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_incomingMessages_set" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_juce__ArrayT_juce__MidiMessage_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIIn_incomingMessages_set" "', argument " "2"" of type '" "juce::Array< juce::MidiMessage >""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MIDIIn_incomingMessages_set" "', argument " "2"" of type '" "juce::Array< juce::MidiMessage >""'");
    } else {
      juce::Array< juce::MidiMessage > * temp = reinterpret_cast< juce::Array< juce::MidiMessage > * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->incomingMessages = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_incomingMessages_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  juce::Array< juce::MidiMessage > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_incomingMessages_get" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  result =  ((arg1)->incomingMessages);
  resultobj = SWIG_NewPointerObj((new juce::Array< juce::MidiMessage >(static_cast< const juce::Array< juce::MidiMessage >& >(result))), SWIGTYPE_p_juce__ArrayT_juce__MidiMessage_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_mKeyboardState_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  juce::MidiKeyboardState arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIIn_mKeyboardState_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_mKeyboardState_set" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_juce__MidiKeyboardState,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIIn_mKeyboardState_set" "', argument " "2"" of type '" "juce::MidiKeyboardState""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MIDIIn_mKeyboardState_set" "', argument " "2"" of type '" "juce::MidiKeyboardState""'");
    } else {
      juce::MidiKeyboardState * temp = reinterpret_cast< juce::MidiKeyboardState * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->mKeyboardState = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIIn_mKeyboardState_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  juce::MidiKeyboardState result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIIn_mKeyboardState_get" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  result =  ((arg1)->mKeyboardState);
  resultobj = SWIG_NewPointerObj((new juce::MidiKeyboardState(static_cast< const juce::MidiKeyboardState& >(result))), SWIGTYPE_p_juce__MidiKeyboardState, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MIDIIn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIIn *arg1 = (csl::MIDIIn *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIIn, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MIDIIn" "', argument " "1"" of type '" "csl::MIDIIn *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIIn * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MIDIIn_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__MIDIIn, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MIDIIn_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MIDIOut(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIOut *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_MIDIOut", 0, 0, 0)) SWIG_fail;
  result = (csl::MIDIOut *)new csl::MIDIOut();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__MIDIOut, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MIDIOut(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MIDIOut" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_mOut_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  juce::MidiOutput *arg2 = (juce::MidiOutput *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIOut_mOut_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_mOut_set" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_juce__MidiOutput, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIOut_mOut_set" "', argument " "2"" of type '" "juce::MidiOutput *""'"); 
  }
  arg2 = reinterpret_cast< juce::MidiOutput * >(argp2);
  if (arg1) (arg1)->mOut = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_mOut_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  juce::MidiOutput *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_mOut_get" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  result = (juce::MidiOutput *) ((arg1)->mOut);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_juce__MidiOutput, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  csl::CMIDIMessage *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIOut_write", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_write" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_csl__CMIDIMessage,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIOut_write" "', argument " "2"" of type '" "csl::CMIDIMessage &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MIDIOut_write" "', argument " "2"" of type '" "csl::CMIDIMessage &""'"); 
  }
  arg2 = reinterpret_cast< csl::CMIDIMessage * >(argp2);
  (arg1)->write(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writeNoteOn__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_writeNoteOn" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIOut_writeNoteOn" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MIDIOut_writeNoteOn" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MIDIOut_writeNoteOn" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  (arg1)->writeNoteOn(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writeNoteOn__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  unsigned int arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_writeNoteOn" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIOut_writeNoteOn" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MIDIOut_writeNoteOn" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MIDIOut_writeNoteOn" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->writeNoteOn(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writeNoteOn(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "MIDIOut_writeNoteOn", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 4) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    return _wrap_MIDIOut_writeNoteOn__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 4) {
    PyObject *retobj = _wrap_MIDIOut_writeNoteOn__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'MIDIOut_writeNoteOn'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::MIDIOut::writeNoteOn(unsigned int,unsigned int,unsigned int)\n"
    "    csl::MIDIOut::writeNoteOn(unsigned int,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writeNoteOff__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_writeNoteOff" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIOut_writeNoteOff" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MIDIOut_writeNoteOff" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MIDIOut_writeNoteOff" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  (arg1)->writeNoteOff(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writeNoteOff__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  unsigned int arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_writeNoteOff" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIOut_writeNoteOff" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MIDIOut_writeNoteOff" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MIDIOut_writeNoteOff" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->writeNoteOff(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writeNoteOff(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "MIDIOut_writeNoteOff", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 4) {
    int _v = 0;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
        _v = SWIG_CheckState(res);
      }
    }
    if (!_v) goto check_1;
    return _wrap_MIDIOut_writeNoteOff__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 4) {
    PyObject *retobj = _wrap_MIDIOut_writeNoteOff__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'MIDIOut_writeNoteOff'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::MIDIOut::writeNoteOff(unsigned int,unsigned int,unsigned int)\n"
    "    csl::MIDIOut::writeNoteOff(unsigned int,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writePolyTouch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIOut_writePolyTouch", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_writePolyTouch" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIOut_writePolyTouch" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MIDIOut_writePolyTouch" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MIDIOut_writePolyTouch" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  (arg1)->writePolyTouch(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writeControlChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIOut_writeControlChange", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_writeControlChange" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIOut_writeControlChange" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MIDIOut_writeControlChange" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "MIDIOut_writeControlChange" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  (arg1)->writeControlChange(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writeProgramChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIOut_writeProgramChange", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_writeProgramChange" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIOut_writeProgramChange" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MIDIOut_writeProgramChange" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->writeProgramChange(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writeAftertouch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIOut_writeAftertouch", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_writeAftertouch" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIOut_writeAftertouch" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MIDIOut_writeAftertouch" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->writeAftertouch(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writePitchWheel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIOut_writePitchWheel", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_writePitchWheel" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIOut_writePitchWheel" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MIDIOut_writePitchWheel" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->writePitchWheel(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIOut_writeSysEX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIOut *arg1 = (csl::MIDIOut *) 0 ;
  long arg2 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIOut_writeSysEX", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIOut, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIOut_writeSysEX" "', argument " "1"" of type '" "csl::MIDIOut *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIOut * >(argp1);
  ecode2 = SWIG_AsVal_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIOut_writeSysEX" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MIDIOut_writeSysEX" "', argument " "3"" of type '" "unsigned char *""'"); 
  }
  arg3 = reinterpret_cast< unsigned char * >(argp3);
  (arg1)->writeSysEX(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MIDIOut_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__MIDIOut, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MIDIOut_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_MIDIPlayer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  csl::InstrumentLibrary *arg2 = (csl::InstrumentLibrary *) 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  csl::MIDIPlayer *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_MIDIPlayer" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__mapT_int_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MIDIPlayer" "', argument " "2"" of type '" "csl::InstrumentLibrary *""'"); 
  }
  arg2 = reinterpret_cast< csl::InstrumentLibrary * >(argp2);
  result = (csl::MIDIPlayer *)new csl::MIDIPlayer(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__MIDIPlayer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MIDIPlayer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  csl::InstrumentLibrary *arg3 = (csl::InstrumentLibrary *) 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  csl::MIDIPlayer *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_MIDIPlayer" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_MIDIPlayer" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_std__mapT_int_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_t_t_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_MIDIPlayer" "', argument " "3"" of type '" "csl::InstrumentLibrary *""'"); 
  }
  arg3 = reinterpret_cast< csl::InstrumentLibrary * >(argp3);
  result = (csl::MIDIPlayer *)new csl::MIDIPlayer(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__MIDIPlayer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MIDIPlayer(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_MIDIPlayer", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    PyObject *retobj = _wrap_new_MIDIPlayer__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_MIDIPlayer__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_MIDIPlayer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::MIDIPlayer::MIDIPlayer(std::string,csl::InstrumentLibrary *)\n"
    "    csl::MIDIPlayer::MIDIPlayer(std::string,std::string,csl::InstrumentLibrary *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_MIDIPlayer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MIDIPlayer" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIPlayer_start", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_start" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIPlayer_start" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->start(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  juce::MidiFile arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIPlayer_mFile_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mFile_set" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_juce__MidiFile,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIPlayer_mFile_set" "', argument " "2"" of type '" "juce::MidiFile""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MIDIPlayer_mFile_set" "', argument " "2"" of type '" "juce::MidiFile""'");
    } else {
      juce::MidiFile * temp = reinterpret_cast< juce::MidiFile * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->mFile = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  juce::MidiFile result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mFile_get" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  result =  ((arg1)->mFile);
  resultobj = SWIG_NewPointerObj((new juce::MidiFile(static_cast< const juce::MidiFile& >(result))), SWIGTYPE_p_juce__MidiFile, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mNumTrax_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIPlayer_mNumTrax_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mNumTrax_set" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIPlayer_mNumTrax_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->mNumTrax = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mNumTrax_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mNumTrax_get" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  result = (int) ((arg1)->mNumTrax);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mTrak_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  juce::MidiMessageSequence *arg2 = (juce::MidiMessageSequence *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIPlayer_mTrak_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mTrak_set" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_juce__MidiMessageSequence, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIPlayer_mTrak_set" "', argument " "2"" of type '" "juce::MidiMessageSequence *""'"); 
  }
  arg2 = reinterpret_cast< juce::MidiMessageSequence * >(argp2);
  if (arg1) (arg1)->mTrak = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mTrak_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  juce::MidiMessageSequence *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mTrak_get" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  result = (juce::MidiMessageSequence *) ((arg1)->mTrak);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_juce__MidiMessageSequence, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mIsOn_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIPlayer_mIsOn_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mIsOn_set" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIPlayer_mIsOn_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mIsOn = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mIsOn_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mIsOn_get" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  result = (bool) ((arg1)->mIsOn);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mLibrary_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  csl::InstrumentLibrary *arg2 = (csl::InstrumentLibrary *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIPlayer_mLibrary_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mLibrary_set" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_std__mapT_int_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_t_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MIDIPlayer_mLibrary_set" "', argument " "2"" of type '" "csl::InstrumentLibrary *""'"); 
  }
  arg2 = reinterpret_cast< csl::InstrumentLibrary * >(argp2);
  if (arg1) (arg1)->mLibrary = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mLibrary_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::InstrumentLibrary *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mLibrary_get" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  result = (csl::InstrumentLibrary *) ((arg1)->mLibrary);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_int_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mTempoScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "MIDIPlayer_mTempoScale_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mTempoScale_set" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MIDIPlayer_mTempoScale_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->mTempoScale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MIDIPlayer_mTempoScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::MIDIPlayer *arg1 = (csl::MIDIPlayer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__MIDIPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MIDIPlayer_mTempoScale_get" "', argument " "1"" of type '" "csl::MIDIPlayer *""'"); 
  }
  arg1 = reinterpret_cast< csl::MIDIPlayer * >(argp1);
  result = (float) ((arg1)->mTempoScale);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MIDIPlayer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__MIDIPlayer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *MIDIPlayer_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_find_option(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char **arg2 = (char **) 0 ;
  char arg3 ;
  unsigned int *arg4 = (unsigned int *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  char val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "find_option", 4, 4, swig_obj)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "find_option" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "find_option" "', argument " "2"" of type '" "char const **""'"); 
  }
  arg2 = reinterpret_cast< char ** >(argp2);
  ecode3 = SWIG_AsVal_char(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "find_option" "', argument " "3"" of type '" "char""'");
  } 
  arg3 = static_cast< char >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "find_option" "', argument " "4"" of type '" "unsigned int *""'"); 
  }
  arg4 = reinterpret_cast< unsigned int * >(argp4);
  result = (int)find_option(arg1,(char const **)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_usage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "usage" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  usage((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_initOSC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_AsCharPtrAndSize(swig_obj[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "initOSC" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  initOSC((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_setupOSCInstrLibrary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper< std::vector< csl::Instrument *,std::allocator< csl::Instrument * > > > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "setupOSCInstrLibrary" "', argument " "1"" of type '" "csl::InstrumentVector""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "setupOSCInstrLibrary" "', argument " "1"" of type '" "csl::InstrumentVector""'");
    } else {
      csl::InstrumentVector * temp = reinterpret_cast< csl::InstrumentVector * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  setupOSCInstrLibrary(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_mainOSCLoop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  int res1 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "mainOSCLoop" "', argument " "1"" of type '" "void *""'"); 
  }
  mainOSCLoop(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Accessor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  csl::Accessor *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_Accessor", 3, 3, swig_obj)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_Accessor" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_Accessor" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Accessor" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  result = (csl::Accessor *)new csl::Accessor(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Accessor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Accessor_mName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Accessor *arg1 = (csl::Accessor *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Accessor_mName_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Accessor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Accessor_mName_set" "', argument " "1"" of type '" "csl::Accessor *""'"); 
  }
  arg1 = reinterpret_cast< csl::Accessor * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Accessor_mName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Accessor_mName_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->mName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Accessor_mName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Accessor *arg1 = (csl::Accessor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Accessor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Accessor_mName_get" "', argument " "1"" of type '" "csl::Accessor *""'"); 
  }
  arg1 = reinterpret_cast< csl::Accessor * >(argp1);
  result = (std::string *) & ((arg1)->mName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Accessor_mSelector_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Accessor *arg1 = (csl::Accessor *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Accessor_mSelector_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Accessor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Accessor_mSelector_set" "', argument " "1"" of type '" "csl::Accessor *""'"); 
  }
  arg1 = reinterpret_cast< csl::Accessor * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Accessor_mSelector_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mSelector = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Accessor_mSelector_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Accessor *arg1 = (csl::Accessor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Accessor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Accessor_mSelector_get" "', argument " "1"" of type '" "csl::Accessor *""'"); 
  }
  arg1 = reinterpret_cast< csl::Accessor * >(argp1);
  result = (unsigned int) ((arg1)->mSelector);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Accessor_mType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Accessor *arg1 = (csl::Accessor *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Accessor_mType_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Accessor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Accessor_mType_set" "', argument " "1"" of type '" "csl::Accessor *""'"); 
  }
  arg1 = reinterpret_cast< csl::Accessor * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Accessor_mType_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Accessor_mType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Accessor *arg1 = (csl::Accessor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Accessor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Accessor_mType_get" "', argument " "1"" of type '" "csl::Accessor *""'"); 
  }
  arg1 = reinterpret_cast< csl::Accessor * >(argp1);
  result = (unsigned int) ((arg1)->mType);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Accessor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Accessor *arg1 = (csl::Accessor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Accessor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Accessor" "', argument " "1"" of type '" "csl::Accessor *""'"); 
  }
  arg1 = reinterpret_cast< csl::Accessor * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Accessor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Accessor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Accessor_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_Instrument__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::Instrument *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::Instrument *)new csl::Instrument();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Instrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Instrument__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::Instrument *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__Instrument,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_Instrument" "', argument " "1"" of type '" "csl::Instrument &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Instrument" "', argument " "1"" of type '" "csl::Instrument &""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  result = (csl::Instrument *)new csl::Instrument(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Instrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Instrument(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_Instrument", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_Instrument__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_Instrument__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_Instrument'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::Instrument::Instrument()\n"
    "    csl::Instrument::Instrument(csl::Instrument &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Instrument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Instrument" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_graph(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::UnitGenerator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_graph" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  result = (csl::UnitGenerator *)(arg1)->graph();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_genMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::UGenMap *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_genMap" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  result = (csl::UGenMap *)(arg1)->genMap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__mapT_std__string_csl__UnitGenerator_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__UnitGenerator_p_t_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_envelopes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::UGenVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_envelopes" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  result = (csl::UGenVector *)(arg1)->envelopes();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_csl__UnitGenerator_p_std__allocatorT_csl__UnitGenerator_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  std::string result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_name" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  result = (arg1)->name();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_genNamed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  std::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[2] ;
  csl::UnitGenerator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "Instrument_genNamed", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_genNamed" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Instrument_genNamed" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (csl::UnitGenerator *)(arg1)->genNamed(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__UnitGenerator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_getAccessors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  SwigValueWrapper< std::vector< csl::Accessor *,std::allocator< csl::Accessor * > > > result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_getAccessors" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  result = (arg1)->getAccessors();
  resultobj = SWIG_NewPointerObj((new csl::AccessorVector(static_cast< const csl::AccessorVector& >(result))), SWIGTYPE_p_std__vectorT_csl__Accessor_p_std__allocatorT_csl__Accessor_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_numAccessors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_numAccessors" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  result = (unsigned int)(arg1)->numAccessors();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_setParameter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  unsigned int arg2 ;
  int arg3 ;
  void **arg4 = (void **) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  PyObject *swig_obj[5] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Instrument_setParameter", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_setParameter" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Instrument_setParameter" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Instrument_setParameter" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Instrument_setParameter" "', argument " "4"" of type '" "void **""'"); 
  }
  arg4 = reinterpret_cast< void ** >(argp4);
  res5 = SWIG_AsCharPtrAndSize(swig_obj[4], &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Instrument_setParameter" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  (arg1)->setParameter(arg2,arg3,arg4,(char const *)arg5);
  resultobj = SWIG_Py_Void();
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_play(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_play" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  (arg1)->play();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_playOSC(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  int arg2 ;
  void **arg3 = (void **) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Instrument_playOSC", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_playOSC" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Instrument_playOSC" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Instrument_playOSC" "', argument " "3"" of type '" "void **""'"); 
  }
  arg3 = reinterpret_cast< void ** >(argp3);
  res4 = SWIG_AsCharPtrAndSize(swig_obj[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Instrument_playOSC" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  (arg1)->playOSC(arg2,arg3,(char const *)arg4);
  resultobj = SWIG_Py_Void();
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_playNote(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  int arg2 ;
  void **arg3 = (void **) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Instrument_playNote", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_playNote" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Instrument_playNote" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Instrument_playNote" "', argument " "3"" of type '" "void **""'"); 
  }
  arg3 = reinterpret_cast< void ** >(argp3);
  res4 = SWIG_AsCharPtrAndSize(swig_obj[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Instrument_playNote" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  (arg1)->playNote(arg2,arg3,(char const *)arg4);
  resultobj = SWIG_Py_Void();
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_playMIDI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  float arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject *swig_obj[5] ;
  
  if (!SWIG_Python_UnpackTuple(args, "Instrument_playMIDI", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_playMIDI" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Instrument_playMIDI" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Instrument_playMIDI" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Instrument_playMIDI" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Instrument_playMIDI" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  (arg1)->playMIDI(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Instrument_release(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::Instrument *arg1 = (csl::Instrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__Instrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Instrument_release" "', argument " "1"" of type '" "csl::Instrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::Instrument * >(argp1);
  (arg1)->release();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Instrument_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__Instrument, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *Instrument_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_AdditiveInstrument__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::AdditiveInstrument *)new csl::AdditiveInstrument();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AdditiveInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AdditiveInstrument__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SumOfSines *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::AdditiveInstrument *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__SumOfSines,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AdditiveInstrument" "', argument " "1"" of type '" "csl::SumOfSines &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AdditiveInstrument" "', argument " "1"" of type '" "csl::SumOfSines &""'"); 
  }
  arg1 = reinterpret_cast< csl::SumOfSines * >(argp1);
  result = (csl::AdditiveInstrument *)new csl::AdditiveInstrument(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AdditiveInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AdditiveInstrument__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  float arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::AdditiveInstrument *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AdditiveInstrument" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_AdditiveInstrument" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::AdditiveInstrument *)new csl::AdditiveInstrument(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AdditiveInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AdditiveInstrument__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::AdditiveInstrument *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__SHARCSpectrum,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AdditiveInstrument" "', argument " "1"" of type '" "csl::SHARCSpectrum &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AdditiveInstrument" "', argument " "1"" of type '" "csl::SHARCSpectrum &""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  result = (csl::AdditiveInstrument *)new csl::AdditiveInstrument(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AdditiveInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AdditiveInstrument__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::AdditiveInstrument *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__AdditiveInstrument,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AdditiveInstrument" "', argument " "1"" of type '" "csl::AdditiveInstrument &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AdditiveInstrument" "', argument " "1"" of type '" "csl::AdditiveInstrument &""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  result = (csl::AdditiveInstrument *)new csl::AdditiveInstrument(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__AdditiveInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AdditiveInstrument(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_AdditiveInstrument", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_AdditiveInstrument__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__SumOfSines, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_AdditiveInstrument__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_csl__SHARCSpectrum, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    return _wrap_new_AdditiveInstrument__SWIG_3(self, argc, argv);
  }
check_3:
  
  if (argc == 1) {
    PyObject *retobj = _wrap_new_AdditiveInstrument__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_AdditiveInstrument__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_AdditiveInstrument'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::AdditiveInstrument::AdditiveInstrument()\n"
    "    csl::AdditiveInstrument::AdditiveInstrument(csl::SumOfSines &)\n"
    "    csl::AdditiveInstrument::AdditiveInstrument(unsigned int,float)\n"
    "    csl::AdditiveInstrument::AdditiveInstrument(csl::SHARCSpectrum &)\n"
    "    csl::AdditiveInstrument::AdditiveInstrument(csl::AdditiveInstrument &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_AdditiveInstrument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AdditiveInstrument" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_playNote__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  
  if ((nobjs < 9) || (nobjs > 9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AdditiveInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "AdditiveInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "AdditiveInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "AdditiveInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "AdditiveInstrument_playNote" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_playNote__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  
  if ((nobjs < 8) || (nobjs > 8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AdditiveInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "AdditiveInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "AdditiveInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "AdditiveInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_playNote__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  
  if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AdditiveInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "AdditiveInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "AdditiveInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_playNote__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AdditiveInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "AdditiveInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_playNote__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AdditiveInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->playNote(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_playNote__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->playNote(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_playNote__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->playNote(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_playNote__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->playNote(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_playNote__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  (arg1)->playNote();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_playNote(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[10] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "AdditiveInstrument_playNote", 0, 9, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_AdditiveInstrument_playNote__SWIG_8(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_AdditiveInstrument_playNote__SWIG_7(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_AdditiveInstrument_playNote__SWIG_6(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_AdditiveInstrument_playNote__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_AdditiveInstrument_playNote__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 6) {
    PyObject *retobj = _wrap_AdditiveInstrument_playNote__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 7) {
    PyObject *retobj = _wrap_AdditiveInstrument_playNote__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 8) {
    PyObject *retobj = _wrap_AdditiveInstrument_playNote__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 9) {
    PyObject *retobj = _wrap_AdditiveInstrument_playNote__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'AdditiveInstrument_playNote'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::AdditiveInstrument::playNote(float,float,float,float,float,float,float,float)\n"
    "    csl::AdditiveInstrument::playNote(float,float,float,float,float,float,float)\n"
    "    csl::AdditiveInstrument::playNote(float,float,float,float,float,float)\n"
    "    csl::AdditiveInstrument::playNote(float,float,float,float,float)\n"
    "    csl::AdditiveInstrument::playNote(float,float,float,float)\n"
    "    csl::AdditiveInstrument::playNote(float,float,float)\n"
    "    csl::AdditiveInstrument::playNote(float,float)\n"
    "    csl::AdditiveInstrument::playNote(float)\n"
    "    csl::AdditiveInstrument::playNote()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_mAEnv_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  csl::ADSR *arg2 = (csl::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AdditiveInstrument_mAEnv_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_mAEnv_set" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AdditiveInstrument_mAEnv_set" "', argument " "2"" of type '" "csl::ADSR *""'"); 
  }
  arg2 = reinterpret_cast< csl::ADSR * >(argp2);
  if (arg1) (arg1)->mAEnv = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_mAEnv_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::ADSR *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_mAEnv_get" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  result = (csl::ADSR *)& ((arg1)->mAEnv);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ADSR, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_mSOS_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  csl::SumOfSines *arg2 = (csl::SumOfSines *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AdditiveInstrument_mSOS_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_mSOS_set" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AdditiveInstrument_mSOS_set" "', argument " "2"" of type '" "csl::SumOfSines *""'"); 
  }
  arg2 = reinterpret_cast< csl::SumOfSines * >(argp2);
  if (arg1) (arg1)->mSOS = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_mSOS_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::SumOfSines *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_mSOS_get" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  result = (csl::SumOfSines *)& ((arg1)->mSOS);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_mPanner_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  csl::Panner *arg2 = (csl::Panner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "AdditiveInstrument_mPanner_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_mPanner_set" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Panner, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AdditiveInstrument_mPanner_set" "', argument " "2"" of type '" "csl::Panner *""'"); 
  }
  arg2 = reinterpret_cast< csl::Panner * >(argp2);
  if (arg1) (arg1)->mPanner = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AdditiveInstrument_mPanner_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::AdditiveInstrument *arg1 = (csl::AdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Panner *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__AdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AdditiveInstrument_mPanner_get" "', argument " "1"" of type '" "csl::AdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::AdditiveInstrument * >(argp1);
  result = (csl::Panner *)& ((arg1)->mPanner);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AdditiveInstrument_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__AdditiveInstrument, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *AdditiveInstrument_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_VAdditiveInstrument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SHARCSpectrum *arg1 = (csl::SHARCSpectrum *) 0 ;
  csl::SHARCSpectrum *arg2 = (csl::SHARCSpectrum *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  csl::VAdditiveInstrument *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_VAdditiveInstrument", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_VAdditiveInstrument" "', argument " "1"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg1 = reinterpret_cast< csl::SHARCSpectrum * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__SHARCSpectrum, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_VAdditiveInstrument" "', argument " "2"" of type '" "csl::SHARCSpectrum *""'"); 
  }
  arg2 = reinterpret_cast< csl::SHARCSpectrum * >(argp2);
  result = (csl::VAdditiveInstrument *)new csl::VAdditiveInstrument(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__VAdditiveInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VAdditiveInstrument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VAdditiveInstrument" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_playNote__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  
  if ((nobjs < 9) || (nobjs > 9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VAdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VAdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VAdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VAdditiveInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "VAdditiveInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "VAdditiveInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "VAdditiveInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "VAdditiveInstrument_playNote" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_playNote__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  
  if ((nobjs < 8) || (nobjs > 8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VAdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VAdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VAdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VAdditiveInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "VAdditiveInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "VAdditiveInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "VAdditiveInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_playNote__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  
  if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VAdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VAdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VAdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VAdditiveInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "VAdditiveInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "VAdditiveInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_playNote__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VAdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VAdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VAdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VAdditiveInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "VAdditiveInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_playNote__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VAdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VAdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VAdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "VAdditiveInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->playNote(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_playNote__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VAdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VAdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "VAdditiveInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->playNote(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_playNote__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VAdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "VAdditiveInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->playNote(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_playNote__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VAdditiveInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->playNote(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_playNote__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_playNote" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  (arg1)->playNote();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_playNote(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[10] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "VAdditiveInstrument_playNote", 0, 9, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_VAdditiveInstrument_playNote__SWIG_8(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_VAdditiveInstrument_playNote__SWIG_7(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_VAdditiveInstrument_playNote__SWIG_6(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_VAdditiveInstrument_playNote__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_VAdditiveInstrument_playNote__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 6) {
    PyObject *retobj = _wrap_VAdditiveInstrument_playNote__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 7) {
    PyObject *retobj = _wrap_VAdditiveInstrument_playNote__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 8) {
    PyObject *retobj = _wrap_VAdditiveInstrument_playNote__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 9) {
    PyObject *retobj = _wrap_VAdditiveInstrument_playNote__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'VAdditiveInstrument_playNote'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::VAdditiveInstrument::playNote(float,float,float,float,float,float,float,float)\n"
    "    csl::VAdditiveInstrument::playNote(float,float,float,float,float,float,float)\n"
    "    csl::VAdditiveInstrument::playNote(float,float,float,float,float,float)\n"
    "    csl::VAdditiveInstrument::playNote(float,float,float,float,float)\n"
    "    csl::VAdditiveInstrument::playNote(float,float,float,float)\n"
    "    csl::VAdditiveInstrument::playNote(float,float,float)\n"
    "    csl::VAdditiveInstrument::playNote(float,float)\n"
    "    csl::VAdditiveInstrument::playNote(float)\n"
    "    csl::VAdditiveInstrument::playNote()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mAEnv1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  csl::ADSR *arg2 = (csl::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VAdditiveInstrument_mAEnv1_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mAEnv1_set" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VAdditiveInstrument_mAEnv1_set" "', argument " "2"" of type '" "csl::ADSR *""'"); 
  }
  arg2 = reinterpret_cast< csl::ADSR * >(argp2);
  if (arg1) (arg1)->mAEnv1 = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mAEnv1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::ADSR *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mAEnv1_get" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  result = (csl::ADSR *)& ((arg1)->mAEnv1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ADSR, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mAEnv2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  csl::ADSR *arg2 = (csl::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VAdditiveInstrument_mAEnv2_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mAEnv2_set" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VAdditiveInstrument_mAEnv2_set" "', argument " "2"" of type '" "csl::ADSR *""'"); 
  }
  arg2 = reinterpret_cast< csl::ADSR * >(argp2);
  if (arg1) (arg1)->mAEnv2 = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mAEnv2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::ADSR *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mAEnv2_get" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  result = (csl::ADSR *)& ((arg1)->mAEnv2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ADSR, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mXEnv1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  csl::LineSegment *arg2 = (csl::LineSegment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VAdditiveInstrument_mXEnv1_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mXEnv1_set" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VAdditiveInstrument_mXEnv1_set" "', argument " "2"" of type '" "csl::LineSegment *""'"); 
  }
  arg2 = reinterpret_cast< csl::LineSegment * >(argp2);
  if (arg1) (arg1)->mXEnv1 = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mXEnv1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::LineSegment *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mXEnv1_get" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  result = (csl::LineSegment *)& ((arg1)->mXEnv1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mXEnv2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  csl::LineSegment *arg2 = (csl::LineSegment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VAdditiveInstrument_mXEnv2_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mXEnv2_set" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VAdditiveInstrument_mXEnv2_set" "', argument " "2"" of type '" "csl::LineSegment *""'"); 
  }
  arg2 = reinterpret_cast< csl::LineSegment * >(argp2);
  if (arg1) (arg1)->mXEnv2 = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mXEnv2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::LineSegment *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mXEnv2_get" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  result = (csl::LineSegment *)& ((arg1)->mXEnv2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mSOS1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  csl::SumOfSines *arg2 = (csl::SumOfSines *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VAdditiveInstrument_mSOS1_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mSOS1_set" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VAdditiveInstrument_mSOS1_set" "', argument " "2"" of type '" "csl::SumOfSines *""'"); 
  }
  arg2 = reinterpret_cast< csl::SumOfSines * >(argp2);
  if (arg1) (arg1)->mSOS1 = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mSOS1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::SumOfSines *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mSOS1_get" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  result = (csl::SumOfSines *)& ((arg1)->mSOS1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mSOS2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  csl::SumOfSines *arg2 = (csl::SumOfSines *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VAdditiveInstrument_mSOS2_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mSOS2_set" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VAdditiveInstrument_mSOS2_set" "', argument " "2"" of type '" "csl::SumOfSines *""'"); 
  }
  arg2 = reinterpret_cast< csl::SumOfSines * >(argp2);
  if (arg1) (arg1)->mSOS2 = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mSOS2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::SumOfSines *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mSOS2_get" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  result = (csl::SumOfSines *)& ((arg1)->mSOS2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SumOfSines, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mMix_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  csl::Mixer *arg2 = (csl::Mixer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VAdditiveInstrument_mMix_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mMix_set" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Mixer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VAdditiveInstrument_mMix_set" "', argument " "2"" of type '" "csl::Mixer *""'"); 
  }
  arg2 = reinterpret_cast< csl::Mixer * >(argp2);
  if (arg1) (arg1)->mMix = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mMix_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Mixer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mMix_get" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  result = (csl::Mixer *)& ((arg1)->mMix);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Mixer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mPanner_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  csl::Panner *arg2 = (csl::Panner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "VAdditiveInstrument_mPanner_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mPanner_set" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Panner, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "VAdditiveInstrument_mPanner_set" "', argument " "2"" of type '" "csl::Panner *""'"); 
  }
  arg2 = reinterpret_cast< csl::Panner * >(argp2);
  if (arg1) (arg1)->mPanner = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VAdditiveInstrument_mPanner_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::VAdditiveInstrument *arg1 = (csl::VAdditiveInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Panner *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__VAdditiveInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VAdditiveInstrument_mPanner_get" "', argument " "1"" of type '" "csl::VAdditiveInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::VAdditiveInstrument * >(argp1);
  result = (csl::Panner *)& ((arg1)->mPanner);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VAdditiveInstrument_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__VAdditiveInstrument, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *VAdditiveInstrument_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FMInstrument__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::FMInstrument *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::FMInstrument *)new csl::FMInstrument();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FMInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FMInstrument__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::FMInstrument *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__FMInstrument,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FMInstrument" "', argument " "1"" of type '" "csl::FMInstrument &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FMInstrument" "', argument " "1"" of type '" "csl::FMInstrument &""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  result = (csl::FMInstrument *)new csl::FMInstrument(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FMInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FMInstrument(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FMInstrument", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_FMInstrument__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_FMInstrument__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FMInstrument'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FMInstrument::FMInstrument()\n"
    "    csl::FMInstrument::FMInstrument(csl::FMInstrument &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FMInstrument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FMInstrument" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_parseArgs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  int arg2 ;
  void **arg3 = (void **) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMInstrument_parseArgs", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_parseArgs" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_parseArgs" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FMInstrument_parseArgs" "', argument " "3"" of type '" "void **""'"); 
  }
  arg3 = reinterpret_cast< void ** >(argp3);
  res4 = SWIG_AsCharPtrAndSize(swig_obj[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "FMInstrument_parseArgs" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  (arg1)->parseArgs(arg2,arg3,(char const *)arg4);
  resultobj = SWIG_Py_Void();
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  float arg14 ;
  float arg15 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  float val13 ;
  int ecode13 = 0 ;
  float val14 ;
  int ecode14 = 0 ;
  float val15 ;
  int ecode15 = 0 ;
  
  if ((nobjs < 15) || (nobjs > 15)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "FMInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "FMInstrument_playNote" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "FMInstrument_playNote" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "FMInstrument_playNote" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(swig_obj[11], &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "FMInstrument_playNote" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  ecode13 = SWIG_AsVal_float(swig_obj[12], &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "FMInstrument_playNote" "', argument " "13"" of type '" "float""'");
  } 
  arg13 = static_cast< float >(val13);
  ecode14 = SWIG_AsVal_float(swig_obj[13], &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "FMInstrument_playNote" "', argument " "14"" of type '" "float""'");
  } 
  arg14 = static_cast< float >(val14);
  ecode15 = SWIG_AsVal_float(swig_obj[14], &val15);
  if (!SWIG_IsOK(ecode15)) {
    SWIG_exception_fail(SWIG_ArgError(ecode15), "in method '" "FMInstrument_playNote" "', argument " "15"" of type '" "float""'");
  } 
  arg15 = static_cast< float >(val15);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  float arg14 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  float val13 ;
  int ecode13 = 0 ;
  float val14 ;
  int ecode14 = 0 ;
  
  if ((nobjs < 14) || (nobjs > 14)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "FMInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "FMInstrument_playNote" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "FMInstrument_playNote" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "FMInstrument_playNote" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(swig_obj[11], &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "FMInstrument_playNote" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  ecode13 = SWIG_AsVal_float(swig_obj[12], &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "FMInstrument_playNote" "', argument " "13"" of type '" "float""'");
  } 
  arg13 = static_cast< float >(val13);
  ecode14 = SWIG_AsVal_float(swig_obj[13], &val14);
  if (!SWIG_IsOK(ecode14)) {
    SWIG_exception_fail(SWIG_ArgError(ecode14), "in method '" "FMInstrument_playNote" "', argument " "14"" of type '" "float""'");
  } 
  arg14 = static_cast< float >(val14);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  float arg13 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  float val13 ;
  int ecode13 = 0 ;
  
  if ((nobjs < 13) || (nobjs > 13)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "FMInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "FMInstrument_playNote" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "FMInstrument_playNote" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "FMInstrument_playNote" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(swig_obj[11], &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "FMInstrument_playNote" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  ecode13 = SWIG_AsVal_float(swig_obj[12], &val13);
  if (!SWIG_IsOK(ecode13)) {
    SWIG_exception_fail(SWIG_ArgError(ecode13), "in method '" "FMInstrument_playNote" "', argument " "13"" of type '" "float""'");
  } 
  arg13 = static_cast< float >(val13);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  float arg12 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  float val12 ;
  int ecode12 = 0 ;
  
  if ((nobjs < 12) || (nobjs > 12)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "FMInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "FMInstrument_playNote" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "FMInstrument_playNote" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "FMInstrument_playNote" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  ecode12 = SWIG_AsVal_float(swig_obj[11], &val12);
  if (!SWIG_IsOK(ecode12)) {
    SWIG_exception_fail(SWIG_ArgError(ecode12), "in method '" "FMInstrument_playNote" "', argument " "12"" of type '" "float""'");
  } 
  arg12 = static_cast< float >(val12);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  float arg11 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  float val11 ;
  int ecode11 = 0 ;
  
  if ((nobjs < 11) || (nobjs > 11)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "FMInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "FMInstrument_playNote" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "FMInstrument_playNote" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  ecode11 = SWIG_AsVal_float(swig_obj[10], &val11);
  if (!SWIG_IsOK(ecode11)) {
    SWIG_exception_fail(SWIG_ArgError(ecode11), "in method '" "FMInstrument_playNote" "', argument " "11"" of type '" "float""'");
  } 
  arg11 = static_cast< float >(val11);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  float arg10 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  float val10 ;
  int ecode10 = 0 ;
  
  if ((nobjs < 10) || (nobjs > 10)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "FMInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "FMInstrument_playNote" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  ecode10 = SWIG_AsVal_float(swig_obj[9], &val10);
  if (!SWIG_IsOK(ecode10)) {
    SWIG_exception_fail(SWIG_ArgError(ecode10), "in method '" "FMInstrument_playNote" "', argument " "10"" of type '" "float""'");
  } 
  arg10 = static_cast< float >(val10);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  
  if ((nobjs < 9) || (nobjs > 9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "FMInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "FMInstrument_playNote" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  
  if ((nobjs < 8) || (nobjs > 8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "FMInstrument_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  
  if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMInstrument_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMInstrument_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMInstrument_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->playNote(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_11(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->playNote(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_12(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->playNote(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_13(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->playNote(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote__SWIG_14(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_playNote" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  (arg1)->playNote();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_playNote(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[16] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FMInstrument_playNote", 0, 15, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_14(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_13(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_12(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_11(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_10(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 6) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_9(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 7) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_8(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 8) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_7(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 9) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_6(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 10) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 11) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 12) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 13) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 14) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 15) {
    PyObject *retobj = _wrap_FMInstrument_playNote__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FMInstrument_playNote'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FMInstrument::playNote(float,float,float,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float,float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float,float,float,float,float,float,float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float,float,float,float,float,float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float,float,float,float,float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float,float,float,float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float,float,float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float,float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float,float)\n"
    "    csl::FMInstrument::playNote(float,float)\n"
    "    csl::FMInstrument::playNote(float)\n"
    "    csl::FMInstrument::playNote()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FMInstrument_mAEnv_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  csl::ADSR *arg2 = (csl::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMInstrument_mAEnv_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_mAEnv_set" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMInstrument_mAEnv_set" "', argument " "2"" of type '" "csl::ADSR *""'"); 
  }
  arg2 = reinterpret_cast< csl::ADSR * >(argp2);
  if (arg1) (arg1)->mAEnv = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_mAEnv_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::ADSR *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_mAEnv_get" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  result = (csl::ADSR *)& ((arg1)->mAEnv);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ADSR, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_mIEnv_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  csl::ADSR *arg2 = (csl::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMInstrument_mIEnv_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_mIEnv_set" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMInstrument_mIEnv_set" "', argument " "2"" of type '" "csl::ADSR *""'"); 
  }
  arg2 = reinterpret_cast< csl::ADSR * >(argp2);
  if (arg1) (arg1)->mIEnv = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_mIEnv_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::ADSR *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_mIEnv_get" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  result = (csl::ADSR *)& ((arg1)->mIEnv);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ADSR, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_mCar_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  csl::WavetableOscillator *arg2 = (csl::WavetableOscillator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMInstrument_mCar_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_mCar_set" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMInstrument_mCar_set" "', argument " "2"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg2 = reinterpret_cast< csl::WavetableOscillator * >(argp2);
  if (arg1) (arg1)->mCar = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_mCar_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::WavetableOscillator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_mCar_get" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  result = (csl::WavetableOscillator *)& ((arg1)->mCar);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_mMod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  csl::WavetableOscillator *arg2 = (csl::WavetableOscillator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMInstrument_mMod_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_mMod_set" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMInstrument_mMod_set" "', argument " "2"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg2 = reinterpret_cast< csl::WavetableOscillator * >(argp2);
  if (arg1) (arg1)->mMod = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_mMod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::WavetableOscillator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_mMod_get" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  result = (csl::WavetableOscillator *)& ((arg1)->mMod);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_mPanner_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  csl::Panner *arg2 = (csl::Panner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMInstrument_mPanner_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_mPanner_set" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Panner, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMInstrument_mPanner_set" "', argument " "2"" of type '" "csl::Panner *""'"); 
  }
  arg2 = reinterpret_cast< csl::Panner * >(argp2);
  if (arg1) (arg1)->mPanner = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMInstrument_mPanner_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMInstrument *arg1 = (csl::FMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Panner *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMInstrument_mPanner_get" "', argument " "1"" of type '" "csl::FMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMInstrument * >(argp1);
  result = (csl::Panner *)& ((arg1)->mPanner);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FMInstrument_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__FMInstrument, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FMInstrument_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FancyFMInstrument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_FancyFMInstrument", 0, 0, 0)) SWIG_fail;
  result = (csl::FancyFMInstrument *)new csl::FancyFMInstrument();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FancyFMInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FancyFMInstrument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FancyFMInstrument" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mVibEnv_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  csl::Envelope *arg2 = (csl::Envelope *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FancyFMInstrument_mVibEnv_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mVibEnv_set" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Envelope, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FancyFMInstrument_mVibEnv_set" "', argument " "2"" of type '" "csl::Envelope *""'"); 
  }
  arg2 = reinterpret_cast< csl::Envelope * >(argp2);
  if (arg1) (arg1)->mVibEnv = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mVibEnv_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Envelope *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mVibEnv_get" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  result = (csl::Envelope *)& ((arg1)->mVibEnv);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Envelope, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mChiffEnv_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  csl::ADSR *arg2 = (csl::ADSR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FancyFMInstrument_mChiffEnv_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mChiffEnv_set" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__ADSR, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FancyFMInstrument_mChiffEnv_set" "', argument " "2"" of type '" "csl::ADSR *""'"); 
  }
  arg2 = reinterpret_cast< csl::ADSR * >(argp2);
  if (arg1) (arg1)->mChiffEnv = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mChiffEnv_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::ADSR *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mChiffEnv_get" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  result = (csl::ADSR *)& ((arg1)->mChiffEnv);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__ADSR, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mVibrato_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  csl::WavetableOscillator *arg2 = (csl::WavetableOscillator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FancyFMInstrument_mVibrato_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mVibrato_set" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FancyFMInstrument_mVibrato_set" "', argument " "2"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg2 = reinterpret_cast< csl::WavetableOscillator * >(argp2);
  if (arg1) (arg1)->mVibrato = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mVibrato_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::WavetableOscillator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mVibrato_get" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  result = (csl::WavetableOscillator *)& ((arg1)->mVibrato);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mChiff_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  csl::WhiteNoise *arg2 = (csl::WhiteNoise *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FancyFMInstrument_mChiff_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mChiff_set" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__WhiteNoise, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FancyFMInstrument_mChiff_set" "', argument " "2"" of type '" "csl::WhiteNoise *""'"); 
  }
  arg2 = reinterpret_cast< csl::WhiteNoise * >(argp2);
  if (arg1) (arg1)->mChiff = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mChiff_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::WhiteNoise *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mChiff_get" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  result = (csl::WhiteNoise *)& ((arg1)->mChiff);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WhiteNoise, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mChFilter_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  csl::Butter *arg2 = (csl::Butter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FancyFMInstrument_mChFilter_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mChFilter_set" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Butter, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FancyFMInstrument_mChFilter_set" "', argument " "2"" of type '" "csl::Butter *""'"); 
  }
  arg2 = reinterpret_cast< csl::Butter * >(argp2);
  if (arg1) (arg1)->mChFilter = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mChFilter_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Butter *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mChFilter_get" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  result = (csl::Butter *)& ((arg1)->mChFilter);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Butter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mReverb_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  csl::Freeverb *arg2 = (csl::Freeverb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FancyFMInstrument_mReverb_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mReverb_set" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FancyFMInstrument_mReverb_set" "', argument " "2"" of type '" "csl::Freeverb *""'"); 
  }
  arg2 = reinterpret_cast< csl::Freeverb * >(argp2);
  if (arg1) (arg1)->mReverb = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FancyFMInstrument_mReverb_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FancyFMInstrument *arg1 = (csl::FancyFMInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Freeverb *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FancyFMInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FancyFMInstrument_mReverb_get" "', argument " "1"" of type '" "csl::FancyFMInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::FancyFMInstrument * >(argp1);
  result = (csl::Freeverb *)& ((arg1)->mReverb);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Freeverb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FancyFMInstrument_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__FancyFMInstrument, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FancyFMInstrument_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FMBell__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::FMBell *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::FMBell *)new csl::FMBell();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FMBell, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FMBell__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  csl::FMBell *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_csl__FMBell,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_FMBell" "', argument " "1"" of type '" "csl::FMBell &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FMBell" "', argument " "1"" of type '" "csl::FMBell &""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  result = (csl::FMBell *)new csl::FMBell(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__FMBell, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FMBell(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_FMBell", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_FMBell__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_FMBell__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_FMBell'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FMBell::FMBell()\n"
    "    csl::FMBell::FMBell(csl::FMBell &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_FMBell(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FMBell" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_parseArgs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  int arg2 ;
  void **arg3 = (void **) 0 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMBell_parseArgs", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_parseArgs" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMBell_parseArgs" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FMBell_parseArgs" "', argument " "3"" of type '" "void **""'"); 
  }
  arg3 = reinterpret_cast< void ** >(argp3);
  res4 = SWIG_AsCharPtrAndSize(swig_obj[3], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "FMBell_parseArgs" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  (arg1)->parseArgs(arg2,arg3,(char const *)arg4);
  resultobj = SWIG_Py_Void();
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_playNote__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  float arg9 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  float val9 ;
  int ecode9 = 0 ;
  
  if ((nobjs < 9) || (nobjs > 9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_playNote" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMBell_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMBell_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMBell_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMBell_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMBell_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMBell_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "FMBell_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  ecode9 = SWIG_AsVal_float(swig_obj[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "FMBell_playNote" "', argument " "9"" of type '" "float""'");
  } 
  arg9 = static_cast< float >(val9);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_playNote__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  float arg8 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  float val8 ;
  int ecode8 = 0 ;
  
  if ((nobjs < 8) || (nobjs > 8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_playNote" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMBell_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMBell_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMBell_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMBell_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMBell_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMBell_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  ecode8 = SWIG_AsVal_float(swig_obj[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "FMBell_playNote" "', argument " "8"" of type '" "float""'");
  } 
  arg8 = static_cast< float >(val8);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_playNote__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  float arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  
  if ((nobjs < 7) || (nobjs > 7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_playNote" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMBell_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMBell_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMBell_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMBell_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMBell_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  ecode7 = SWIG_AsVal_float(swig_obj[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "FMBell_playNote" "', argument " "7"" of type '" "float""'");
  } 
  arg7 = static_cast< float >(val7);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_playNote__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_playNote" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMBell_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMBell_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMBell_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMBell_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "FMBell_playNote" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  (arg1)->playNote(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_playNote__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_playNote" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMBell_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMBell_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMBell_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "FMBell_playNote" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->playNote(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_playNote__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_playNote" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMBell_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMBell_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FMBell_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->playNote(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_playNote__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_playNote" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMBell_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "FMBell_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->playNote(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_playNote__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_playNote" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FMBell_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->playNote(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_playNote__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_playNote" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  (arg1)->playNote();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_playNote(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[10] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "FMBell_playNote", 0, 9, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_FMBell_playNote__SWIG_8(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_FMBell_playNote__SWIG_7(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_FMBell_playNote__SWIG_6(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_FMBell_playNote__SWIG_5(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 5) {
    PyObject *retobj = _wrap_FMBell_playNote__SWIG_4(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 6) {
    PyObject *retobj = _wrap_FMBell_playNote__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 7) {
    PyObject *retobj = _wrap_FMBell_playNote__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 8) {
    PyObject *retobj = _wrap_FMBell_playNote__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 9) {
    PyObject *retobj = _wrap_FMBell_playNote__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'FMBell_playNote'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::FMBell::playNote(float,float,float,float,float,float,float,float)\n"
    "    csl::FMBell::playNote(float,float,float,float,float,float,float)\n"
    "    csl::FMBell::playNote(float,float,float,float,float,float)\n"
    "    csl::FMBell::playNote(float,float,float,float,float)\n"
    "    csl::FMBell::playNote(float,float,float,float)\n"
    "    csl::FMBell::playNote(float,float,float)\n"
    "    csl::FMBell::playNote(float,float)\n"
    "    csl::FMBell::playNote(float)\n"
    "    csl::FMBell::playNote()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_FMBell_mAEnv_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  csl::LineSegment *arg2 = (csl::LineSegment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMBell_mAEnv_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mAEnv_set" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMBell_mAEnv_set" "', argument " "2"" of type '" "csl::LineSegment *""'"); 
  }
  arg2 = reinterpret_cast< csl::LineSegment * >(argp2);
  if (arg1) (arg1)->mAEnv = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mAEnv_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::LineSegment *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mAEnv_get" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  result = (csl::LineSegment *)& ((arg1)->mAEnv);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mIEnv_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  csl::LineSegment *arg2 = (csl::LineSegment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMBell_mIEnv_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mIEnv_set" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMBell_mIEnv_set" "', argument " "2"" of type '" "csl::LineSegment *""'"); 
  }
  arg2 = reinterpret_cast< csl::LineSegment * >(argp2);
  if (arg1) (arg1)->mIEnv = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mIEnv_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::LineSegment *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mIEnv_get" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  result = (csl::LineSegment *)& ((arg1)->mIEnv);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mGliss_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  csl::LineSegment *arg2 = (csl::LineSegment *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMBell_mGliss_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mGliss_set" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMBell_mGliss_set" "', argument " "2"" of type '" "csl::LineSegment *""'"); 
  }
  arg2 = reinterpret_cast< csl::LineSegment * >(argp2);
  if (arg1) (arg1)->mGliss = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mGliss_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::LineSegment *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mGliss_get" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  result = (csl::LineSegment *)& ((arg1)->mGliss);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__LineSegment, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mMod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  csl::WavetableOscillator *arg2 = (csl::WavetableOscillator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMBell_mMod_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mMod_set" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMBell_mMod_set" "', argument " "2"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg2 = reinterpret_cast< csl::WavetableOscillator * >(argp2);
  if (arg1) (arg1)->mMod = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mMod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::WavetableOscillator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mMod_get" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  result = (csl::WavetableOscillator *)& ((arg1)->mMod);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mCar_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  csl::WavetableOscillator *arg2 = (csl::WavetableOscillator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMBell_mCar_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mCar_set" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMBell_mCar_set" "', argument " "2"" of type '" "csl::WavetableOscillator *""'"); 
  }
  arg2 = reinterpret_cast< csl::WavetableOscillator * >(argp2);
  if (arg1) (arg1)->mCar = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mCar_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::WavetableOscillator *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mCar_get" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  result = (csl::WavetableOscillator *)& ((arg1)->mCar);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__WavetableOscillator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mPanner_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  csl::Panner *arg2 = (csl::Panner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMBell_mPanner_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mPanner_set" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Panner, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMBell_mPanner_set" "', argument " "2"" of type '" "csl::Panner *""'"); 
  }
  arg2 = reinterpret_cast< csl::Panner * >(argp2);
  if (arg1) (arg1)->mPanner = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mPanner_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Panner *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mPanner_get" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  result = (csl::Panner *)& ((arg1)->mPanner);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mDirect_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  csl::Mixer *arg2 = (csl::Mixer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "FMBell_mDirect_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mDirect_set" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Mixer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FMBell_mDirect_set" "', argument " "2"" of type '" "csl::Mixer *""'"); 
  }
  arg2 = reinterpret_cast< csl::Mixer * >(argp2);
  if (arg1) (arg1)->mDirect = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FMBell_mDirect_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::FMBell *arg1 = (csl::FMBell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Mixer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__FMBell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FMBell_mDirect_get" "', argument " "1"" of type '" "csl::FMBell *""'"); 
  }
  arg1 = reinterpret_cast< csl::FMBell * >(argp1);
  result = (csl::Mixer *) ((arg1)->mDirect);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Mixer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FMBell_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__FMBell, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FMBell_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_SndFileInstrument0__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  csl::SndFileInstrument0 *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_SndFileInstrument0" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (csl::SndFileInstrument0 *)new csl::SndFileInstrument0(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SndFileInstrument0, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SndFileInstrument0__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  std::string arg1 ;
  std::string arg2 ;
  csl::SndFileInstrument0 *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[0], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_SndFileInstrument0" "', argument " "1"" of type '" "std::string""'"); 
    }
    arg1 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(swig_obj[1], &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_SndFileInstrument0" "', argument " "2"" of type '" "std::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (csl::SndFileInstrument0 *)new csl::SndFileInstrument0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__SndFileInstrument0, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SndFileInstrument0(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_SndFileInstrument0", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_new_SndFileInstrument0__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_SndFileInstrument0__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_SndFileInstrument0'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SndFileInstrument0::SndFileInstrument0(std::string)\n"
    "    csl::SndFileInstrument0::SndFileInstrument0(std::string,std::string)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_SndFileInstrument0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SndFileInstrument0 *arg1 = (csl::SndFileInstrument0 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SndFileInstrument0, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SndFileInstrument0" "', argument " "1"" of type '" "csl::SndFileInstrument0 *""'"); 
  }
  arg1 = reinterpret_cast< csl::SndFileInstrument0 * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SndFileInstrument0_playNote__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SndFileInstrument0 *arg1 = (csl::SndFileInstrument0 *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SndFileInstrument0, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SndFileInstrument0_playNote" "', argument " "1"" of type '" "csl::SndFileInstrument0 *""'"); 
  }
  arg1 = reinterpret_cast< csl::SndFileInstrument0 * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SndFileInstrument0_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SndFileInstrument0_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->playNote(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SndFileInstrument0_playNote__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SndFileInstrument0 *arg1 = (csl::SndFileInstrument0 *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SndFileInstrument0, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SndFileInstrument0_playNote" "', argument " "1"" of type '" "csl::SndFileInstrument0 *""'"); 
  }
  arg1 = reinterpret_cast< csl::SndFileInstrument0 * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SndFileInstrument0_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->playNote(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SndFileInstrument0_playNote__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::SndFileInstrument0 *arg1 = (csl::SndFileInstrument0 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SndFileInstrument0, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SndFileInstrument0_playNote" "', argument " "1"" of type '" "csl::SndFileInstrument0 *""'"); 
  }
  arg1 = reinterpret_cast< csl::SndFileInstrument0 * >(argp1);
  (arg1)->playNote();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SndFileInstrument0_playNote(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "SndFileInstrument0_playNote", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_SndFileInstrument0_playNote__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_SndFileInstrument0_playNote__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_SndFileInstrument0_playNote__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'SndFileInstrument0_playNote'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::SndFileInstrument0::playNote(float,float)\n"
    "    csl::SndFileInstrument0::playNote(float)\n"
    "    csl::SndFileInstrument0::playNote()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SndFileInstrument0_playMIDI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SndFileInstrument0 *arg1 = (csl::SndFileInstrument0 *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SndFileInstrument0_playMIDI", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SndFileInstrument0, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SndFileInstrument0_playMIDI" "', argument " "1"" of type '" "csl::SndFileInstrument0 *""'"); 
  }
  arg1 = reinterpret_cast< csl::SndFileInstrument0 * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SndFileInstrument0_playMIDI" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SndFileInstrument0_playMIDI" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SndFileInstrument0_playMIDI" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  (arg1)->playMIDI(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SndFileInstrument0_mPlayer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SndFileInstrument0 *arg1 = (csl::SndFileInstrument0 *) 0 ;
  csl::BufferStream *arg2 = (csl::BufferStream *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SndFileInstrument0_mPlayer_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SndFileInstrument0, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SndFileInstrument0_mPlayer_set" "', argument " "1"" of type '" "csl::SndFileInstrument0 *""'"); 
  }
  arg1 = reinterpret_cast< csl::SndFileInstrument0 * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__BufferStream, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SndFileInstrument0_mPlayer_set" "', argument " "2"" of type '" "csl::BufferStream *""'"); 
  }
  arg2 = reinterpret_cast< csl::BufferStream * >(argp2);
  if (arg1) (arg1)->mPlayer = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SndFileInstrument0_mPlayer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SndFileInstrument0 *arg1 = (csl::SndFileInstrument0 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::BufferStream *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SndFileInstrument0, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SndFileInstrument0_mPlayer_get" "', argument " "1"" of type '" "csl::SndFileInstrument0 *""'"); 
  }
  arg1 = reinterpret_cast< csl::SndFileInstrument0 * >(argp1);
  result = (csl::BufferStream *)& ((arg1)->mPlayer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__BufferStream, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SndFileInstrument0_mPanner_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SndFileInstrument0 *arg1 = (csl::SndFileInstrument0 *) 0 ;
  csl::Panner *arg2 = (csl::Panner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "SndFileInstrument0_mPanner_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SndFileInstrument0, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SndFileInstrument0_mPanner_set" "', argument " "1"" of type '" "csl::SndFileInstrument0 *""'"); 
  }
  arg1 = reinterpret_cast< csl::SndFileInstrument0 * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Panner, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SndFileInstrument0_mPanner_set" "', argument " "2"" of type '" "csl::Panner *""'"); 
  }
  arg2 = reinterpret_cast< csl::Panner * >(argp2);
  if (arg1) (arg1)->mPanner = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SndFileInstrument0_mPanner_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::SndFileInstrument0 *arg1 = (csl::SndFileInstrument0 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Panner *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__SndFileInstrument0, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SndFileInstrument0_mPanner_get" "', argument " "1"" of type '" "csl::SndFileInstrument0 *""'"); 
  }
  arg1 = reinterpret_cast< csl::SndFileInstrument0 * >(argp1);
  result = (csl::Panner *)& ((arg1)->mPanner);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SndFileInstrument0_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__SndFileInstrument0, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SndFileInstrument0_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_StringInstrument__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  csl::StringInstrument *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StringInstrument" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_StringInstrument" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_StringInstrument" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (csl::StringInstrument *)new csl::StringInstrument(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__StringInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StringInstrument__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  csl::StringInstrument *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StringInstrument" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_StringInstrument" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (csl::StringInstrument *)new csl::StringInstrument(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__StringInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StringInstrument__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  csl::StringInstrument *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StringInstrument" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (csl::StringInstrument *)new csl::StringInstrument(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__StringInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StringInstrument__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  csl::StringInstrument *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (csl::StringInstrument *)new csl::StringInstrument();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__StringInstrument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StringInstrument(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_StringInstrument", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    PyObject *retobj = _wrap_new_StringInstrument__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 1) {
    PyObject *retobj = _wrap_new_StringInstrument__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_new_StringInstrument__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_new_StringInstrument__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_StringInstrument'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::StringInstrument::StringInstrument(float,float,float)\n"
    "    csl::StringInstrument::StringInstrument(float,float)\n"
    "    csl::StringInstrument::StringInstrument(float)\n"
    "    csl::StringInstrument::StringInstrument()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_StringInstrument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StringInstrument *arg1 = (csl::StringInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StringInstrument, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StringInstrument" "', argument " "1"" of type '" "csl::StringInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::StringInstrument * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringInstrument_playNote__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::StringInstrument *arg1 = (csl::StringInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StringInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringInstrument_playNote" "', argument " "1"" of type '" "csl::StringInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::StringInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StringInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "StringInstrument_playNote" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->playNote(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringInstrument_playNote__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::StringInstrument *arg1 = (csl::StringInstrument *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StringInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringInstrument_playNote" "', argument " "1"" of type '" "csl::StringInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::StringInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StringInstrument_playNote" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->playNote(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringInstrument_playNote__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::StringInstrument *arg1 = (csl::StringInstrument *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StringInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringInstrument_playNote" "', argument " "1"" of type '" "csl::StringInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::StringInstrument * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringInstrument_playNote" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->playNote(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringInstrument_playNote__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  csl::StringInstrument *arg1 = (csl::StringInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StringInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringInstrument_playNote" "', argument " "1"" of type '" "csl::StringInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::StringInstrument * >(argp1);
  (arg1)->playNote();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringInstrument_playNote(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "StringInstrument_playNote", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    PyObject *retobj = _wrap_StringInstrument_playNote__SWIG_3(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 2) {
    PyObject *retobj = _wrap_StringInstrument_playNote__SWIG_2(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 3) {
    PyObject *retobj = _wrap_StringInstrument_playNote__SWIG_1(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  if (argc == 4) {
    PyObject *retobj = _wrap_StringInstrument_playNote__SWIG_0(self, argc, argv);
    if (!SWIG_Python_TypeErrorOccurred(retobj)) return retobj;
    SWIG_fail;
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'StringInstrument_playNote'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    csl::StringInstrument::playNote(float,float,float)\n"
    "    csl::StringInstrument::playNote(float,float)\n"
    "    csl::StringInstrument::playNote(float)\n"
    "    csl::StringInstrument::playNote()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StringInstrument_mString_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StringInstrument *arg1 = (csl::StringInstrument *) 0 ;
  csl::KarplusString *arg2 = (csl::KarplusString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StringInstrument_mString_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StringInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringInstrument_mString_set" "', argument " "1"" of type '" "csl::StringInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::StringInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__KarplusString, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringInstrument_mString_set" "', argument " "2"" of type '" "csl::KarplusString *""'"); 
  }
  arg2 = reinterpret_cast< csl::KarplusString * >(argp2);
  if (arg1) (arg1)->mString = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringInstrument_mString_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StringInstrument *arg1 = (csl::StringInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::KarplusString *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StringInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringInstrument_mString_get" "', argument " "1"" of type '" "csl::StringInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::StringInstrument * >(argp1);
  result = (csl::KarplusString *)& ((arg1)->mString);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__KarplusString, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringInstrument_mPanner_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StringInstrument *arg1 = (csl::StringInstrument *) 0 ;
  csl::Panner *arg2 = (csl::Panner *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "StringInstrument_mPanner_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StringInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringInstrument_mPanner_set" "', argument " "1"" of type '" "csl::StringInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::StringInstrument * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_csl__Panner, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringInstrument_mPanner_set" "', argument " "2"" of type '" "csl::Panner *""'"); 
  }
  arg2 = reinterpret_cast< csl::Panner * >(argp2);
  if (arg1) (arg1)->mPanner = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringInstrument_mPanner_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  csl::StringInstrument *arg1 = (csl::StringInstrument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  csl::Panner *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_csl__StringInstrument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringInstrument_mPanner_get" "', argument " "1"" of type '" "csl::StringInstrument *""'"); 
  }
  arg1 = reinterpret_cast< csl::StringInstrument * >(argp1);
  result = (csl::Panner *)& ((arg1)->mPanner);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csl__Panner, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StringInstrument_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_csl__StringInstrument, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *StringInstrument_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

static PyMethodDef SwigMethods[] = {
	 { "SWIG_PyInstanceMethod_New", SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { "SWIG_PyStaticMethod_New", SWIG_PyStaticMethod_New, METH_O, NULL},
	 { "delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_O, NULL},
	 { "SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_O, NULL},
	 { "SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { "SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { "SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { "SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { "SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_O, NULL},
	 { "SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_O, NULL},
	 { "SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_O, NULL},
	 { "SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_O, NULL},
	 { "SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { "SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { "SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { "SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { "SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { "SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { "SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { "SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_O, NULL},
	 { "testStruct_name_set", _wrap_testStruct_name_set, METH_VARARGS, NULL},
	 { "testStruct_name_get", _wrap_testStruct_name_get, METH_O, NULL},
	 { "testStruct_fcn_set", _wrap_testStruct_fcn_set, METH_VARARGS, NULL},
	 { "testStruct_fcn_get", _wrap_testStruct_fcn_get, METH_O, NULL},
	 { "testStruct_comment_set", _wrap_testStruct_comment_set, METH_VARARGS, NULL},
	 { "testStruct_comment_get", _wrap_testStruct_comment_get, METH_O, NULL},
	 { "new_testStruct", _wrap_new_testStruct, METH_NOARGS, NULL},
	 { "delete_testStruct", _wrap_delete_testStruct, METH_O, NULL},
	 { "testStruct_swigregister", testStruct_swigregister, METH_O, NULL},
	 { "testStruct_swiginit", testStruct_swiginit, METH_VARARGS, NULL},
	 { "CException_mMessage_set", _wrap_CException_mMessage_set, METH_VARARGS, NULL},
	 { "CException_mMessage_get", _wrap_CException_mMessage_get, METH_O, NULL},
	 { "new_CException", _wrap_new_CException, METH_O, NULL},
	 { "delete_CException", _wrap_delete_CException, METH_O, NULL},
	 { "CException_what", _wrap_CException_what, METH_O, NULL},
	 { "CException_swigregister", CException_swigregister, METH_O, NULL},
	 { "CException_swiginit", CException_swiginit, METH_VARARGS, NULL},
	 { "new_MemoryError", _wrap_new_MemoryError, METH_O, NULL},
	 { "delete_MemoryError", _wrap_delete_MemoryError, METH_O, NULL},
	 { "MemoryError_swigregister", MemoryError_swigregister, METH_O, NULL},
	 { "MemoryError_swiginit", MemoryError_swiginit, METH_VARARGS, NULL},
	 { "new_ValueError", _wrap_new_ValueError, METH_O, NULL},
	 { "delete_ValueError", _wrap_delete_ValueError, METH_O, NULL},
	 { "ValueError_swigregister", ValueError_swigregister, METH_O, NULL},
	 { "ValueError_swiginit", ValueError_swiginit, METH_VARARGS, NULL},
	 { "new_TimingError", _wrap_new_TimingError, METH_O, NULL},
	 { "delete_TimingError", _wrap_delete_TimingError, METH_O, NULL},
	 { "TimingError_swigregister", TimingError_swigregister, METH_O, NULL},
	 { "TimingError_swiginit", TimingError_swiginit, METH_VARARGS, NULL},
	 { "new_RunTimeError", _wrap_new_RunTimeError, METH_O, NULL},
	 { "delete_RunTimeError", _wrap_delete_RunTimeError, METH_O, NULL},
	 { "RunTimeError_swigregister", RunTimeError_swigregister, METH_O, NULL},
	 { "RunTimeError_swiginit", RunTimeError_swiginit, METH_VARARGS, NULL},
	 { "new_LogicError", _wrap_new_LogicError, METH_O, NULL},
	 { "delete_LogicError", _wrap_delete_LogicError, METH_O, NULL},
	 { "LogicError_swigregister", LogicError_swigregister, METH_O, NULL},
	 { "LogicError_swiginit", LogicError_swiginit, METH_VARARGS, NULL},
	 { "new_DomainError", _wrap_new_DomainError, METH_O, NULL},
	 { "delete_DomainError", _wrap_delete_DomainError, METH_O, NULL},
	 { "DomainError_swigregister", DomainError_swigregister, METH_O, NULL},
	 { "DomainError_swiginit", DomainError_swiginit, METH_VARARGS, NULL},
	 { "new_OutOfRangeError", _wrap_new_OutOfRangeError, METH_O, NULL},
	 { "delete_OutOfRangeError", _wrap_delete_OutOfRangeError, METH_O, NULL},
	 { "OutOfRangeError_swigregister", OutOfRangeError_swigregister, METH_O, NULL},
	 { "OutOfRangeError_swiginit", OutOfRangeError_swiginit, METH_VARARGS, NULL},
	 { "new_IOError", _wrap_new_IOError, METH_O, NULL},
	 { "delete_IOError", _wrap_delete_IOError, METH_O, NULL},
	 { "IOError_swigregister", IOError_swigregister, METH_O, NULL},
	 { "IOError_swiginit", IOError_swiginit, METH_VARARGS, NULL},
	 { "new_DBError", _wrap_new_DBError, METH_O, NULL},
	 { "delete_DBError", _wrap_delete_DBError, METH_O, NULL},
	 { "DBError_swigregister", DBError_swigregister, METH_O, NULL},
	 { "DBError_swiginit", DBError_swiginit, METH_VARARGS, NULL},
	 { "new_ProcessingError", _wrap_new_ProcessingError, METH_O, NULL},
	 { "delete_ProcessingError", _wrap_delete_ProcessingError, METH_O, NULL},
	 { "ProcessingError_swigregister", ProcessingError_swigregister, METH_O, NULL},
	 { "ProcessingError_swiginit", ProcessingError_swiginit, METH_VARARGS, NULL},
	 { "CGestalt_frameRate", _wrap_CGestalt_frameRate, METH_NOARGS, NULL},
	 { "CGestalt_frameRateF", _wrap_CGestalt_frameRateF, METH_NOARGS, NULL},
	 { "CGestalt_setFrameRate", _wrap_CGestalt_setFrameRate, METH_O, NULL},
	 { "CGestalt_framePeriod", _wrap_CGestalt_framePeriod, METH_NOARGS, NULL},
	 { "CGestalt_numInChannels", _wrap_CGestalt_numInChannels, METH_NOARGS, NULL},
	 { "CGestalt_setNumInChannels", _wrap_CGestalt_setNumInChannels, METH_O, NULL},
	 { "CGestalt_numOutChannels", _wrap_CGestalt_numOutChannels, METH_NOARGS, NULL},
	 { "CGestalt_setNumOutChannels", _wrap_CGestalt_setNumOutChannels, METH_O, NULL},
	 { "CGestalt_blockSize", _wrap_CGestalt_blockSize, METH_NOARGS, NULL},
	 { "CGestalt_setBlockSize", _wrap_CGestalt_setBlockSize, METH_O, NULL},
	 { "CGestalt_maxBufferFrames", _wrap_CGestalt_maxBufferFrames, METH_NOARGS, NULL},
	 { "CGestalt_setMaxBufferFrames", _wrap_CGestalt_setMaxBufferFrames, METH_O, NULL},
	 { "CGestalt_maxSndFileFrames", _wrap_CGestalt_maxSndFileFrames, METH_NOARGS, NULL},
	 { "CGestalt_setMaxSndFileFrames", _wrap_CGestalt_setMaxSndFileFrames, METH_O, NULL},
	 { "CGestalt_sndFileFrames", _wrap_CGestalt_sndFileFrames, METH_NOARGS, NULL},
	 { "CGestalt_setSndFileFrames", _wrap_CGestalt_setSndFileFrames, METH_O, NULL},
	 { "CGestalt_verbosity", _wrap_CGestalt_verbosity, METH_NOARGS, NULL},
	 { "CGestalt_setVerbosity", _wrap_CGestalt_setVerbosity, METH_O, NULL},
	 { "CGestalt_loggingPeriod", _wrap_CGestalt_loggingPeriod, METH_NOARGS, NULL},
	 { "CGestalt_setLoggingPeriod", _wrap_CGestalt_setLoggingPeriod, METH_O, NULL},
	 { "CGestalt_outPort", _wrap_CGestalt_outPort, METH_NOARGS, NULL},
	 { "CGestalt_setOutPort", _wrap_CGestalt_setOutPort, METH_O, NULL},
	 { "CGestalt_dataFolder", _wrap_CGestalt_dataFolder, METH_NOARGS, NULL},
	 { "CGestalt_setDataFolder", _wrap_CGestalt_setDataFolder, METH_O, NULL},
	 { "CGestalt_stopNow", _wrap_CGestalt_stopNow, METH_NOARGS, NULL},
	 { "CGestalt_setStopNow", _wrap_CGestalt_setStopNow, METH_NOARGS, NULL},
	 { "CGestalt_clearStopNow", _wrap_CGestalt_clearStopNow, METH_NOARGS, NULL},
	 { "CGestalt_initFileText", _wrap_CGestalt_initFileText, METH_O, NULL},
	 { "CGestalt_storeToInitFile", _wrap_CGestalt_storeToInitFile, METH_VARARGS, NULL},
	 { "CGestalt_sndFileName", _wrap_CGestalt_sndFileName, METH_NOARGS, NULL},
	 { "CGestalt_screenWidth", _wrap_CGestalt_screenWidth, METH_NOARGS, NULL},
	 { "CGestalt_setScreenWidth", _wrap_CGestalt_setScreenWidth, METH_O, NULL},
	 { "CGestalt_screenHeight", _wrap_CGestalt_screenHeight, METH_NOARGS, NULL},
	 { "CGestalt_setScreenHeight", _wrap_CGestalt_setScreenHeight, METH_O, NULL},
	 { "new_CGestalt", _wrap_new_CGestalt, METH_NOARGS, NULL},
	 { "delete_CGestalt", _wrap_delete_CGestalt, METH_O, NULL},
	 { "CGestalt_swigregister", CGestalt_swigregister, METH_O, NULL},
	 { "CGestalt_swiginit", CGestalt_swiginit, METH_VARARGS, NULL},
	 { "logMsg", _wrap_logMsg, METH_VARARGS, NULL},
	 { "logMsgNN", _wrap_logMsgNN, METH_VARARGS, NULL},
	 { "logLine", _wrap_logLine, METH_NOARGS, NULL},
	 { "logURL", _wrap_logURL, METH_NOARGS, NULL},
	 { "vlogMsg", _wrap_vlogMsg, METH_VARARGS, NULL},
	 { "sleepUsec", _wrap_sleepUsec, METH_O, NULL},
	 { "sleepMsec", _wrap_sleepMsec, METH_O, NULL},
	 { "sleepSec", _wrap_sleepSec, METH_O, NULL},
	 { "timeNow", _wrap_timeNow, METH_NOARGS, NULL},
	 { "fTimeNow", _wrap_fTimeNow, METH_NOARGS, NULL},
	 { "fRandZ", _wrap_fRandZ, METH_NOARGS, NULL},
	 { "fRand1", _wrap_fRand1, METH_NOARGS, NULL},
	 { "fRandV", _wrap_fRandV, METH_O, NULL},
	 { "fRandM", _wrap_fRandM, METH_VARARGS, NULL},
	 { "fRandR", _wrap_fRandR, METH_VARARGS, NULL},
	 { "fRandB", _wrap_fRandB, METH_VARARGS, NULL},
	 { "iRandV", _wrap_iRandV, METH_O, NULL},
	 { "iRandM", _wrap_iRandM, METH_VARARGS, NULL},
	 { "iRandB", _wrap_iRandB, METH_VARARGS, NULL},
	 { "coin", _wrap_coin, METH_VARARGS, NULL},
	 { "keyToFreq", _wrap_keyToFreq, METH_O, NULL},
	 { "freqToKey", _wrap_freqToKey, METH_O, NULL},
	 { "new_Model", _wrap_new_Model, METH_NOARGS, NULL},
	 { "delete_Model", _wrap_delete_Model, METH_O, NULL},
	 { "Model_attachObserver", _wrap_Model_attachObserver, METH_VARARGS, NULL},
	 { "Model_detachObserver", _wrap_Model_detachObserver, METH_VARARGS, NULL},
	 { "Model_changed", _wrap_Model_changed, METH_VARARGS, NULL},
	 { "Model_evaluate", _wrap_Model_evaluate, METH_VARARGS, NULL},
	 { "Model_swigregister", Model_swigregister, METH_O, NULL},
	 { "Model_swiginit", Model_swiginit, METH_VARARGS, NULL},
	 { "delete_Observer", _wrap_delete_Observer, METH_O, NULL},
	 { "Observer_mPeriod_set", _wrap_Observer_mPeriod_set, METH_VARARGS, NULL},
	 { "Observer_mPeriod_get", _wrap_Observer_mPeriod_get, METH_O, NULL},
	 { "Observer_mKey_set", _wrap_Observer_mKey_set, METH_VARARGS, NULL},
	 { "Observer_mKey_get", _wrap_Observer_mKey_get, METH_O, NULL},
	 { "Observer_update", _wrap_Observer_update, METH_VARARGS, NULL},
	 { "Observer_swigregister", Observer_swigregister, METH_O, NULL},
	 { "new_Buffer", _wrap_new_Buffer, METH_VARARGS, NULL},
	 { "delete_Buffer", _wrap_delete_Buffer, METH_O, NULL},
	 { "Buffer_mNumChannels_set", _wrap_Buffer_mNumChannels_set, METH_VARARGS, NULL},
	 { "Buffer_mNumChannels_get", _wrap_Buffer_mNumChannels_get, METH_O, NULL},
	 { "Buffer_mNumFrames_set", _wrap_Buffer_mNumFrames_set, METH_VARARGS, NULL},
	 { "Buffer_mNumFrames_get", _wrap_Buffer_mNumFrames_get, METH_O, NULL},
	 { "Buffer_mNumAlloc_set", _wrap_Buffer_mNumAlloc_set, METH_VARARGS, NULL},
	 { "Buffer_mNumAlloc_get", _wrap_Buffer_mNumAlloc_get, METH_O, NULL},
	 { "Buffer_mMonoBufferByteSize_set", _wrap_Buffer_mMonoBufferByteSize_set, METH_VARARGS, NULL},
	 { "Buffer_mMonoBufferByteSize_get", _wrap_Buffer_mMonoBufferByteSize_get, METH_O, NULL},
	 { "Buffer_mSequence_set", _wrap_Buffer_mSequence_set, METH_VARARGS, NULL},
	 { "Buffer_mSequence_get", _wrap_Buffer_mSequence_get, METH_O, NULL},
	 { "Buffer_mTimestamp_set", _wrap_Buffer_mTimestamp_set, METH_VARARGS, NULL},
	 { "Buffer_mTimestamp_get", _wrap_Buffer_mTimestamp_get, METH_O, NULL},
	 { "Buffer_duration", _wrap_Buffer_duration, METH_O, NULL},
	 { "Buffer_mAreBuffersAllocated_set", _wrap_Buffer_mAreBuffersAllocated_set, METH_VARARGS, NULL},
	 { "Buffer_mAreBuffersAllocated_get", _wrap_Buffer_mAreBuffersAllocated_get, METH_O, NULL},
	 { "Buffer_mDidIAllocateBuffers_set", _wrap_Buffer_mDidIAllocateBuffers_set, METH_VARARGS, NULL},
	 { "Buffer_mDidIAllocateBuffers_get", _wrap_Buffer_mDidIAllocateBuffers_get, METH_O, NULL},
	 { "Buffer_mIsPopulated_set", _wrap_Buffer_mIsPopulated_set, METH_VARARGS, NULL},
	 { "Buffer_mIsPopulated_get", _wrap_Buffer_mIsPopulated_get, METH_O, NULL},
	 { "Buffer_mAreBuffersZero_set", _wrap_Buffer_mAreBuffersZero_set, METH_VARARGS, NULL},
	 { "Buffer_mAreBuffersZero_get", _wrap_Buffer_mAreBuffersZero_get, METH_O, NULL},
	 { "Buffer_mType_set", _wrap_Buffer_mType_set, METH_VARARGS, NULL},
	 { "Buffer_mType_get", _wrap_Buffer_mType_get, METH_O, NULL},
	 { "Buffer_setSize", _wrap_Buffer_setSize, METH_VARARGS, NULL},
	 { "Buffer_setSizeOnly", _wrap_Buffer_setSizeOnly, METH_VARARGS, NULL},
	 { "Buffer_checkBuffers", _wrap_Buffer_checkBuffers, METH_O, NULL},
	 { "Buffer_allocateBuffers", _wrap_Buffer_allocateBuffers, METH_O, NULL},
	 { "Buffer_freeBuffers", _wrap_Buffer_freeBuffers, METH_O, NULL},
	 { "Buffer_canStore", _wrap_Buffer_canStore, METH_VARARGS, NULL},
	 { "Buffer_zeroBuffers", _wrap_Buffer_zeroBuffers, METH_O, NULL},
	 { "Buffer_fillWith", _wrap_Buffer_fillWith, METH_VARARGS, NULL},
	 { "Buffer_scaleBy", _wrap_Buffer_scaleBy, METH_VARARGS, NULL},
	 { "Buffer_copyFrom", _wrap_Buffer_copyFrom, METH_VARARGS, NULL},
	 { "Buffer_copyHeaderFrom", _wrap_Buffer_copyHeaderFrom, METH_VARARGS, NULL},
	 { "Buffer_copySamplesFrom", _wrap_Buffer_copySamplesFrom, METH_VARARGS, NULL},
	 { "Buffer_copySamplesFromTo", _wrap_Buffer_copySamplesFromTo, METH_VARARGS, NULL},
	 { "Buffer_copyOnlySamplesFrom", _wrap_Buffer_copyOnlySamplesFrom, METH_VARARGS, NULL},
	 { "Buffer_readFromFile", _wrap_Buffer_readFromFile, METH_VARARGS, NULL},
	 { "Buffer_convertRate", _wrap_Buffer_convertRate, METH_VARARGS, NULL},
	 { "Buffer_samplePtrFor", _wrap_Buffer_samplePtrFor, METH_VARARGS, NULL},
	 { "Buffer_buffer", _wrap_Buffer_buffer, METH_VARARGS, NULL},
	 { "Buffer_buffers", _wrap_Buffer_buffers, METH_O, NULL},
	 { "Buffer_setBuffers", _wrap_Buffer_setBuffers, METH_VARARGS, NULL},
	 { "Buffer_setBuffer", _wrap_Buffer_setBuffer, METH_VARARGS, NULL},
	 { "Buffer_normalize", _wrap_Buffer_normalize, METH_VARARGS, NULL},
	 { "Buffer_removeDC", _wrap_Buffer_removeDC, METH_O, NULL},
	 { "Buffer_rms", _wrap_Buffer_rms, METH_VARARGS, NULL},
	 { "Buffer_avg", _wrap_Buffer_avg, METH_VARARGS, NULL},
	 { "Buffer_max", _wrap_Buffer_max, METH_VARARGS, NULL},
	 { "Buffer_min", _wrap_Buffer_min, METH_VARARGS, NULL},
	 { "Buffer_swigregister", Buffer_swigregister, METH_O, NULL},
	 { "Buffer_swiginit", Buffer_swiginit, METH_VARARGS, NULL},
	 { "new_BufferCMap", _wrap_new_BufferCMap, METH_VARARGS, NULL},
	 { "delete_BufferCMap", _wrap_delete_BufferCMap, METH_O, NULL},
	 { "BufferCMap_mRealNumChannels_set", _wrap_BufferCMap_mRealNumChannels_set, METH_VARARGS, NULL},
	 { "BufferCMap_mRealNumChannels_get", _wrap_BufferCMap_mRealNumChannels_get, METH_O, NULL},
	 { "BufferCMap_mChannelMap_set", _wrap_BufferCMap_mChannelMap_set, METH_VARARGS, NULL},
	 { "BufferCMap_mChannelMap_get", _wrap_BufferCMap_mChannelMap_get, METH_O, NULL},
	 { "BufferCMap_swigregister", BufferCMap_swigregister, METH_O, NULL},
	 { "BufferCMap_swiginit", BufferCMap_swiginit, METH_VARARGS, NULL},
	 { "new_UnitGenerator", _wrap_new_UnitGenerator, METH_VARARGS, NULL},
	 { "delete_UnitGenerator", _wrap_delete_UnitGenerator, METH_O, NULL},
	 { "UnitGenerator_frameRate", _wrap_UnitGenerator_frameRate, METH_O, NULL},
	 { "UnitGenerator_setFrameRate", _wrap_UnitGenerator_setFrameRate, METH_VARARGS, NULL},
	 { "UnitGenerator_numChannels", _wrap_UnitGenerator_numChannels, METH_O, NULL},
	 { "UnitGenerator_setNumChannels", _wrap_UnitGenerator_setNumChannels, METH_VARARGS, NULL},
	 { "UnitGenerator_copyPolicy", _wrap_UnitGenerator_copyPolicy, METH_O, NULL},
	 { "UnitGenerator_setCopyPolicy", _wrap_UnitGenerator_setCopyPolicy, METH_VARARGS, NULL},
	 { "UnitGenerator_nextBuffer", _wrap_UnitGenerator_nextBuffer, METH_VARARGS, NULL},
	 { "UnitGenerator_isFixed", _wrap_UnitGenerator_isFixed, METH_O, NULL},
	 { "UnitGenerator_isActive", _wrap_UnitGenerator_isActive, METH_O, NULL},
	 { "UnitGenerator_addOutput", _wrap_UnitGenerator_addOutput, METH_VARARGS, NULL},
	 { "UnitGenerator_removeOutput", _wrap_UnitGenerator_removeOutput, METH_VARARGS, NULL},
	 { "UnitGenerator_outputs", _wrap_UnitGenerator_outputs, METH_O, NULL},
	 { "UnitGenerator_numOutputs", _wrap_UnitGenerator_numOutputs, METH_O, NULL},
	 { "UnitGenerator_checkFanOut", _wrap_UnitGenerator_checkFanOut, METH_VARARGS, NULL},
	 { "UnitGenerator_handleFanOut", _wrap_UnitGenerator_handleFanOut, METH_VARARGS, NULL},
	 { "UnitGenerator_setValue", _wrap_UnitGenerator_setValue, METH_VARARGS, NULL},
	 { "UnitGenerator_value", _wrap_UnitGenerator_value, METH_O, NULL},
	 { "UnitGenerator_dump", _wrap_UnitGenerator_dump, METH_O, NULL},
	 { "UnitGenerator_trigger", _wrap_UnitGenerator_trigger, METH_O, NULL},
	 { "UnitGenerator_swigregister", UnitGenerator_swigregister, METH_O, NULL},
	 { "UnitGenerator_swiginit", UnitGenerator_swiginit, METH_VARARGS, NULL},
	 { "new_Port", _wrap_new_Port, METH_VARARGS, NULL},
	 { "delete_Port", _wrap_delete_Port, METH_O, NULL},
	 { "Port_mUGen_set", _wrap_Port_mUGen_set, METH_VARARGS, NULL},
	 { "Port_mUGen_get", _wrap_Port_mUGen_get, METH_O, NULL},
	 { "Port_mBuffer_set", _wrap_Port_mBuffer_set, METH_VARARGS, NULL},
	 { "Port_mBuffer_get", _wrap_Port_mBuffer_get, METH_O, NULL},
	 { "Port_mValue_set", _wrap_Port_mValue_set, METH_VARARGS, NULL},
	 { "Port_mValue_get", _wrap_Port_mValue_get, METH_O, NULL},
	 { "Port_mValuePtr_set", _wrap_Port_mValuePtr_set, METH_VARARGS, NULL},
	 { "Port_mValuePtr_get", _wrap_Port_mValuePtr_get, METH_O, NULL},
	 { "Port_mPtrIncrement_set", _wrap_Port_mPtrIncrement_set, METH_VARARGS, NULL},
	 { "Port_mPtrIncrement_get", _wrap_Port_mPtrIncrement_get, METH_O, NULL},
	 { "Port_mValueIndex_set", _wrap_Port_mValueIndex_set, METH_VARARGS, NULL},
	 { "Port_mValueIndex_get", _wrap_Port_mValueIndex_get, METH_O, NULL},
	 { "Port_checkBuffer", _wrap_Port_checkBuffer, METH_O, NULL},
	 { "Port_nextValue", _wrap_Port_nextValue, METH_O, NULL},
	 { "Port_nextFrame", _wrap_Port_nextFrame, METH_VARARGS, NULL},
	 { "Port_isReady", _wrap_Port_isReady, METH_O, NULL},
	 { "Port_resetPtr", _wrap_Port_resetPtr, METH_O, NULL},
	 { "Port_isActive", _wrap_Port_isActive, METH_O, NULL},
	 { "Port_dump", _wrap_Port_dump, METH_O, NULL},
	 { "Port_isFixed", _wrap_Port_isFixed, METH_O, NULL},
	 { "Port_trigger", _wrap_Port_trigger, METH_O, NULL},
	 { "Port_swigregister", Port_swigregister, METH_O, NULL},
	 { "Port_swiginit", Port_swiginit, METH_VARARGS, NULL},
	 { "new_Controllable", _wrap_new_Controllable, METH_NOARGS, NULL},
	 { "delete_Controllable", _wrap_delete_Controllable, METH_O, NULL},
	 { "Controllable_getPort", _wrap_Controllable_getPort, METH_VARARGS, NULL},
	 { "Controllable_swigregister", Controllable_swigregister, METH_O, NULL},
	 { "Controllable_swiginit", Controllable_swiginit, METH_VARARGS, NULL},
	 { "new_Scalable", _wrap_new_Scalable, METH_VARARGS, NULL},
	 { "delete_Scalable", _wrap_delete_Scalable, METH_O, NULL},
	 { "Scalable_setScale", _wrap_Scalable_setScale, METH_VARARGS, NULL},
	 { "Scalable_setOffset", _wrap_Scalable_setOffset, METH_VARARGS, NULL},
	 { "Scalable_trigger", _wrap_Scalable_trigger, METH_O, NULL},
	 { "Scalable_isScaled", _wrap_Scalable_isScaled, METH_O, NULL},
	 { "Scalable_swigregister", Scalable_swigregister, METH_O, NULL},
	 { "Scalable_swiginit", Scalable_swiginit, METH_VARARGS, NULL},
	 { "new_Effect", _wrap_new_Effect, METH_VARARGS, NULL},
	 { "Effect_setInput", _wrap_Effect_setInput, METH_VARARGS, NULL},
	 { "Effect_isInline_set", _wrap_Effect_isInline_set, METH_VARARGS, NULL},
	 { "Effect_isInline_get", _wrap_Effect_isInline_get, METH_O, NULL},
	 { "Effect_setInline", _wrap_Effect_setInline, METH_O, NULL},
	 { "delete_Effect", _wrap_delete_Effect, METH_O, NULL},
	 { "Effect_swigregister", Effect_swigregister, METH_O, NULL},
	 { "Effect_swiginit", Effect_swiginit, METH_VARARGS, NULL},
	 { "new_Phased", _wrap_new_Phased, METH_VARARGS, NULL},
	 { "delete_Phased", _wrap_delete_Phased, METH_O, NULL},
	 { "Phased_setFrequency", _wrap_Phased_setFrequency, METH_VARARGS, NULL},
	 { "Phased_setPhase", _wrap_Phased_setPhase, METH_VARARGS, NULL},
	 { "Phased_swigregister", Phased_swigregister, METH_O, NULL},
	 { "Phased_swiginit", Phased_swiginit, METH_VARARGS, NULL},
	 { "Writeable_writeBuffer", _wrap_Writeable_writeBuffer, METH_VARARGS, NULL},
	 { "delete_Writeable", _wrap_delete_Writeable, METH_O, NULL},
	 { "new_Writeable", _wrap_new_Writeable, METH_NOARGS, NULL},
	 { "Writeable_swigregister", Writeable_swigregister, METH_O, NULL},
	 { "Writeable_swiginit", Writeable_swiginit, METH_VARARGS, NULL},
	 { "delete_Seekable", _wrap_delete_Seekable, METH_O, NULL},
	 { "Seekable_mCurrentFrame_set", _wrap_Seekable_mCurrentFrame_set, METH_VARARGS, NULL},
	 { "Seekable_mCurrentFrame_get", _wrap_Seekable_mCurrentFrame_get, METH_O, NULL},
	 { "Seekable_mActualFrame_set", _wrap_Seekable_mActualFrame_set, METH_VARARGS, NULL},
	 { "Seekable_mActualFrame_get", _wrap_Seekable_mActualFrame_get, METH_O, NULL},
	 { "Seekable_seekTo", _wrap_Seekable_seekTo, METH_VARARGS, NULL},
	 { "Seekable_reset", _wrap_Seekable_reset, METH_O, NULL},
	 { "Seekable_duration", _wrap_Seekable_duration, METH_O, NULL},
	 { "Seekable_swigregister", Seekable_swigregister, METH_O, NULL},
	 { "new_Cacheable", _wrap_new_Cacheable, METH_VARARGS, NULL},
	 { "Cacheable_mUseCache_set", _wrap_Cacheable_mUseCache_set, METH_VARARGS, NULL},
	 { "Cacheable_mUseCache_get", _wrap_Cacheable_mUseCache_get, METH_O, NULL},
	 { "delete_Cacheable", _wrap_delete_Cacheable, METH_O, NULL},
	 { "Cacheable_swigregister", Cacheable_swigregister, METH_O, NULL},
	 { "Cacheable_swiginit", Cacheable_swiginit, METH_VARARGS, NULL},
	 { "new_FanOut", _wrap_new_FanOut, METH_VARARGS, NULL},
	 { "delete_FanOut", _wrap_delete_FanOut, METH_O, NULL},
	 { "FanOut_nextBuffer", _wrap_FanOut_nextBuffer, METH_VARARGS, NULL},
	 { "FanOut_swigregister", FanOut_swigregister, METH_O, NULL},
	 { "FanOut_swiginit", FanOut_swiginit, METH_VARARGS, NULL},
	 { "new_Splitter", _wrap_new_Splitter, METH_O, NULL},
	 { "delete_Splitter", _wrap_delete_Splitter, METH_O, NULL},
	 { "Splitter_nextBuffer", _wrap_Splitter_nextBuffer, METH_VARARGS, NULL},
	 { "Splitter_swigregister", Splitter_swigregister, METH_O, NULL},
	 { "Splitter_swiginit", Splitter_swiginit, METH_VARARGS, NULL},
	 { "new_Joiner", _wrap_new_Joiner, METH_VARARGS, NULL},
	 { "delete_Joiner", _wrap_delete_Joiner, METH_O, NULL},
	 { "Joiner_nextBuffer", _wrap_Joiner_nextBuffer, METH_VARARGS, NULL},
	 { "Joiner_addInput", _wrap_Joiner_addInput, METH_VARARGS, NULL},
	 { "Joiner_swigregister", Joiner_swigregister, METH_O, NULL},
	 { "Joiner_swiginit", Joiner_swiginit, METH_VARARGS, NULL},
	 { "Interleaver_interleave", _wrap_Interleaver_interleave, METH_VARARGS, NULL},
	 { "Interleaver_interleaveAndRemap", _wrap_Interleaver_interleaveAndRemap, METH_VARARGS, NULL},
	 { "Interleaver_deinterleave", _wrap_Interleaver_deinterleave, METH_VARARGS, NULL},
	 { "new_Interleaver", _wrap_new_Interleaver, METH_NOARGS, NULL},
	 { "delete_Interleaver", _wrap_delete_Interleaver, METH_O, NULL},
	 { "Interleaver_swigregister", Interleaver_swigregister, METH_O, NULL},
	 { "Interleaver_swiginit", Interleaver_swiginit, METH_VARARGS, NULL},
	 { "new_IO", _wrap_new_IO, METH_VARARGS, NULL},
	 { "delete_IO", _wrap_delete_IO, METH_O, NULL},
	 { "IO_open", _wrap_IO_open, METH_O, NULL},
	 { "IO_close", _wrap_IO_close, METH_O, NULL},
	 { "IO_start", _wrap_IO_start, METH_O, NULL},
	 { "IO_stop", _wrap_IO_stop, METH_O, NULL},
	 { "IO_test", _wrap_IO_test, METH_O, NULL},
	 { "IO_capture_on", _wrap_IO_capture_on, METH_VARARGS, NULL},
	 { "IO_capture_off", _wrap_IO_capture_off, METH_O, NULL},
	 { "IO_get_capture", _wrap_IO_get_capture, METH_O, NULL},
	 { "IO_setRoot", _wrap_IO_setRoot, METH_VARARGS, NULL},
	 { "IO_clearRoot", _wrap_IO_clearRoot, METH_O, NULL},
	 { "IO_pullInput", _wrap_IO_pullInput, METH_VARARGS, NULL},
	 { "IO_getInput", _wrap_IO_getInput, METH_VARARGS, NULL},
	 { "IO_getAndIncrementSequence", _wrap_IO_getAndIncrementSequence, METH_O, NULL},
	 { "IO_mGraph_set", _wrap_IO_mGraph_set, METH_VARARGS, NULL},
	 { "IO_mGraph_get", _wrap_IO_mGraph_get, METH_O, NULL},
	 { "IO_mInputBuffer_set", _wrap_IO_mInputBuffer_set, METH_VARARGS, NULL},
	 { "IO_mInputBuffer_get", _wrap_IO_mInputBuffer_get, METH_O, NULL},
	 { "IO_mOutputBuffer_set", _wrap_IO_mOutputBuffer_set, METH_VARARGS, NULL},
	 { "IO_mOutputBuffer_get", _wrap_IO_mOutputBuffer_get, METH_O, NULL},
	 { "IO_mCaptureBuffer_set", _wrap_IO_mCaptureBuffer_set, METH_VARARGS, NULL},
	 { "IO_mCaptureBuffer_get", _wrap_IO_mCaptureBuffer_get, METH_O, NULL},
	 { "IO_mInputPointer_set", _wrap_IO_mInputPointer_set, METH_VARARGS, NULL},
	 { "IO_mInputPointer_get", _wrap_IO_mInputPointer_get, METH_O, NULL},
	 { "IO_mChannelMap_set", _wrap_IO_mChannelMap_set, METH_VARARGS, NULL},
	 { "IO_mChannelMap_get", _wrap_IO_mChannelMap_get, METH_O, NULL},
	 { "IO_mNumFramesPlayed_set", _wrap_IO_mNumFramesPlayed_set, METH_VARARGS, NULL},
	 { "IO_mNumFramesPlayed_get", _wrap_IO_mNumFramesPlayed_get, METH_O, NULL},
	 { "IO_mSequence_set", _wrap_IO_mSequence_set, METH_VARARGS, NULL},
	 { "IO_mSequence_get", _wrap_IO_mSequence_get, METH_O, NULL},
	 { "IO_mLoggingPeriod_set", _wrap_IO_mLoggingPeriod_set, METH_VARARGS, NULL},
	 { "IO_mLoggingPeriod_get", _wrap_IO_mLoggingPeriod_get, METH_O, NULL},
	 { "IO_mNumInChannels_set", _wrap_IO_mNumInChannels_set, METH_VARARGS, NULL},
	 { "IO_mNumInChannels_get", _wrap_IO_mNumInChannels_get, METH_O, NULL},
	 { "IO_mNumOutChannels_set", _wrap_IO_mNumOutChannels_set, METH_VARARGS, NULL},
	 { "IO_mNumOutChannels_get", _wrap_IO_mNumOutChannels_get, METH_O, NULL},
	 { "IO_mNumRealInChannels_set", _wrap_IO_mNumRealInChannels_set, METH_VARARGS, NULL},
	 { "IO_mNumRealInChannels_get", _wrap_IO_mNumRealInChannels_get, METH_O, NULL},
	 { "IO_mNumRealOutChannels_set", _wrap_IO_mNumRealOutChannels_set, METH_VARARGS, NULL},
	 { "IO_mNumRealOutChannels_get", _wrap_IO_mNumRealOutChannels_get, METH_O, NULL},
	 { "IO_mStatus_set", _wrap_IO_mStatus_set, METH_VARARGS, NULL},
	 { "IO_mStatus_get", _wrap_IO_mStatus_get, METH_O, NULL},
	 { "IO_mInterleaved_set", _wrap_IO_mInterleaved_set, METH_VARARGS, NULL},
	 { "IO_mInterleaved_get", _wrap_IO_mInterleaved_get, METH_O, NULL},
	 { "IO_mOffset_set", _wrap_IO_mOffset_set, METH_VARARGS, NULL},
	 { "IO_mOffset_get", _wrap_IO_mOffset_get, METH_O, NULL},
	 { "IO_mThen_set", _wrap_IO_mThen_set, METH_VARARGS, NULL},
	 { "IO_mThen_get", _wrap_IO_mThen_get, METH_O, NULL},
	 { "IO_mNow_set", _wrap_IO_mNow_set, METH_VARARGS, NULL},
	 { "IO_mNow_get", _wrap_IO_mNow_get, METH_O, NULL},
	 { "IO_mTimeVals_set", _wrap_IO_mTimeVals_set, METH_VARARGS, NULL},
	 { "IO_mTimeVals_get", _wrap_IO_mTimeVals_get, METH_O, NULL},
	 { "IO_mThisSec_set", _wrap_IO_mThisSec_set, METH_VARARGS, NULL},
	 { "IO_mThisSec_get", _wrap_IO_mThisSec_get, METH_O, NULL},
	 { "IO_mTimeSum_set", _wrap_IO_mTimeSum_set, METH_VARARGS, NULL},
	 { "IO_mTimeSum_get", _wrap_IO_mTimeSum_get, METH_O, NULL},
	 { "IO_mUsage_set", _wrap_IO_mUsage_set, METH_VARARGS, NULL},
	 { "IO_mUsage_get", _wrap_IO_mUsage_get, METH_O, NULL},
	 { "IO_printTimeStatistics", _wrap_IO_printTimeStatistics, METH_VARARGS, NULL},
	 { "IO_swigregister", IO_swigregister, METH_O, NULL},
	 { "IO_swiginit", IO_swiginit, METH_VARARGS, NULL},
	 { "new_IODevice", _wrap_new_IODevice, METH_VARARGS, NULL},
	 { "IODevice_mName_set", _wrap_IODevice_mName_set, METH_VARARGS, NULL},
	 { "IODevice_mName_get", _wrap_IODevice_mName_get, METH_O, NULL},
	 { "IODevice_mIndex_set", _wrap_IODevice_mIndex_set, METH_VARARGS, NULL},
	 { "IODevice_mIndex_get", _wrap_IODevice_mIndex_get, METH_O, NULL},
	 { "IODevice_mMaxInputChannels_set", _wrap_IODevice_mMaxInputChannels_set, METH_VARARGS, NULL},
	 { "IODevice_mMaxInputChannels_get", _wrap_IODevice_mMaxInputChannels_get, METH_O, NULL},
	 { "IODevice_mMaxOutputChannels_set", _wrap_IODevice_mMaxOutputChannels_set, METH_VARARGS, NULL},
	 { "IODevice_mMaxOutputChannels_get", _wrap_IODevice_mMaxOutputChannels_get, METH_O, NULL},
	 { "IODevice_mFrameRate_set", _wrap_IODevice_mFrameRate_set, METH_VARARGS, NULL},
	 { "IODevice_mFrameRate_get", _wrap_IODevice_mFrameRate_get, METH_O, NULL},
	 { "IODevice_mFrameRates_set", _wrap_IODevice_mFrameRates_set, METH_VARARGS, NULL},
	 { "IODevice_mFrameRates_get", _wrap_IODevice_mFrameRates_get, METH_O, NULL},
	 { "IODevice_mIsDefaultIn_set", _wrap_IODevice_mIsDefaultIn_set, METH_VARARGS, NULL},
	 { "IODevice_mIsDefaultIn_get", _wrap_IODevice_mIsDefaultIn_get, METH_O, NULL},
	 { "IODevice_mIsDefaultOut_set", _wrap_IODevice_mIsDefaultOut_set, METH_VARARGS, NULL},
	 { "IODevice_mIsDefaultOut_get", _wrap_IODevice_mIsDefaultOut_get, METH_O, NULL},
	 { "IODevice_dump", _wrap_IODevice_dump, METH_O, NULL},
	 { "delete_IODevice", _wrap_delete_IODevice, METH_O, NULL},
	 { "IODevice_swigregister", IODevice_swigregister, METH_O, NULL},
	 { "IODevice_swiginit", IODevice_swiginit, METH_VARARGS, NULL},
	 { "new_RingBufferTap", _wrap_new_RingBufferTap, METH_VARARGS, NULL},
	 { "RingBufferTap_mLoopStartFrame_set", _wrap_RingBufferTap_mLoopStartFrame_set, METH_VARARGS, NULL},
	 { "RingBufferTap_mLoopStartFrame_get", _wrap_RingBufferTap_mLoopStartFrame_get, METH_O, NULL},
	 { "RingBufferTap_mLoopEndFrame_set", _wrap_RingBufferTap_mLoopEndFrame_set, METH_VARARGS, NULL},
	 { "RingBufferTap_mLoopEndFrame_get", _wrap_RingBufferTap_mLoopEndFrame_get, METH_O, NULL},
	 { "RingBufferTap_setOffset", _wrap_RingBufferTap_setOffset, METH_VARARGS, NULL},
	 { "RingBufferTap_setLoopStart", _wrap_RingBufferTap_setLoopStart, METH_VARARGS, NULL},
	 { "RingBufferTap_setLoopEnd", _wrap_RingBufferTap_setLoopEnd, METH_VARARGS, NULL},
	 { "RingBufferTap_setBuffer", _wrap_RingBufferTap_setBuffer, METH_VARARGS, NULL},
	 { "RingBufferTap_nextBuffer", _wrap_RingBufferTap_nextBuffer, METH_VARARGS, NULL},
	 { "RingBufferTap_destructiveNextBuffer", _wrap_RingBufferTap_destructiveNextBuffer, METH_VARARGS, NULL},
	 { "delete_RingBufferTap", _wrap_delete_RingBufferTap, METH_O, NULL},
	 { "RingBufferTap_swigregister", RingBufferTap_swigregister, METH_O, NULL},
	 { "RingBufferTap_swiginit", RingBufferTap_swiginit, METH_VARARGS, NULL},
	 { "new_RingBuffer", _wrap_new_RingBuffer, METH_VARARGS, NULL},
	 { "RingBuffer_mCurrentWriteFrame_set", _wrap_RingBuffer_mCurrentWriteFrame_set, METH_VARARGS, NULL},
	 { "RingBuffer_mCurrentWriteFrame_get", _wrap_RingBuffer_mCurrentWriteFrame_get, METH_O, NULL},
	 { "RingBuffer_mBuffer_set", _wrap_RingBuffer_mBuffer_set, METH_VARARGS, NULL},
	 { "RingBuffer_mBuffer_get", _wrap_RingBuffer_mBuffer_get, METH_O, NULL},
	 { "RingBuffer_mTap_set", _wrap_RingBuffer_mTap_set, METH_VARARGS, NULL},
	 { "RingBuffer_mTap_get", _wrap_RingBuffer_mTap_get, METH_O, NULL},
	 { "RingBuffer_seekTo", _wrap_RingBuffer_seekTo, METH_VARARGS, NULL},
	 { "RingBuffer_setLoopStart", _wrap_RingBuffer_setLoopStart, METH_VARARGS, NULL},
	 { "RingBuffer_setLoopEnd", _wrap_RingBuffer_setLoopEnd, METH_VARARGS, NULL},
	 { "RingBuffer_destructiveNextBuffer", _wrap_RingBuffer_destructiveNextBuffer, METH_VARARGS, NULL},
	 { "RingBuffer_writeBuffer", _wrap_RingBuffer_writeBuffer, METH_VARARGS, NULL},
	 { "RingBuffer_sumIntoBuffer", _wrap_RingBuffer_sumIntoBuffer, METH_VARARGS, NULL},
	 { "delete_RingBuffer", _wrap_delete_RingBuffer, METH_O, NULL},
	 { "RingBuffer_swigregister", RingBuffer_swigregister, METH_O, NULL},
	 { "RingBuffer_swiginit", RingBuffer_swiginit, METH_VARARGS, NULL},
	 { "new_BufferStream", _wrap_new_BufferStream, METH_VARARGS, NULL},
	 { "delete_BufferStream", _wrap_delete_BufferStream, METH_O, NULL},
	 { "BufferStream_setBuffer", _wrap_BufferStream_setBuffer, METH_VARARGS, NULL},
	 { "BufferStream_nextBuffer", _wrap_BufferStream_nextBuffer, METH_VARARGS, NULL},
	 { "BufferStream_writeBuffer", _wrap_BufferStream_writeBuffer, METH_VARARGS, NULL},
	 { "BufferStream_swigregister", BufferStream_swigregister, METH_O, NULL},
	 { "BufferStream_swiginit", BufferStream_swiginit, METH_VARARGS, NULL},
	 { "new_CVariable", _wrap_new_CVariable, METH_VARARGS, NULL},
	 { "CVariable_value", _wrap_CVariable_value, METH_O, NULL},
	 { "CVariable_setValue", _wrap_CVariable_setValue, METH_VARARGS, NULL},
	 { "delete_CVariable", _wrap_delete_CVariable, METH_O, NULL},
	 { "CVariable_swigregister", CVariable_swigregister, METH_O, NULL},
	 { "CVariable_swiginit", CVariable_swiginit, METH_VARARGS, NULL},
	 { "new_StaticVariable", _wrap_new_StaticVariable, METH_VARARGS, NULL},
	 { "StaticVariable_value", _wrap_StaticVariable_value, METH_O, NULL},
	 { "StaticVariable_setValue", _wrap_StaticVariable_setValue, METH_VARARGS, NULL},
	 { "delete_StaticVariable", _wrap_delete_StaticVariable, METH_O, NULL},
	 { "StaticVariable_swigregister", StaticVariable_swigregister, METH_O, NULL},
	 { "StaticVariable_swiginit", StaticVariable_swiginit, METH_VARARGS, NULL},
	 { "new_DynamicVariable", _wrap_new_DynamicVariable, METH_VARARGS, NULL},
	 { "DynamicVariable_setValue", _wrap_DynamicVariable_setValue, METH_VARARGS, NULL},
	 { "delete_DynamicVariable", _wrap_delete_DynamicVariable, METH_O, NULL},
	 { "DynamicVariable_swigregister", DynamicVariable_swigregister, METH_O, NULL},
	 { "DynamicVariable_swiginit", DynamicVariable_swiginit, METH_VARARGS, NULL},
	 { "new_BlockResizer", _wrap_new_BlockResizer, METH_VARARGS, NULL},
	 { "delete_BlockResizer", _wrap_delete_BlockResizer, METH_O, NULL},
	 { "BlockResizer_swigregister", BlockResizer_swigregister, METH_O, NULL},
	 { "BlockResizer_swiginit", BlockResizer_swiginit, METH_VARARGS, NULL},
	 { "CPoint_dimn_set", _wrap_CPoint_dimn_set, METH_VARARGS, NULL},
	 { "CPoint_dimn_get", _wrap_CPoint_dimn_get, METH_O, NULL},
	 { "CPoint_x_set", _wrap_CPoint_x_set, METH_VARARGS, NULL},
	 { "CPoint_x_get", _wrap_CPoint_x_get, METH_O, NULL},
	 { "CPoint_y_set", _wrap_CPoint_y_set, METH_VARARGS, NULL},
	 { "CPoint_y_get", _wrap_CPoint_y_get, METH_O, NULL},
	 { "CPoint_z_set", _wrap_CPoint_z_set, METH_VARARGS, NULL},
	 { "CPoint_z_get", _wrap_CPoint_z_get, METH_O, NULL},
	 { "new_CPoint", _wrap_new_CPoint, METH_VARARGS, NULL},
	 { "delete_CPoint", _wrap_delete_CPoint, METH_O, NULL},
	 { "CPoint_set", _wrap_CPoint_set, METH_VARARGS, NULL},
	 { "CPoint_setAzimuth", _wrap_CPoint_setAzimuth, METH_VARARGS, NULL},
	 { "CPoint_setElevation", _wrap_CPoint_setElevation, METH_VARARGS, NULL},
	 { "CPoint_setMagnitude", _wrap_CPoint_setMagnitude, METH_VARARGS, NULL},
	 { "CPoint_dim", _wrap_CPoint_dim, METH_O, NULL},
	 { "CPoint_setdim", _wrap_CPoint_setdim, METH_VARARGS, NULL},
	 { "CPoint___neg__", _wrap_CPoint___neg__, METH_O, NULL},
	 { "CPoint___invert__", _wrap_CPoint___invert__, METH_O, NULL},
	 { "CPoint___eq__", _wrap_CPoint___eq__, METH_VARARGS, NULL},
	 { "CPoint___ne__", _wrap_CPoint___ne__, METH_VARARGS, NULL},
	 { "CPoint___add__", _wrap_CPoint___add__, METH_VARARGS, NULL},
	 { "CPoint___sub__", _wrap_CPoint___sub__, METH_VARARGS, NULL},
	 { "CPoint___mul__", _wrap_CPoint___mul__, METH_VARARGS, NULL},
	 { "CPoint___or__", _wrap_CPoint___or__, METH_VARARGS, NULL},
	 { "CPoint___xor__", _wrap_CPoint___xor__, METH_VARARGS, NULL},
	 { "CPoint___imul__", _wrap_CPoint___imul__, METH_VARARGS, NULL},
	 { "CPoint___itruediv__", _wrap_CPoint___itruediv__, METH_VARARGS, NULL},
	 { "CPoint___iadd__", _wrap_CPoint___iadd__, METH_VARARGS, NULL},
	 { "CPoint___isub__", _wrap_CPoint___isub__, METH_VARARGS, NULL},
	 { "CPoint___ixor__", _wrap_CPoint___ixor__, METH_VARARGS, NULL},
	 { "CPoint_distance", _wrap_CPoint_distance, METH_VARARGS, NULL},
	 { "CPoint_distance2", _wrap_CPoint_distance2, METH_VARARGS, NULL},
	 { "CPoint___call__", _wrap_CPoint___call__, METH_VARARGS, NULL},
	 { "CPoint_len", _wrap_CPoint_len, METH_O, NULL},
	 { "CPoint_len2", _wrap_CPoint_len2, METH_O, NULL},
	 { "CPoint_r", _wrap_CPoint_r, METH_O, NULL},
	 { "CPoint_theta", _wrap_CPoint_theta, METH_O, NULL},
	 { "CPoint_phi", _wrap_CPoint_phi, METH_O, NULL},
	 { "CPoint_ele", _wrap_CPoint_ele, METH_O, NULL},
	 { "CPoint_rotateBy", _wrap_CPoint_rotateBy, METH_VARARGS, NULL},
	 { "CPoint_dump", _wrap_CPoint_dump, METH_O, NULL},
	 { "CPoint_dumpPol", _wrap_CPoint_dumpPol, METH_O, NULL},
	 { "CPoint_normalize", _wrap_CPoint_normalize, METH_O, NULL},
	 { "CPoint_swigregister", CPoint_swigregister, METH_O, NULL},
	 { "CPoint_swiginit", CPoint_swiginit, METH_VARARGS, NULL},
	 { "new_CThread", _wrap_new_CThread, METH_NOARGS, NULL},
	 { "delete_CThread", _wrap_delete_CThread, METH_O, NULL},
	 { "CThread_MakeThread", _wrap_CThread_MakeThread, METH_NOARGS, NULL},
	 { "CThread_createThread", _wrap_CThread_createThread, METH_VARARGS, NULL},
	 { "CThread_run", _wrap_CThread_run, METH_O, NULL},
	 { "CThread_swigregister", CThread_swigregister, METH_O, NULL},
	 { "CThread_swiginit", CThread_swiginit, METH_VARARGS, NULL},
	 { "new_Window", _wrap_new_Window, METH_VARARGS, NULL},
	 { "delete_Window", _wrap_delete_Window, METH_O, NULL},
	 { "Window_setSize", _wrap_Window_setSize, METH_VARARGS, NULL},
	 { "Window_setGain", _wrap_Window_setGain, METH_VARARGS, NULL},
	 { "Window_window", _wrap_Window_window, METH_O, NULL},
	 { "Window_swigregister", Window_swigregister, METH_O, NULL},
	 { "Window_swiginit", Window_swiginit, METH_VARARGS, NULL},
	 { "new_RectangularWindow", _wrap_new_RectangularWindow, METH_VARARGS, NULL},
	 { "delete_RectangularWindow", _wrap_delete_RectangularWindow, METH_O, NULL},
	 { "RectangularWindow_swigregister", RectangularWindow_swigregister, METH_O, NULL},
	 { "RectangularWindow_swiginit", RectangularWindow_swiginit, METH_VARARGS, NULL},
	 { "new_TriangularWindow", _wrap_new_TriangularWindow, METH_VARARGS, NULL},
	 { "delete_TriangularWindow", _wrap_delete_TriangularWindow, METH_O, NULL},
	 { "TriangularWindow_swigregister", TriangularWindow_swigregister, METH_O, NULL},
	 { "TriangularWindow_swiginit", TriangularWindow_swiginit, METH_VARARGS, NULL},
	 { "new_HammingWindow", _wrap_new_HammingWindow, METH_VARARGS, NULL},
	 { "delete_HammingWindow", _wrap_delete_HammingWindow, METH_O, NULL},
	 { "HammingWindow_swigregister", HammingWindow_swigregister, METH_O, NULL},
	 { "HammingWindow_swiginit", HammingWindow_swiginit, METH_VARARGS, NULL},
	 { "new_HannWindow", _wrap_new_HannWindow, METH_VARARGS, NULL},
	 { "delete_HannWindow", _wrap_delete_HannWindow, METH_O, NULL},
	 { "HannWindow_swigregister", HannWindow_swigregister, METH_O, NULL},
	 { "HannWindow_swiginit", HannWindow_swiginit, METH_VARARGS, NULL},
	 { "new_BlackmanWindow", _wrap_new_BlackmanWindow, METH_VARARGS, NULL},
	 { "delete_BlackmanWindow", _wrap_delete_BlackmanWindow, METH_O, NULL},
	 { "BlackmanWindow_swigregister", BlackmanWindow_swigregister, METH_O, NULL},
	 { "BlackmanWindow_swiginit", BlackmanWindow_swiginit, METH_VARARGS, NULL},
	 { "new_BlackmanHarrisWindow", _wrap_new_BlackmanHarrisWindow, METH_VARARGS, NULL},
	 { "delete_BlackmanHarrisWindow", _wrap_delete_BlackmanHarrisWindow, METH_O, NULL},
	 { "BlackmanHarrisWindow_swigregister", BlackmanHarrisWindow_swigregister, METH_O, NULL},
	 { "BlackmanHarrisWindow_swiginit", BlackmanHarrisWindow_swiginit, METH_VARARGS, NULL},
	 { "new_WelchWindow", _wrap_new_WelchWindow, METH_VARARGS, NULL},
	 { "delete_WelchWindow", _wrap_delete_WelchWindow, METH_O, NULL},
	 { "WelchWindow_swigregister", WelchWindow_swigregister, METH_O, NULL},
	 { "WelchWindow_swiginit", WelchWindow_swiginit, METH_VARARGS, NULL},
	 { "new_LineSegment", _wrap_new_LineSegment, METH_VARARGS, NULL},
	 { "LineSegment_start", _wrap_LineSegment_start, METH_O, NULL},
	 { "LineSegment_end", _wrap_LineSegment_end, METH_O, NULL},
	 { "LineSegment_duration", _wrap_LineSegment_duration, METH_O, NULL},
	 { "LineSegment_currentFrame", _wrap_LineSegment_currentFrame, METH_O, NULL},
	 { "LineSegment_setEnd", _wrap_LineSegment_setEnd, METH_VARARGS, NULL},
	 { "LineSegment_setStart", _wrap_LineSegment_setStart, METH_VARARGS, NULL},
	 { "LineSegment_setDuration", _wrap_LineSegment_setDuration, METH_VARARGS, NULL},
	 { "LineSegment_setMode", _wrap_LineSegment_setMode, METH_VARARGS, NULL},
	 { "LineSegment_nextBuffer", _wrap_LineSegment_nextBuffer, METH_VARARGS, NULL},
	 { "LineSegment_reset", _wrap_LineSegment_reset, METH_O, NULL},
	 { "delete_LineSegment", _wrap_delete_LineSegment, METH_O, NULL},
	 { "LineSegment_swigregister", LineSegment_swigregister, METH_O, NULL},
	 { "LineSegment_swiginit", LineSegment_swiginit, METH_VARARGS, NULL},
	 { "new_Envelope", _wrap_new_Envelope, METH_VARARGS, NULL},
	 { "delete_Envelope", _wrap_delete_Envelope, METH_O, NULL},
	 { "Envelope_addBreakpoint", _wrap_Envelope_addBreakpoint, METH_VARARGS, NULL},
	 { "Envelope_setMode", _wrap_Envelope_setMode, METH_VARARGS, NULL},
	 { "Envelope_setDuration", _wrap_Envelope_setDuration, METH_VARARGS, NULL},
	 { "Envelope_scaleTimes", _wrap_Envelope_scaleTimes, METH_VARARGS, NULL},
	 { "Envelope_scaleValues", _wrap_Envelope_scaleValues, METH_VARARGS, NULL},
	 { "Envelope_reset", _wrap_Envelope_reset, METH_O, NULL},
	 { "Envelope_swigregister", Envelope_swigregister, METH_O, NULL},
	 { "Envelope_swiginit", Envelope_swiginit, METH_VARARGS, NULL},
	 { "new_ADSR", _wrap_new_ADSR, METH_VARARGS, NULL},
	 { "delete_ADSR", _wrap_delete_ADSR, METH_O, NULL},
	 { "ADSR_setDelay", _wrap_ADSR_setDelay, METH_VARARGS, NULL},
	 { "ADSR_setAttack", _wrap_ADSR_setAttack, METH_VARARGS, NULL},
	 { "ADSR_setDecay", _wrap_ADSR_setDecay, METH_VARARGS, NULL},
	 { "ADSR_setSustain", _wrap_ADSR_setSustain, METH_VARARGS, NULL},
	 { "ADSR_setRelease", _wrap_ADSR_setRelease, METH_VARARGS, NULL},
	 { "ADSR_release", _wrap_ADSR_release, METH_O, NULL},
	 { "ADSR_swigregister", ADSR_swigregister, METH_O, NULL},
	 { "ADSR_swiginit", ADSR_swiginit, METH_VARARGS, NULL},
	 { "new_AR", _wrap_new_AR, METH_VARARGS, NULL},
	 { "delete_AR", _wrap_delete_AR, METH_O, NULL},
	 { "AR_setDelay", _wrap_AR_setDelay, METH_VARARGS, NULL},
	 { "AR_setAttack", _wrap_AR_setAttack, METH_VARARGS, NULL},
	 { "AR_setRelease", _wrap_AR_setRelease, METH_VARARGS, NULL},
	 { "AR_setAll", _wrap_AR_setAll, METH_VARARGS, NULL},
	 { "AR_release", _wrap_AR_release, METH_O, NULL},
	 { "AR_swigregister", AR_swigregister, METH_O, NULL},
	 { "AR_swiginit", AR_swiginit, METH_VARARGS, NULL},
	 { "new_Triangle", _wrap_new_Triangle, METH_VARARGS, NULL},
	 { "delete_Triangle", _wrap_delete_Triangle, METH_O, NULL},
	 { "Triangle_swigregister", Triangle_swigregister, METH_O, NULL},
	 { "Triangle_swiginit", Triangle_swiginit, METH_VARARGS, NULL},
	 { "new_RandEnvelope", _wrap_new_RandEnvelope, METH_VARARGS, NULL},
	 { "delete_RandEnvelope", _wrap_delete_RandEnvelope, METH_O, NULL},
	 { "RandEnvelope_setWalk", _wrap_RandEnvelope_setWalk, METH_VARARGS, NULL},
	 { "RandEnvelope_setAmplitude", _wrap_RandEnvelope_setAmplitude, METH_VARARGS, NULL},
	 { "RandEnvelope_setFrequency", _wrap_RandEnvelope_setFrequency, METH_VARARGS, NULL},
	 { "RandEnvelope_setStep", _wrap_RandEnvelope_setStep, METH_VARARGS, NULL},
	 { "RandEnvelope_setOffset", _wrap_RandEnvelope_setOffset, METH_VARARGS, NULL},
	 { "RandEnvelope_swigregister", RandEnvelope_swigregister, METH_O, NULL},
	 { "RandEnvelope_swiginit", RandEnvelope_swiginit, METH_VARARGS, NULL},
	 { "new_Oscillator", _wrap_new_Oscillator, METH_VARARGS, NULL},
	 { "delete_Oscillator", _wrap_delete_Oscillator, METH_O, NULL},
	 { "Oscillator_swigregister", Oscillator_swigregister, METH_O, NULL},
	 { "Oscillator_swiginit", Oscillator_swiginit, METH_VARARGS, NULL},
	 { "new_WavetableOscillator", _wrap_new_WavetableOscillator, METH_VARARGS, NULL},
	 { "delete_WavetableOscillator", _wrap_delete_WavetableOscillator, METH_O, NULL},
	 { "WavetableOscillator_setWaveform", _wrap_WavetableOscillator_setWaveform, METH_VARARGS, NULL},
	 { "WavetableOscillator_setInterpolate", _wrap_WavetableOscillator_setInterpolate, METH_VARARGS, NULL},
	 { "WavetableOscillator_mInterpolate_set", _wrap_WavetableOscillator_mInterpolate_set, METH_VARARGS, NULL},
	 { "WavetableOscillator_mInterpolate_get", _wrap_WavetableOscillator_mInterpolate_get, METH_O, NULL},
	 { "WavetableOscillator_mWavetable_set", _wrap_WavetableOscillator_mWavetable_set, METH_VARARGS, NULL},
	 { "WavetableOscillator_mWavetable_get", _wrap_WavetableOscillator_mWavetable_get, METH_O, NULL},
	 { "WavetableOscillator_swigregister", WavetableOscillator_swigregister, METH_O, NULL},
	 { "WavetableOscillator_swiginit", WavetableOscillator_swiginit, METH_VARARGS, NULL},
	 { "CompOrCacheOscillator_createCache", _wrap_CompOrCacheOscillator_createCache, METH_O, NULL},
	 { "delete_CompOrCacheOscillator", _wrap_delete_CompOrCacheOscillator, METH_O, NULL},
	 { "CompOrCacheOscillator_swigregister", CompOrCacheOscillator_swigregister, METH_O, NULL},
	 { "new_Sine", _wrap_new_Sine, METH_VARARGS, NULL},
	 { "delete_Sine", _wrap_delete_Sine, METH_O, NULL},
	 { "Sine_swigregister", Sine_swigregister, METH_O, NULL},
	 { "Sine_swiginit", Sine_swiginit, METH_VARARGS, NULL},
	 { "new_FSine", _wrap_new_FSine, METH_VARARGS, NULL},
	 { "delete_FSine", _wrap_delete_FSine, METH_O, NULL},
	 { "FSine_swigregister", FSine_swigregister, METH_O, NULL},
	 { "FSine_swiginit", FSine_swiginit, METH_VARARGS, NULL},
	 { "new_Sawtooth", _wrap_new_Sawtooth, METH_VARARGS, NULL},
	 { "delete_Sawtooth", _wrap_delete_Sawtooth, METH_O, NULL},
	 { "Sawtooth_swigregister", Sawtooth_swigregister, METH_O, NULL},
	 { "Sawtooth_swiginit", Sawtooth_swiginit, METH_VARARGS, NULL},
	 { "new_Square", _wrap_new_Square, METH_VARARGS, NULL},
	 { "delete_Square", _wrap_delete_Square, METH_O, NULL},
	 { "Square_swigregister", Square_swigregister, METH_O, NULL},
	 { "Square_swiginit", Square_swiginit, METH_VARARGS, NULL},
	 { "new_Impulse", _wrap_new_Impulse, METH_VARARGS, NULL},
	 { "delete_Impulse", _wrap_delete_Impulse, METH_O, NULL},
	 { "Impulse_swigregister", Impulse_swigregister, METH_O, NULL},
	 { "Impulse_swiginit", Impulse_swiginit, METH_VARARGS, NULL},
	 { "Partial_number_set", _wrap_Partial_number_set, METH_VARARGS, NULL},
	 { "Partial_number_get", _wrap_Partial_number_get, METH_O, NULL},
	 { "Partial_amplitude_set", _wrap_Partial_amplitude_set, METH_VARARGS, NULL},
	 { "Partial_amplitude_get", _wrap_Partial_amplitude_get, METH_O, NULL},
	 { "Partial_phase_set", _wrap_Partial_phase_set, METH_VARARGS, NULL},
	 { "Partial_phase_get", _wrap_Partial_phase_get, METH_O, NULL},
	 { "new_Partial", _wrap_new_Partial, METH_NOARGS, NULL},
	 { "delete_Partial", _wrap_delete_Partial, METH_O, NULL},
	 { "Partial_swigregister", Partial_swigregister, METH_O, NULL},
	 { "Partial_swiginit", Partial_swiginit, METH_VARARGS, NULL},
	 { "new_SumOfSines", _wrap_new_SumOfSines, METH_VARARGS, NULL},
	 { "SumOfSines_addPartials", _wrap_SumOfSines_addPartials, METH_VARARGS, NULL},
	 { "SumOfSines_addPartial", _wrap_SumOfSines_addPartial, METH_VARARGS, NULL},
	 { "SumOfSines_clearPartials", _wrap_SumOfSines_clearPartials, METH_O, NULL},
	 { "delete_SumOfSines", _wrap_delete_SumOfSines, METH_O, NULL},
	 { "SumOfSines_swigregister", SumOfSines_swigregister, METH_O, NULL},
	 { "SumOfSines_swiginit", SumOfSines_swiginit, METH_VARARGS, NULL},
	 { "Noise_generateRandomNumber", _wrap_Noise_generateRandomNumber, METH_O, NULL},
	 { "Noise_generateNormalizedRandomNumber", _wrap_Noise_generateNormalizedRandomNumber, METH_O, NULL},
	 { "Noise_setSeed", _wrap_Noise_setSeed, METH_VARARGS, NULL},
	 { "new_Noise", _wrap_new_Noise, METH_VARARGS, NULL},
	 { "delete_Noise", _wrap_delete_Noise, METH_O, NULL},
	 { "Noise_swigregister", Noise_swigregister, METH_O, NULL},
	 { "Noise_swiginit", Noise_swiginit, METH_VARARGS, NULL},
	 { "new_WhiteNoise", _wrap_new_WhiteNoise, METH_VARARGS, NULL},
	 { "delete_WhiteNoise", _wrap_delete_WhiteNoise, METH_O, NULL},
	 { "WhiteNoise_swigregister", WhiteNoise_swigregister, METH_O, NULL},
	 { "WhiteNoise_swiginit", WhiteNoise_swiginit, METH_VARARGS, NULL},
	 { "new_PinkNoise", _wrap_new_PinkNoise, METH_VARARGS, NULL},
	 { "delete_PinkNoise", _wrap_delete_PinkNoise, METH_O, NULL},
	 { "PinkNoise_nextPink", _wrap_PinkNoise_nextPink, METH_O, NULL},
	 { "PinkNoise_swigregister", PinkNoise_swigregister, METH_O, NULL},
	 { "PinkNoise_swiginit", PinkNoise_swiginit, METH_VARARGS, NULL},
	 { "new_FFT", _wrap_new_FFT, METH_VARARGS, NULL},
	 { "delete_FFT", _wrap_delete_FFT, METH_O, NULL},
	 { "FFT_fftSize", _wrap_FFT_fftSize, METH_O, NULL},
	 { "FFT_mOverwriteOutput_set", _wrap_FFT_mOverwriteOutput_set, METH_VARARGS, NULL},
	 { "FFT_mOverwriteOutput_get", _wrap_FFT_mOverwriteOutput_get, METH_O, NULL},
	 { "FFT_swigregister", FFT_swigregister, METH_O, NULL},
	 { "FFT_swiginit", FFT_swiginit, METH_VARARGS, NULL},
	 { "new_IFFT", _wrap_new_IFFT, METH_VARARGS, NULL},
	 { "delete_IFFT", _wrap_delete_IFFT, METH_O, NULL},
	 { "IFFT_fftSize", _wrap_IFFT_fftSize, METH_O, NULL},
	 { "IFFT_binValue", _wrap_IFFT_binValue, METH_VARARGS, NULL},
	 { "IFFT_binValueMagPhase", _wrap_IFFT_binValueMagPhase, METH_VARARGS, NULL},
	 { "IFFT_setBin", _wrap_IFFT_setBin, METH_VARARGS, NULL},
	 { "IFFT_setBins", _wrap_IFFT_setBins, METH_VARARGS, NULL},
	 { "IFFT_setBinMagPhase", _wrap_IFFT_setBinMagPhase, METH_VARARGS, NULL},
	 { "IFFT_setBinsMagPhase", _wrap_IFFT_setBinsMagPhase, METH_VARARGS, NULL},
	 { "IFFT_swigregister", IFFT_swigregister, METH_O, NULL},
	 { "IFFT_swiginit", IFFT_swiginit, METH_VARARGS, NULL},
	 { "new_KarplusString", _wrap_new_KarplusString, METH_VARARGS, NULL},
	 { "KarplusString_setFrequency", _wrap_KarplusString_setFrequency, METH_VARARGS, NULL},
	 { "KarplusString_mDelayLine_set", _wrap_KarplusString_mDelayLine_set, METH_VARARGS, NULL},
	 { "KarplusString_mDelayLine_get", _wrap_KarplusString_mDelayLine_get, METH_O, NULL},
	 { "delete_KarplusString", _wrap_delete_KarplusString, METH_O, NULL},
	 { "KarplusString_swigregister", KarplusString_swigregister, METH_O, NULL},
	 { "KarplusString_swiginit", KarplusString_swiginit, METH_VARARGS, NULL},
	 { "SHARCSpectrum__note_name_set", _wrap_SHARCSpectrum__note_name_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__note_name_get", _wrap_SHARCSpectrum__note_name_get, METH_O, NULL},
	 { "SHARCSpectrum__midi_key_set", _wrap_SHARCSpectrum__midi_key_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__midi_key_get", _wrap_SHARCSpectrum__midi_key_get, METH_O, NULL},
	 { "SHARCSpectrum__nom_pitch_set", _wrap_SHARCSpectrum__nom_pitch_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__nom_pitch_get", _wrap_SHARCSpectrum__nom_pitch_get, METH_O, NULL},
	 { "SHARCSpectrum__actual_pitch_set", _wrap_SHARCSpectrum__actual_pitch_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__actual_pitch_get", _wrap_SHARCSpectrum__actual_pitch_get, METH_O, NULL},
	 { "SHARCSpectrum__max_amp_set", _wrap_SHARCSpectrum__max_amp_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__max_amp_get", _wrap_SHARCSpectrum__max_amp_get, METH_O, NULL},
	 { "SHARCSpectrum__num_partials_set", _wrap_SHARCSpectrum__num_partials_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__num_partials_get", _wrap_SHARCSpectrum__num_partials_get, METH_O, NULL},
	 { "SHARCSpectrum__partials_set", _wrap_SHARCSpectrum__partials_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__partials_get", _wrap_SHARCSpectrum__partials_get, METH_O, NULL},
	 { "new_SHARCSpectrum", _wrap_new_SHARCSpectrum, METH_VARARGS, NULL},
	 { "delete_SHARCSpectrum", _wrap_delete_SHARCSpectrum, METH_O, NULL},
	 { "SHARCSpectrum_read_from_file", _wrap_SHARCSpectrum_read_from_file, METH_VARARGS, NULL},
	 { "SHARCSpectrum_count_partials", _wrap_SHARCSpectrum_count_partials, METH_O, NULL},
	 { "SHARCSpectrum_dump_example", _wrap_SHARCSpectrum_dump_example, METH_O, NULL},
	 { "SHARCSpectrum_swigregister", SHARCSpectrum_swigregister, METH_O, NULL},
	 { "SHARCSpectrum_swiginit", SHARCSpectrum_swiginit, METH_VARARGS, NULL},
	 { "SHARCInstrument__name_set", _wrap_SHARCInstrument__name_set, METH_VARARGS, NULL},
	 { "SHARCInstrument__name_get", _wrap_SHARCInstrument__name_get, METH_O, NULL},
	 { "SHARCInstrument__num_spectra_set", _wrap_SHARCInstrument__num_spectra_set, METH_VARARGS, NULL},
	 { "SHARCInstrument__num_spectra_get", _wrap_SHARCInstrument__num_spectra_get, METH_O, NULL},
	 { "SHARCInstrument__spectra_set", _wrap_SHARCInstrument__spectra_set, METH_VARARGS, NULL},
	 { "SHARCInstrument__spectra_get", _wrap_SHARCInstrument__spectra_get, METH_O, NULL},
	 { "new_SHARCInstrument", _wrap_new_SHARCInstrument, METH_VARARGS, NULL},
	 { "delete_SHARCInstrument", _wrap_delete_SHARCInstrument, METH_O, NULL},
	 { "SHARCInstrument_spectrum_names", _wrap_SHARCInstrument_spectrum_names, METH_O, NULL},
	 { "SHARCInstrument_spectrum_keys", _wrap_SHARCInstrument_spectrum_keys, METH_O, NULL},
	 { "SHARCInstrument_spectrum_frequencies", _wrap_SHARCInstrument_spectrum_frequencies, METH_O, NULL},
	 { "SHARCInstrument_spectrum_named", _wrap_SHARCInstrument_spectrum_named, METH_VARARGS, NULL},
	 { "SHARCInstrument_spectrum_with_key", _wrap_SHARCInstrument_spectrum_with_key, METH_VARARGS, NULL},
	 { "SHARCInstrument_spectrum_with_frequency", _wrap_SHARCInstrument_spectrum_with_frequency, METH_VARARGS, NULL},
	 { "SHARCInstrument_count_spectra", _wrap_SHARCInstrument_count_spectra, METH_O, NULL},
	 { "SHARCInstrument_count_partials", _wrap_SHARCInstrument_count_partials, METH_O, NULL},
	 { "SHARCInstrument_dump_example", _wrap_SHARCInstrument_dump_example, METH_O, NULL},
	 { "SHARCInstrument_swigregister", SHARCInstrument_swigregister, METH_O, NULL},
	 { "SHARCInstrument_swiginit", SHARCInstrument_swiginit, METH_VARARGS, NULL},
	 { "SHARCLibrary__num_instruments_set", _wrap_SHARCLibrary__num_instruments_set, METH_VARARGS, NULL},
	 { "SHARCLibrary__num_instruments_get", _wrap_SHARCLibrary__num_instruments_get, METH_O, NULL},
	 { "SHARCLibrary__instruments_set", _wrap_SHARCLibrary__instruments_set, METH_VARARGS, NULL},
	 { "SHARCLibrary__instruments_get", _wrap_SHARCLibrary__instruments_get, METH_O, NULL},
	 { "new_SHARCLibrary", _wrap_new_SHARCLibrary, METH_VARARGS, NULL},
	 { "delete_SHARCLibrary", _wrap_delete_SHARCLibrary, METH_O, NULL},
	 { "SHARCLibrary_instrument_names", _wrap_SHARCLibrary_instrument_names, METH_O, NULL},
	 { "SHARCLibrary_instrument_named", _wrap_SHARCLibrary_instrument_named, METH_VARARGS, NULL},
	 { "SHARCLibrary_spectrum_named", _wrap_SHARCLibrary_spectrum_named, METH_VARARGS, NULL},
	 { "SHARCLibrary_dump", _wrap_SHARCLibrary_dump, METH_O, NULL},
	 { "SHARCLibrary_dump_stats", _wrap_SHARCLibrary_dump_stats, METH_O, NULL},
	 { "SHARCLibrary_dump_example", _wrap_SHARCLibrary_dump_example, METH_O, NULL},
	 { "SHARCLibrary_sSHARCLib_get", _wrap_SHARCLibrary_sSHARCLib_get, METH_VARARGS, NULL},
	 { "SHARCLibrary_sSHARCLib_set", _wrap_SHARCLibrary_sSHARCLib_set, METH_O, NULL},
	 { "SHARCLibrary_loadDefault", _wrap_SHARCLibrary_loadDefault, METH_NOARGS, NULL},
	 { "SHARCLibrary_library", _wrap_SHARCLibrary_library, METH_NOARGS, NULL},
	 { "SHARCLibrary_instrument", _wrap_SHARCLibrary_instrument, METH_VARARGS, NULL},
	 { "SHARCLibrary_spectrum", _wrap_SHARCLibrary_spectrum, METH_VARARGS, NULL},
	 { "SHARCLibrary_swigregister", SHARCLibrary_swigregister, METH_O, NULL},
	 { "SHARCLibrary_swiginit", SHARCLibrary_swiginit, METH_VARARGS, NULL},
	 { "delete_BinaryOp", _wrap_delete_BinaryOp, METH_O, NULL},
	 { "BinaryOp_setOperand", _wrap_BinaryOp_setOperand, METH_VARARGS, NULL},
	 { "BinaryOp_swigregister", BinaryOp_swigregister, METH_O, NULL},
	 { "new_AddOp", _wrap_new_AddOp, METH_VARARGS, NULL},
	 { "delete_AddOp", _wrap_delete_AddOp, METH_O, NULL},
	 { "AddOp_swigregister", AddOp_swigregister, METH_O, NULL},
	 { "AddOp_swiginit", AddOp_swiginit, METH_VARARGS, NULL},
	 { "new_MulOp", _wrap_new_MulOp, METH_VARARGS, NULL},
	 { "MulOp_setScale", _wrap_MulOp_setScale, METH_O, NULL},
	 { "delete_MulOp", _wrap_delete_MulOp, METH_O, NULL},
	 { "MulOp_swigregister", MulOp_swigregister, METH_O, NULL},
	 { "MulOp_swiginit", MulOp_swiginit, METH_VARARGS, NULL},
	 { "new_InOut", _wrap_new_InOut, METH_VARARGS, NULL},
	 { "delete_InOut", _wrap_delete_InOut, METH_O, NULL},
	 { "InOut_setInChan", _wrap_InOut_setInChan, METH_VARARGS, NULL},
	 { "InOut_setOutChan", _wrap_InOut_setOutChan, METH_VARARGS, NULL},
	 { "InOut_getInChan", _wrap_InOut_getInChan, METH_O, NULL},
	 { "InOut_getOutChan", _wrap_InOut_getOutChan, METH_O, NULL},
	 { "InOut_setChanMap", _wrap_InOut_setChanMap, METH_VARARGS, NULL},
	 { "InOut_setChanGains", _wrap_InOut_setChanGains, METH_VARARGS, NULL},
	 { "InOut_setGain", _wrap_InOut_setGain, METH_VARARGS, NULL},
	 { "InOut_swigregister", InOut_swigregister, METH_O, NULL},
	 { "InOut_swiginit", InOut_swiginit, METH_VARARGS, NULL},
	 { "new_FrequencyAmount", _wrap_new_FrequencyAmount, METH_NOARGS, NULL},
	 { "delete_FrequencyAmount", _wrap_delete_FrequencyAmount, METH_O, NULL},
	 { "FrequencyAmount_setFrequency", _wrap_FrequencyAmount_setFrequency, METH_VARARGS, NULL},
	 { "FrequencyAmount_getFrequency", _wrap_FrequencyAmount_getFrequency, METH_O, NULL},
	 { "FrequencyAmount_setAmount", _wrap_FrequencyAmount_setAmount, METH_VARARGS, NULL},
	 { "FrequencyAmount_swigregister", FrequencyAmount_swigregister, METH_O, NULL},
	 { "FrequencyAmount_swiginit", FrequencyAmount_swiginit, METH_VARARGS, NULL},
	 { "new_Filter", _wrap_new_Filter, METH_VARARGS, NULL},
	 { "delete_Filter", _wrap_delete_Filter, METH_O, NULL},
	 { "Filter_clear", _wrap_Filter_clear, METH_O, NULL},
	 { "Filter_setupCoeffs", _wrap_Filter_setupCoeffs, METH_VARARGS, NULL},
	 { "Filter_swigregister", Filter_swigregister, METH_O, NULL},
	 { "Filter_swiginit", Filter_swiginit, METH_VARARGS, NULL},
	 { "new_Butter", _wrap_new_Butter, METH_VARARGS, NULL},
	 { "delete_Butter", _wrap_delete_Butter, METH_O, NULL},
	 { "Butter_swigregister", Butter_swigregister, METH_O, NULL},
	 { "Butter_swiginit", Butter_swiginit, METH_VARARGS, NULL},
	 { "new_Biquad", _wrap_new_Biquad, METH_VARARGS, NULL},
	 { "Biquad_setQ", _wrap_Biquad_setQ, METH_VARARGS, NULL},
	 { "Biquad_setFrq", _wrap_Biquad_setFrq, METH_VARARGS, NULL},
	 { "Biquad_incrFrq", _wrap_Biquad_incrFrq, METH_VARARGS, NULL},
	 { "Biquad_setBoost", _wrap_Biquad_setBoost, METH_VARARGS, NULL},
	 { "Biquad_incrBoost", _wrap_Biquad_incrBoost, METH_VARARGS, NULL},
	 { "delete_Biquad", _wrap_delete_Biquad, METH_O, NULL},
	 { "Biquad_swigregister", Biquad_swigregister, METH_O, NULL},
	 { "Biquad_swiginit", Biquad_swiginit, METH_VARARGS, NULL},
	 { "new_Formant", _wrap_new_Formant, METH_VARARGS, NULL},
	 { "delete_Formant", _wrap_delete_Formant, METH_O, NULL},
	 { "Formant_setNormalize", _wrap_Formant_setNormalize, METH_VARARGS, NULL},
	 { "Formant_swigregister", Formant_swigregister, METH_O, NULL},
	 { "Formant_swiginit", Formant_swiginit, METH_VARARGS, NULL},
	 { "new_Notch", _wrap_new_Notch, METH_VARARGS, NULL},
	 { "delete_Notch", _wrap_delete_Notch, METH_O, NULL},
	 { "Notch_swigregister", Notch_swigregister, METH_O, NULL},
	 { "Notch_swiginit", Notch_swiginit, METH_VARARGS, NULL},
	 { "new_Allpass", _wrap_new_Allpass, METH_VARARGS, NULL},
	 { "delete_Allpass", _wrap_delete_Allpass, METH_O, NULL},
	 { "Allpass_swigregister", Allpass_swigregister, METH_O, NULL},
	 { "Allpass_swiginit", Allpass_swiginit, METH_VARARGS, NULL},
	 { "new_Moog", _wrap_new_Moog, METH_VARARGS, NULL},
	 { "delete_Moog", _wrap_delete_Moog, METH_O, NULL},
	 { "Moog_swigregister", Moog_swigregister, METH_O, NULL},
	 { "Moog_swiginit", Moog_swiginit, METH_VARARGS, NULL},
	 { "new_DelayLine", _wrap_new_DelayLine, METH_O, NULL},
	 { "DelayLine_delayTime", _wrap_DelayLine_delayTime, METH_O, NULL},
	 { "DelayLine_delayLength", _wrap_DelayLine_delayLength, METH_O, NULL},
	 { "DelayLine_setDelayTime", _wrap_DelayLine_setDelayTime, METH_VARARGS, NULL},
	 { "DelayLine_setDelayLength", _wrap_DelayLine_setDelayLength, METH_VARARGS, NULL},
	 { "delete_DelayLine", _wrap_delete_DelayLine, METH_O, NULL},
	 { "DelayLine_swigregister", DelayLine_swigregister, METH_O, NULL},
	 { "DelayLine_swiginit", DelayLine_swiginit, METH_VARARGS, NULL},
	 { "new_Mixer", _wrap_new_Mixer, METH_VARARGS, NULL},
	 { "delete_Mixer", _wrap_delete_Mixer, METH_O, NULL},
	 { "Mixer_getInputs", _wrap_Mixer_getInputs, METH_O, NULL},
	 { "Mixer_getNumInputs", _wrap_Mixer_getNumInputs, METH_O, NULL},
	 { "Mixer_addInput", _wrap_Mixer_addInput, METH_VARARGS, NULL},
	 { "Mixer_removeInput", _wrap_Mixer_removeInput, METH_VARARGS, NULL},
	 { "Mixer_deleteInputs", _wrap_Mixer_deleteInputs, METH_O, NULL},
	 { "Mixer_scaleInput", _wrap_Mixer_scaleInput, METH_VARARGS, NULL},
	 { "Mixer_activeSources", _wrap_Mixer_activeSources, METH_O, NULL},
	 { "Mixer_swigregister", Mixer_swigregister, METH_O, NULL},
	 { "Mixer_swiginit", Mixer_swiginit, METH_VARARGS, NULL},
	 { "new_Panner", _wrap_new_Panner, METH_VARARGS, NULL},
	 { "delete_Panner", _wrap_delete_Panner, METH_O, NULL},
	 { "Panner_setPosition", _wrap_Panner_setPosition, METH_VARARGS, NULL},
	 { "Panner_position", _wrap_Panner_position, METH_O, NULL},
	 { "Panner_numChannels", _wrap_Panner_numChannels, METH_O, NULL},
	 { "Panner_swigregister", Panner_swigregister, METH_O, NULL},
	 { "Panner_swiginit", Panner_swiginit, METH_VARARGS, NULL},
	 { "new_NtoMPanner", _wrap_new_NtoMPanner, METH_VARARGS, NULL},
	 { "delete_NtoMPanner", _wrap_delete_NtoMPanner, METH_O, NULL},
	 { "NtoMPanner_init_stereo", _wrap_NtoMPanner_init_stereo, METH_VARARGS, NULL},
	 { "NtoMPanner_init_quad", _wrap_NtoMPanner_init_quad, METH_VARARGS, NULL},
	 { "NtoMPanner_init_5point1", _wrap_NtoMPanner_init_5point1, METH_VARARGS, NULL},
	 { "NtoMPanner_init_6ch", _wrap_NtoMPanner_init_6ch, METH_VARARGS, NULL},
	 { "NtoMPanner_setX", _wrap_NtoMPanner_setX, METH_VARARGS, NULL},
	 { "NtoMPanner_setY", _wrap_NtoMPanner_setY, METH_VARARGS, NULL},
	 { "NtoMPanner_swigregister", NtoMPanner_swigregister, METH_O, NULL},
	 { "NtoMPanner_swiginit", NtoMPanner_swiginit, METH_VARARGS, NULL},
	 { "new_StereoWidth", _wrap_new_StereoWidth, METH_NOARGS, NULL},
	 { "delete_StereoWidth", _wrap_delete_StereoWidth, METH_O, NULL},
	 { "StereoWidth_setWidth", _wrap_StereoWidth_setWidth, METH_VARARGS, NULL},
	 { "StereoWidth_setPan", _wrap_StereoWidth_setPan, METH_VARARGS, NULL},
	 { "StereoWidth_setGain", _wrap_StereoWidth_setGain, METH_VARARGS, NULL},
	 { "StereoWidth_swigregister", StereoWidth_swigregister, METH_O, NULL},
	 { "StereoWidth_swiginit", StereoWidth_swiginit, METH_VARARGS, NULL},
	 { "new_Convolver", _wrap_new_Convolver, METH_VARARGS, NULL},
	 { "delete_Convolver", _wrap_delete_Convolver, METH_O, NULL},
	 { "Convolver_setIRFile", _wrap_Convolver_setIRFile, METH_VARARGS, NULL},
	 { "Convolver_swigregister", Convolver_swigregister, METH_O, NULL},
	 { "Convolver_swiginit", Convolver_swiginit, METH_VARARGS, NULL},
	 { "new_FilterSpecification", _wrap_new_FilterSpecification, METH_VARARGS, NULL},
	 { "delete_FilterSpecification", _wrap_delete_FilterSpecification, METH_O, NULL},
	 { "FilterSpecification_setFrequencies", _wrap_FilterSpecification_setFrequencies, METH_VARARGS, NULL},
	 { "FilterSpecification_setResponses", _wrap_FilterSpecification_setResponses, METH_VARARGS, NULL},
	 { "FilterSpecification_setWeights", _wrap_FilterSpecification_setWeights, METH_VARARGS, NULL},
	 { "FilterSpecification_setNumTaps", _wrap_FilterSpecification_setNumTaps, METH_VARARGS, NULL},
	 { "FilterSpecification_mNumTaps_set", _wrap_FilterSpecification_mNumTaps_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mNumTaps_get", _wrap_FilterSpecification_mNumTaps_get, METH_O, NULL},
	 { "FilterSpecification_planFilter", _wrap_FilterSpecification_planFilter, METH_O, NULL},
	 { "FilterSpecification_mTapData_set", _wrap_FilterSpecification_mTapData_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mTapData_get", _wrap_FilterSpecification_mTapData_get, METH_O, NULL},
	 { "FilterSpecification_mNumBands_set", _wrap_FilterSpecification_mNumBands_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mNumBands_get", _wrap_FilterSpecification_mNumBands_get, METH_O, NULL},
	 { "FilterSpecification_mFrequencies_set", _wrap_FilterSpecification_mFrequencies_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mFrequencies_get", _wrap_FilterSpecification_mFrequencies_get, METH_O, NULL},
	 { "FilterSpecification_mResponses_set", _wrap_FilterSpecification_mResponses_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mResponses_get", _wrap_FilterSpecification_mResponses_get, METH_O, NULL},
	 { "FilterSpecification_mWeights_set", _wrap_FilterSpecification_mWeights_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mWeights_get", _wrap_FilterSpecification_mWeights_get, METH_O, NULL},
	 { "FilterSpecification_swigregister", FilterSpecification_swigregister, METH_O, NULL},
	 { "FilterSpecification_swiginit", FilterSpecification_swiginit, METH_VARARGS, NULL},
	 { "new_FIR", _wrap_new_FIR, METH_VARARGS, NULL},
	 { "delete_FIR", _wrap_delete_FIR, METH_O, NULL},
	 { "FIR_setTaps", _wrap_FIR_setTaps, METH_VARARGS, NULL},
	 { "FIR_readTaps", _wrap_FIR_readTaps, METH_VARARGS, NULL},
	 { "FIR_print_taps", _wrap_FIR_print_taps, METH_O, NULL},
	 { "FIR_swigregister", FIR_swigregister, METH_O, NULL},
	 { "FIR_swiginit", FIR_swiginit, METH_VARARGS, NULL},
	 { "new_Freeverb", _wrap_new_Freeverb, METH_O, NULL},
	 { "delete_Freeverb", _wrap_delete_Freeverb, METH_O, NULL},
	 { "Freeverb_setRoomSize", _wrap_Freeverb_setRoomSize, METH_VARARGS, NULL},
	 { "Freeverb_roomSize", _wrap_Freeverb_roomSize, METH_O, NULL},
	 { "Freeverb_dampening", _wrap_Freeverb_dampening, METH_O, NULL},
	 { "Freeverb_setDampening", _wrap_Freeverb_setDampening, METH_VARARGS, NULL},
	 { "Freeverb_setWetLevel", _wrap_Freeverb_setWetLevel, METH_VARARGS, NULL},
	 { "Freeverb_wetLevel", _wrap_Freeverb_wetLevel, METH_O, NULL},
	 { "Freeverb_setDryLevel", _wrap_Freeverb_setDryLevel, METH_VARARGS, NULL},
	 { "Freeverb_dryLevel", _wrap_Freeverb_dryLevel, METH_O, NULL},
	 { "Freeverb_setWidth", _wrap_Freeverb_setWidth, METH_VARARGS, NULL},
	 { "Freeverb_width", _wrap_Freeverb_width, METH_O, NULL},
	 { "Freeverb_swigregister", Freeverb_swigregister, METH_O, NULL},
	 { "Freeverb_swiginit", Freeverb_swiginit, METH_VARARGS, NULL},
	 { "new_Comb", _wrap_new_Comb, METH_NOARGS, NULL},
	 { "Comb_mute", _wrap_Comb_mute, METH_O, NULL},
	 { "Comb_damp", _wrap_Comb_damp, METH_O, NULL},
	 { "Comb_feedback", _wrap_Comb_feedback, METH_O, NULL},
	 { "Comb_setDamp", _wrap_Comb_setDamp, METH_VARARGS, NULL},
	 { "Comb_setFeedback", _wrap_Comb_setFeedback, METH_VARARGS, NULL},
	 { "Comb_setBuffer", _wrap_Comb_setBuffer, METH_VARARGS, NULL},
	 { "Comb_process", _wrap_Comb_process, METH_VARARGS, NULL},
	 { "delete_Comb", _wrap_delete_Comb, METH_O, NULL},
	 { "Comb_swigregister", Comb_swigregister, METH_O, NULL},
	 { "Comb_swiginit", Comb_swiginit, METH_VARARGS, NULL},
	 { "new_FAllpass", _wrap_new_FAllpass, METH_NOARGS, NULL},
	 { "FAllpass_mute", _wrap_FAllpass_mute, METH_O, NULL},
	 { "FAllpass_feedback", _wrap_FAllpass_feedback, METH_O, NULL},
	 { "FAllpass_setFeedback", _wrap_FAllpass_setFeedback, METH_VARARGS, NULL},
	 { "FAllpass_setBuffer", _wrap_FAllpass_setBuffer, METH_VARARGS, NULL},
	 { "FAllpass_process", _wrap_FAllpass_process, METH_VARARGS, NULL},
	 { "delete_FAllpass", _wrap_delete_FAllpass, METH_O, NULL},
	 { "FAllpass_swigregister", FAllpass_swigregister, METH_O, NULL},
	 { "FAllpass_swiginit", FAllpass_swiginit, METH_VARARGS, NULL},
	 { "new_Stereoverb", _wrap_new_Stereoverb, METH_O, NULL},
	 { "delete_Stereoverb", _wrap_delete_Stereoverb, METH_O, NULL},
	 { "Stereoverb_setRoomSize", _wrap_Stereoverb_setRoomSize, METH_VARARGS, NULL},
	 { "Stereoverb_setDampening", _wrap_Stereoverb_setDampening, METH_VARARGS, NULL},
	 { "Stereoverb_setWetLevel", _wrap_Stereoverb_setWetLevel, METH_VARARGS, NULL},
	 { "Stereoverb_setDryLevel", _wrap_Stereoverb_setDryLevel, METH_VARARGS, NULL},
	 { "Stereoverb_setWidth", _wrap_Stereoverb_setWidth, METH_VARARGS, NULL},
	 { "Stereoverb_swigregister", Stereoverb_swigregister, METH_O, NULL},
	 { "Stereoverb_swiginit", Stereoverb_swiginit, METH_VARARGS, NULL},
	 { "delete_AudioIODeviceCallback", _wrap_delete_AudioIODeviceCallback, METH_O, NULL},
	 { "AudioIODeviceCallback_audioDeviceIOCallback", _wrap_AudioIODeviceCallback_audioDeviceIOCallback, METH_VARARGS, NULL},
	 { "AudioIODeviceCallback_audioDeviceAboutToStart", _wrap_AudioIODeviceCallback_audioDeviceAboutToStart, METH_VARARGS, NULL},
	 { "AudioIODeviceCallback_audioDeviceStopped", _wrap_AudioIODeviceCallback_audioDeviceStopped, METH_O, NULL},
	 { "AudioIODeviceCallback_audioDeviceError", _wrap_AudioIODeviceCallback_audioDeviceError, METH_VARARGS, NULL},
	 { "AudioIODeviceCallback_swigregister", AudioIODeviceCallback_swigregister, METH_O, NULL},
	 { "delete_AudioIODevice", _wrap_delete_AudioIODevice, METH_O, NULL},
	 { "AudioIODevice_getName", _wrap_AudioIODevice_getName, METH_O, NULL},
	 { "AudioIODevice_getTypeName", _wrap_AudioIODevice_getTypeName, METH_O, NULL},
	 { "AudioIODevice_getOutputChannelNames", _wrap_AudioIODevice_getOutputChannelNames, METH_O, NULL},
	 { "AudioIODevice_getInputChannelNames", _wrap_AudioIODevice_getInputChannelNames, METH_O, NULL},
	 { "AudioIODevice_getAvailableSampleRates", _wrap_AudioIODevice_getAvailableSampleRates, METH_O, NULL},
	 { "AudioIODevice_getAvailableBufferSizes", _wrap_AudioIODevice_getAvailableBufferSizes, METH_O, NULL},
	 { "AudioIODevice_getDefaultBufferSize", _wrap_AudioIODevice_getDefaultBufferSize, METH_O, NULL},
	 { "AudioIODevice_open", _wrap_AudioIODevice_open, METH_VARARGS, NULL},
	 { "AudioIODevice_close", _wrap_AudioIODevice_close, METH_O, NULL},
	 { "AudioIODevice_isOpen", _wrap_AudioIODevice_isOpen, METH_O, NULL},
	 { "AudioIODevice_start", _wrap_AudioIODevice_start, METH_VARARGS, NULL},
	 { "AudioIODevice_stop", _wrap_AudioIODevice_stop, METH_O, NULL},
	 { "AudioIODevice_isPlaying", _wrap_AudioIODevice_isPlaying, METH_O, NULL},
	 { "AudioIODevice_getLastError", _wrap_AudioIODevice_getLastError, METH_O, NULL},
	 { "AudioIODevice_getCurrentBufferSizeSamples", _wrap_AudioIODevice_getCurrentBufferSizeSamples, METH_O, NULL},
	 { "AudioIODevice_getCurrentSampleRate", _wrap_AudioIODevice_getCurrentSampleRate, METH_O, NULL},
	 { "AudioIODevice_getCurrentBitDepth", _wrap_AudioIODevice_getCurrentBitDepth, METH_O, NULL},
	 { "AudioIODevice_getActiveOutputChannels", _wrap_AudioIODevice_getActiveOutputChannels, METH_O, NULL},
	 { "AudioIODevice_getActiveInputChannels", _wrap_AudioIODevice_getActiveInputChannels, METH_O, NULL},
	 { "AudioIODevice_getOutputLatencyInSamples", _wrap_AudioIODevice_getOutputLatencyInSamples, METH_O, NULL},
	 { "AudioIODevice_getInputLatencyInSamples", _wrap_AudioIODevice_getInputLatencyInSamples, METH_O, NULL},
	 { "AudioIODevice_hasControlPanel", _wrap_AudioIODevice_hasControlPanel, METH_O, NULL},
	 { "AudioIODevice_showControlPanel", _wrap_AudioIODevice_showControlPanel, METH_O, NULL},
	 { "AudioIODevice_setAudioPreprocessingEnabled", _wrap_AudioIODevice_setAudioPreprocessingEnabled, METH_VARARGS, NULL},
	 { "AudioIODevice_getXRunCount", _wrap_AudioIODevice_getXRunCount, METH_O, NULL},
	 { "AudioIODevice_swigregister", AudioIODevice_swigregister, METH_O, NULL},
	 { "new_JUCEIO", _wrap_new_JUCEIO, METH_VARARGS, NULL},
	 { "delete_JUCEIO", _wrap_delete_JUCEIO, METH_O, NULL},
	 { "JUCEIO_swigregister", JUCEIO_swigregister, METH_O, NULL},
	 { "JUCEIO_swiginit", JUCEIO_swiginit, METH_VARARGS, NULL},
	 { "new_FileIO", _wrap_new_FileIO, METH_VARARGS, NULL},
	 { "delete_FileIO", _wrap_delete_FileIO, METH_O, NULL},
	 { "FileIO_mIsPlaying_set", _wrap_FileIO_mIsPlaying_set, METH_VARARGS, NULL},
	 { "FileIO_mIsPlaying_get", _wrap_FileIO_mIsPlaying_get, METH_O, NULL},
	 { "FileIO_mIsThreadRunning_set", _wrap_FileIO_mIsThreadRunning_set, METH_VARARGS, NULL},
	 { "FileIO_mIsThreadRunning_get", _wrap_FileIO_mIsThreadRunning_get, METH_O, NULL},
	 { "FileIO_mDuration_set", _wrap_FileIO_mDuration_set, METH_VARARGS, NULL},
	 { "FileIO_mDuration_get", _wrap_FileIO_mDuration_get, METH_O, NULL},
	 { "FileIO_start", _wrap_FileIO_start, METH_VARARGS, NULL},
	 { "FileIO_getInput", _wrap_FileIO_getInput, METH_VARARGS, NULL},
	 { "FileIO_swigregister", FileIO_swigregister, METH_O, NULL},
	 { "FileIO_swiginit", FileIO_swiginit, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mTitle_set", _wrap_SoundFileMetadata_mTitle_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mTitle_get", _wrap_SoundFileMetadata_mTitle_get, METH_O, NULL},
	 { "SoundFileMetadata_mArtist_set", _wrap_SoundFileMetadata_mArtist_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mArtist_get", _wrap_SoundFileMetadata_mArtist_get, METH_O, NULL},
	 { "SoundFileMetadata_mAlbum_set", _wrap_SoundFileMetadata_mAlbum_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mAlbum_get", _wrap_SoundFileMetadata_mAlbum_get, METH_O, NULL},
	 { "SoundFileMetadata_mYear_set", _wrap_SoundFileMetadata_mYear_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mYear_get", _wrap_SoundFileMetadata_mYear_get, METH_O, NULL},
	 { "SoundFileMetadata_mComment_set", _wrap_SoundFileMetadata_mComment_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mComment_get", _wrap_SoundFileMetadata_mComment_get, METH_O, NULL},
	 { "SoundFileMetadata_mTrack_set", _wrap_SoundFileMetadata_mTrack_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mTrack_get", _wrap_SoundFileMetadata_mTrack_get, METH_O, NULL},
	 { "SoundFileMetadata_mGenre_set", _wrap_SoundFileMetadata_mGenre_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mGenre_get", _wrap_SoundFileMetadata_mGenre_get, METH_O, NULL},
	 { "SoundFileMetadata_mBitRate_set", _wrap_SoundFileMetadata_mBitRate_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mBitRate_get", _wrap_SoundFileMetadata_mBitRate_get, METH_O, NULL},
	 { "SoundFileMetadata_mSampleRate_set", _wrap_SoundFileMetadata_mSampleRate_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mSampleRate_get", _wrap_SoundFileMetadata_mSampleRate_get, METH_O, NULL},
	 { "SoundFileMetadata_mChannels_set", _wrap_SoundFileMetadata_mChannels_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mChannels_get", _wrap_SoundFileMetadata_mChannels_get, METH_O, NULL},
	 { "SoundFileMetadata_mLength_set", _wrap_SoundFileMetadata_mLength_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mLength_get", _wrap_SoundFileMetadata_mLength_get, METH_O, NULL},
	 { "new_SoundFileMetadata", _wrap_new_SoundFileMetadata, METH_NOARGS, NULL},
	 { "delete_SoundFileMetadata", _wrap_delete_SoundFileMetadata, METH_O, NULL},
	 { "SoundFileMetadata_dump", _wrap_SoundFileMetadata_dump, METH_O, NULL},
	 { "SoundFileMetadata_swigregister", SoundFileMetadata_swigregister, METH_O, NULL},
	 { "SoundFileMetadata_swiginit", SoundFileMetadata_swiginit, METH_VARARGS, NULL},
	 { "delete_Abst_SoundFile", _wrap_delete_Abst_SoundFile, METH_O, NULL},
	 { "Abst_SoundFile_isSndfileName", _wrap_Abst_SoundFile_isSndfileName, METH_O, NULL},
	 { "Abst_SoundFile_sndfileNameType", _wrap_Abst_SoundFile_sndfileNameType, METH_O, NULL},
	 { "Abst_SoundFile_mimeType", _wrap_Abst_SoundFile_mimeType, METH_O, NULL},
	 { "Abst_SoundFile_openForRead", _wrap_Abst_SoundFile_openForRead, METH_VARARGS, NULL},
	 { "Abst_SoundFile_openForWrite", _wrap_Abst_SoundFile_openForWrite, METH_VARARGS, NULL},
	 { "Abst_SoundFile_seekTo", _wrap_Abst_SoundFile_seekTo, METH_VARARGS, NULL},
	 { "Abst_SoundFile_readBufferFromFile", _wrap_Abst_SoundFile_readBufferFromFile, METH_VARARGS, NULL},
	 { "Abst_SoundFile_writeBuffer", _wrap_Abst_SoundFile_writeBuffer, METH_VARARGS, NULL},
	 { "Abst_SoundFile_buffer", _wrap_Abst_SoundFile_buffer, METH_VARARGS, NULL},
	 { "Abst_SoundFile_channels", _wrap_Abst_SoundFile_channels, METH_O, NULL},
	 { "Abst_SoundFile_durationInSecs", _wrap_Abst_SoundFile_durationInSecs, METH_O, NULL},
	 { "Abst_SoundFile_sampleSize", _wrap_Abst_SoundFile_sampleSize, METH_O, NULL},
	 { "Abst_SoundFile_mode", _wrap_Abst_SoundFile_mode, METH_O, NULL},
	 { "Abst_SoundFile_cacheSize", _wrap_Abst_SoundFile_cacheSize, METH_O, NULL},
	 { "Abst_SoundFile_mergeToMono", _wrap_Abst_SoundFile_mergeToMono, METH_O, NULL},
	 { "Abst_SoundFile_setToEnd", _wrap_Abst_SoundFile_setToEnd, METH_O, NULL},
	 { "Abst_SoundFile_close", _wrap_Abst_SoundFile_close, METH_O, NULL},
	 { "Abst_SoundFile_freeBuffer", _wrap_Abst_SoundFile_freeBuffer, METH_O, NULL},
	 { "Abst_SoundFile_convertRate", _wrap_Abst_SoundFile_convertRate, METH_VARARGS, NULL},
	 { "Abst_SoundFile_isValid", _wrap_Abst_SoundFile_isValid, METH_O, NULL},
	 { "Abst_SoundFile_isCached", _wrap_Abst_SoundFile_isCached, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setPath", _wrap_Abst_SoundFile_setPath, METH_VARARGS, NULL},
	 { "Abst_SoundFile_path", _wrap_Abst_SoundFile_path, METH_O, NULL},
	 { "Abst_SoundFile_startFrame", _wrap_Abst_SoundFile_startFrame, METH_O, NULL},
	 { "Abst_SoundFile_setStart", _wrap_Abst_SoundFile_setStart, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setStartSec", _wrap_Abst_SoundFile_setStartSec, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setStartRatio", _wrap_Abst_SoundFile_setStartRatio, METH_VARARGS, NULL},
	 { "Abst_SoundFile_stopFrame", _wrap_Abst_SoundFile_stopFrame, METH_O, NULL},
	 { "Abst_SoundFile_setStop", _wrap_Abst_SoundFile_setStop, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setStopSec", _wrap_Abst_SoundFile_setStopSec, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setStopRatio", _wrap_Abst_SoundFile_setStopRatio, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setBase", _wrap_Abst_SoundFile_setBase, METH_VARARGS, NULL},
	 { "Abst_SoundFile_base", _wrap_Abst_SoundFile_base, METH_O, NULL},
	 { "Abst_SoundFile_playbackRate", _wrap_Abst_SoundFile_playbackRate, METH_O, NULL},
	 { "Abst_SoundFile_setRate", _wrap_Abst_SoundFile_setRate, METH_VARARGS, NULL},
	 { "Abst_SoundFile_isLooping", _wrap_Abst_SoundFile_isLooping, METH_O, NULL},
	 { "Abst_SoundFile_setIsLooping", _wrap_Abst_SoundFile_setIsLooping, METH_VARARGS, NULL},
	 { "Abst_SoundFile_mProperties_set", _wrap_Abst_SoundFile_mProperties_set, METH_VARARGS, NULL},
	 { "Abst_SoundFile_mProperties_get", _wrap_Abst_SoundFile_mProperties_get, METH_O, NULL},
	 { "Abst_SoundFile_swigregister", Abst_SoundFile_swigregister, METH_O, NULL},
	 { "new_SoundCue", _wrap_new_SoundCue, METH_VARARGS, NULL},
	 { "delete_SoundCue", _wrap_delete_SoundCue, METH_O, NULL},
	 { "SoundCue_mName_set", _wrap_SoundCue_mName_set, METH_VARARGS, NULL},
	 { "SoundCue_mName_get", _wrap_SoundCue_mName_get, METH_O, NULL},
	 { "SoundCue_mFile_set", _wrap_SoundCue_mFile_set, METH_VARARGS, NULL},
	 { "SoundCue_mFile_get", _wrap_SoundCue_mFile_get, METH_O, NULL},
	 { "SoundCue_mStart_set", _wrap_SoundCue_mStart_set, METH_VARARGS, NULL},
	 { "SoundCue_mStart_get", _wrap_SoundCue_mStart_get, METH_O, NULL},
	 { "SoundCue_mStop_set", _wrap_SoundCue_mStop_set, METH_VARARGS, NULL},
	 { "SoundCue_mStop_get", _wrap_SoundCue_mStop_get, METH_O, NULL},
	 { "SoundCue_mCurrent_set", _wrap_SoundCue_mCurrent_set, METH_VARARGS, NULL},
	 { "SoundCue_mCurrent_get", _wrap_SoundCue_mCurrent_get, METH_O, NULL},
	 { "SoundCue_mReadRate_set", _wrap_SoundCue_mReadRate_set, METH_VARARGS, NULL},
	 { "SoundCue_mReadRate_get", _wrap_SoundCue_mReadRate_get, METH_O, NULL},
	 { "SoundCue_readFrom", _wrap_SoundCue_readFrom, METH_VARARGS, NULL},
	 { "SoundCue_channels", _wrap_SoundCue_channels, METH_O, NULL},
	 { "SoundCue_setToEnd", _wrap_SoundCue_setToEnd, METH_O, NULL},
	 { "SoundCue_duration", _wrap_SoundCue_duration, METH_O, NULL},
	 { "SoundCue_swigregister", SoundCue_swigregister, METH_O, NULL},
	 { "SoundCue_swiginit", SoundCue_swiginit, METH_VARARGS, NULL},
	 { "new_SoundFileBuffer", _wrap_new_SoundFileBuffer, METH_VARARGS, NULL},
	 { "delete_SoundFileBuffer", _wrap_delete_SoundFileBuffer, METH_O, NULL},
	 { "SoundFileBuffer_samplePtrFor", _wrap_SoundFileBuffer_samplePtrFor, METH_VARARGS, NULL},
	 { "SoundFileBuffer_setBuffer", _wrap_SoundFileBuffer_setBuffer, METH_VARARGS, NULL},
	 { "SoundFileBuffer_swigregister", SoundFileBuffer_swigregister, METH_O, NULL},
	 { "SoundFileBuffer_swiginit", SoundFileBuffer_swiginit, METH_VARARGS, NULL},
	 { "ReferenceCountedObject_incReferenceCount", _wrap_ReferenceCountedObject_incReferenceCount, METH_O, NULL},
	 { "ReferenceCountedObject_decReferenceCount", _wrap_ReferenceCountedObject_decReferenceCount, METH_O, NULL},
	 { "ReferenceCountedObject_decReferenceCountWithoutDeleting", _wrap_ReferenceCountedObject_decReferenceCountWithoutDeleting, METH_O, NULL},
	 { "ReferenceCountedObject_getReferenceCount", _wrap_ReferenceCountedObject_getReferenceCount, METH_O, NULL},
	 { "ReferenceCountedObject_swigregister", ReferenceCountedObject_swigregister, METH_O, NULL},
	 { "SingleThreadedReferenceCountedObject_incReferenceCount", _wrap_SingleThreadedReferenceCountedObject_incReferenceCount, METH_O, NULL},
	 { "SingleThreadedReferenceCountedObject_decReferenceCount", _wrap_SingleThreadedReferenceCountedObject_decReferenceCount, METH_O, NULL},
	 { "SingleThreadedReferenceCountedObject_decReferenceCountWithoutDeleting", _wrap_SingleThreadedReferenceCountedObject_decReferenceCountWithoutDeleting, METH_O, NULL},
	 { "SingleThreadedReferenceCountedObject_getReferenceCount", _wrap_SingleThreadedReferenceCountedObject_getReferenceCount, METH_O, NULL},
	 { "SingleThreadedReferenceCountedObject_swigregister", SingleThreadedReferenceCountedObject_swigregister, METH_O, NULL},
	 { "new_CMIDIMessage", _wrap_new_CMIDIMessage, METH_VARARGS, NULL},
	 { "CMIDIMessage_isNoteOn", _wrap_CMIDIMessage_isNoteOn, METH_O, NULL},
	 { "CMIDIMessage_isNoteOff", _wrap_CMIDIMessage_isNoteOff, METH_O, NULL},
	 { "CMIDIMessage_isNoteOnOff", _wrap_CMIDIMessage_isNoteOnOff, METH_O, NULL},
	 { "CMIDIMessage_isPolyTouch", _wrap_CMIDIMessage_isPolyTouch, METH_O, NULL},
	 { "CMIDIMessage_isControlChange", _wrap_CMIDIMessage_isControlChange, METH_O, NULL},
	 { "CMIDIMessage_isProgramChange", _wrap_CMIDIMessage_isProgramChange, METH_O, NULL},
	 { "CMIDIMessage_isAftertouch", _wrap_CMIDIMessage_isAftertouch, METH_O, NULL},
	 { "CMIDIMessage_isPitchWheel", _wrap_CMIDIMessage_isPitchWheel, METH_O, NULL},
	 { "CMIDIMessage_isSysEX", _wrap_CMIDIMessage_isSysEX, METH_O, NULL},
	 { "CMIDIMessage_getCommand", _wrap_CMIDIMessage_getCommand, METH_O, NULL},
	 { "CMIDIMessage_getNote", _wrap_CMIDIMessage_getNote, METH_O, NULL},
	 { "CMIDIMessage_getVelocity", _wrap_CMIDIMessage_getVelocity, METH_O, NULL},
	 { "CMIDIMessage_getPolyAftertouch", _wrap_CMIDIMessage_getPolyAftertouch, METH_O, NULL},
	 { "CMIDIMessage_getControlFunction", _wrap_CMIDIMessage_getControlFunction, METH_O, NULL},
	 { "CMIDIMessage_getControlValue", _wrap_CMIDIMessage_getControlValue, METH_O, NULL},
	 { "CMIDIMessage_getProgramNumber", _wrap_CMIDIMessage_getProgramNumber, METH_O, NULL},
	 { "CMIDIMessage_getAftertouch", _wrap_CMIDIMessage_getAftertouch, METH_O, NULL},
	 { "CMIDIMessage_getPitchWheel", _wrap_CMIDIMessage_getPitchWheel, METH_O, NULL},
	 { "CMIDIMessage_getFrequency", _wrap_CMIDIMessage_getFrequency, METH_O, NULL},
	 { "CMIDIMessage_getVelocityFloat", _wrap_CMIDIMessage_getVelocityFloat, METH_O, NULL},
	 { "CMIDIMessage_message_set", _wrap_CMIDIMessage_message_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_message_get", _wrap_CMIDIMessage_message_get, METH_O, NULL},
	 { "CMIDIMessage_command_set", _wrap_CMIDIMessage_command_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_command_get", _wrap_CMIDIMessage_command_get, METH_O, NULL},
	 { "CMIDIMessage_channel_set", _wrap_CMIDIMessage_channel_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_channel_get", _wrap_CMIDIMessage_channel_get, METH_O, NULL},
	 { "CMIDIMessage_data1_set", _wrap_CMIDIMessage_data1_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_data1_get", _wrap_CMIDIMessage_data1_get, METH_O, NULL},
	 { "CMIDIMessage_data2_set", _wrap_CMIDIMessage_data2_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_data2_get", _wrap_CMIDIMessage_data2_get, METH_O, NULL},
	 { "CMIDIMessage_time_set", _wrap_CMIDIMessage_time_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_time_get", _wrap_CMIDIMessage_time_get, METH_O, NULL},
	 { "delete_CMIDIMessage", _wrap_delete_CMIDIMessage, METH_O, NULL},
	 { "CMIDIMessage_swigregister", CMIDIMessage_swigregister, METH_O, NULL},
	 { "CMIDIMessage_swiginit", CMIDIMessage_swiginit, METH_VARARGS, NULL},
	 { "new_MidiDeviceListEntry", _wrap_new_MidiDeviceListEntry, METH_O, NULL},
	 { "MidiDeviceListEntry_deviceInfo_set", _wrap_MidiDeviceListEntry_deviceInfo_set, METH_VARARGS, NULL},
	 { "MidiDeviceListEntry_deviceInfo_get", _wrap_MidiDeviceListEntry_deviceInfo_get, METH_O, NULL},
	 { "MidiDeviceListEntry_inDevice_set", _wrap_MidiDeviceListEntry_inDevice_set, METH_VARARGS, NULL},
	 { "MidiDeviceListEntry_inDevice_get", _wrap_MidiDeviceListEntry_inDevice_get, METH_O, NULL},
	 { "MidiDeviceListEntry_outDevice_set", _wrap_MidiDeviceListEntry_outDevice_set, METH_VARARGS, NULL},
	 { "MidiDeviceListEntry_outDevice_get", _wrap_MidiDeviceListEntry_outDevice_get, METH_O, NULL},
	 { "delete_MidiDeviceListEntry", _wrap_delete_MidiDeviceListEntry, METH_O, NULL},
	 { "MidiDeviceListEntry_swigregister", MidiDeviceListEntry_swigregister, METH_O, NULL},
	 { "MidiDeviceListEntry_swiginit", MidiDeviceListEntry_swiginit, METH_VARARGS, NULL},
	 { "delete_MIDIIO", _wrap_delete_MIDIIO, METH_O, NULL},
	 { "MIDIIO_countDevices", _wrap_MIDIIO_countDevices, METH_O, NULL},
	 { "MIDIIO_dumpDevices", _wrap_MIDIIO_dumpDevices, METH_O, NULL},
	 { "MIDIIO_open", _wrap_MIDIIO_open, METH_VARARGS, NULL},
	 { "MIDIIO_isOpen", _wrap_MIDIIO_isOpen, METH_O, NULL},
	 { "MIDIIO_close", _wrap_MIDIIO_close, METH_O, NULL},
	 { "MIDIIO_start", _wrap_MIDIIO_start, METH_O, NULL},
	 { "MIDIIO_stop", _wrap_MIDIIO_stop, METH_O, NULL},
	 { "MIDIIO_clear", _wrap_MIDIIO_clear, METH_O, NULL},
	 { "MIDIIO_dumpBuffer", _wrap_MIDIIO_dumpBuffer, METH_O, NULL},
	 { "MIDIIO_mDeviceID_set", _wrap_MIDIIO_mDeviceID_set, METH_VARARGS, NULL},
	 { "MIDIIO_mDeviceID_get", _wrap_MIDIIO_mDeviceID_get, METH_O, NULL},
	 { "MIDIIO_mMsg_set", _wrap_MIDIIO_mMsg_set, METH_VARARGS, NULL},
	 { "MIDIIO_mMsg_get", _wrap_MIDIIO_mMsg_get, METH_O, NULL},
	 { "MIDIIO_mMsg2_set", _wrap_MIDIIO_mMsg2_set, METH_VARARGS, NULL},
	 { "MIDIIO_mMsg2_get", _wrap_MIDIIO_mMsg2_get, METH_O, NULL},
	 { "MIDIIO_mBuffer_set", _wrap_MIDIIO_mBuffer_set, METH_VARARGS, NULL},
	 { "MIDIIO_mBuffer_get", _wrap_MIDIIO_mBuffer_get, METH_O, NULL},
	 { "MIDIIO_swigregister", MIDIIO_swigregister, METH_O, NULL},
	 { "new_MIDIIn", _wrap_new_MIDIIn, METH_NOARGS, NULL},
	 { "MIDIIn_bufferSize", _wrap_MIDIIn_bufferSize, METH_O, NULL},
	 { "MIDIIn_setBufferSize", _wrap_MIDIIn_setBufferSize, METH_VARARGS, NULL},
	 { "MIDIIn_poll", _wrap_MIDIIn_poll, METH_O, NULL},
	 { "MIDIIn_nextEvent", _wrap_MIDIIn_nextEvent, METH_O, NULL},
	 { "MIDIIn_dumpMessage", _wrap_MIDIIn_dumpMessage, METH_O, NULL},
	 { "MIDIIn_mDevice_set", _wrap_MIDIIn_mDevice_set, METH_VARARGS, NULL},
	 { "MIDIIn_mDevice_get", _wrap_MIDIIn_mDevice_get, METH_O, NULL},
	 { "MIDIIn_mStartTime_set", _wrap_MIDIIn_mStartTime_set, METH_VARARGS, NULL},
	 { "MIDIIn_mStartTime_get", _wrap_MIDIIn_mStartTime_get, METH_O, NULL},
	 { "MIDIIn_handleIncomingMidiMessage", _wrap_MIDIIn_handleIncomingMidiMessage, METH_VARARGS, NULL},
	 { "MIDIIn_handleNoteOn", _wrap_MIDIIn_handleNoteOn, METH_VARARGS, NULL},
	 { "MIDIIn_handleNoteOff", _wrap_MIDIIn_handleNoteOff, METH_VARARGS, NULL},
	 { "MIDIIn_handleAsyncUpdate", _wrap_MIDIIn_handleAsyncUpdate, METH_O, NULL},
	 { "MIDIIn_midiMonitorLock_set", _wrap_MIDIIn_midiMonitorLock_set, METH_VARARGS, NULL},
	 { "MIDIIn_midiMonitorLock_get", _wrap_MIDIIn_midiMonitorLock_get, METH_O, NULL},
	 { "MIDIIn_incomingMessages_set", _wrap_MIDIIn_incomingMessages_set, METH_VARARGS, NULL},
	 { "MIDIIn_incomingMessages_get", _wrap_MIDIIn_incomingMessages_get, METH_O, NULL},
	 { "MIDIIn_mKeyboardState_set", _wrap_MIDIIn_mKeyboardState_set, METH_VARARGS, NULL},
	 { "MIDIIn_mKeyboardState_get", _wrap_MIDIIn_mKeyboardState_get, METH_O, NULL},
	 { "delete_MIDIIn", _wrap_delete_MIDIIn, METH_O, NULL},
	 { "MIDIIn_swigregister", MIDIIn_swigregister, METH_O, NULL},
	 { "MIDIIn_swiginit", MIDIIn_swiginit, METH_VARARGS, NULL},
	 { "new_MIDIOut", _wrap_new_MIDIOut, METH_NOARGS, NULL},
	 { "delete_MIDIOut", _wrap_delete_MIDIOut, METH_O, NULL},
	 { "MIDIOut_mOut_set", _wrap_MIDIOut_mOut_set, METH_VARARGS, NULL},
	 { "MIDIOut_mOut_get", _wrap_MIDIOut_mOut_get, METH_O, NULL},
	 { "MIDIOut_write", _wrap_MIDIOut_write, METH_VARARGS, NULL},
	 { "MIDIOut_writeNoteOn", _wrap_MIDIOut_writeNoteOn, METH_VARARGS, NULL},
	 { "MIDIOut_writeNoteOff", _wrap_MIDIOut_writeNoteOff, METH_VARARGS, NULL},
	 { "MIDIOut_writePolyTouch", _wrap_MIDIOut_writePolyTouch, METH_VARARGS, NULL},
	 { "MIDIOut_writeControlChange", _wrap_MIDIOut_writeControlChange, METH_VARARGS, NULL},
	 { "MIDIOut_writeProgramChange", _wrap_MIDIOut_writeProgramChange, METH_VARARGS, NULL},
	 { "MIDIOut_writeAftertouch", _wrap_MIDIOut_writeAftertouch, METH_VARARGS, NULL},
	 { "MIDIOut_writePitchWheel", _wrap_MIDIOut_writePitchWheel, METH_VARARGS, NULL},
	 { "MIDIOut_writeSysEX", _wrap_MIDIOut_writeSysEX, METH_VARARGS, NULL},
	 { "MIDIOut_swigregister", MIDIOut_swigregister, METH_O, NULL},
	 { "MIDIOut_swiginit", MIDIOut_swiginit, METH_VARARGS, NULL},
	 { "new_MIDIPlayer", _wrap_new_MIDIPlayer, METH_VARARGS, NULL},
	 { "delete_MIDIPlayer", _wrap_delete_MIDIPlayer, METH_O, NULL},
	 { "MIDIPlayer_start", _wrap_MIDIPlayer_start, METH_VARARGS, NULL},
	 { "MIDIPlayer_mFile_set", _wrap_MIDIPlayer_mFile_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mFile_get", _wrap_MIDIPlayer_mFile_get, METH_O, NULL},
	 { "MIDIPlayer_mNumTrax_set", _wrap_MIDIPlayer_mNumTrax_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mNumTrax_get", _wrap_MIDIPlayer_mNumTrax_get, METH_O, NULL},
	 { "MIDIPlayer_mTrak_set", _wrap_MIDIPlayer_mTrak_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mTrak_get", _wrap_MIDIPlayer_mTrak_get, METH_O, NULL},
	 { "MIDIPlayer_mIsOn_set", _wrap_MIDIPlayer_mIsOn_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mIsOn_get", _wrap_MIDIPlayer_mIsOn_get, METH_O, NULL},
	 { "MIDIPlayer_mLibrary_set", _wrap_MIDIPlayer_mLibrary_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mLibrary_get", _wrap_MIDIPlayer_mLibrary_get, METH_O, NULL},
	 { "MIDIPlayer_mTempoScale_set", _wrap_MIDIPlayer_mTempoScale_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mTempoScale_get", _wrap_MIDIPlayer_mTempoScale_get, METH_O, NULL},
	 { "MIDIPlayer_swigregister", MIDIPlayer_swigregister, METH_O, NULL},
	 { "MIDIPlayer_swiginit", MIDIPlayer_swiginit, METH_VARARGS, NULL},
	 { "find_option", _wrap_find_option, METH_VARARGS, NULL},
	 { "usage", _wrap_usage, METH_O, NULL},
	 { "initOSC", _wrap_initOSC, METH_O, NULL},
	 { "setupOSCInstrLibrary", _wrap_setupOSCInstrLibrary, METH_O, NULL},
	 { "mainOSCLoop", _wrap_mainOSCLoop, METH_O, NULL},
	 { "new_Accessor", _wrap_new_Accessor, METH_VARARGS, NULL},
	 { "Accessor_mName_set", _wrap_Accessor_mName_set, METH_VARARGS, NULL},
	 { "Accessor_mName_get", _wrap_Accessor_mName_get, METH_O, NULL},
	 { "Accessor_mSelector_set", _wrap_Accessor_mSelector_set, METH_VARARGS, NULL},
	 { "Accessor_mSelector_get", _wrap_Accessor_mSelector_get, METH_O, NULL},
	 { "Accessor_mType_set", _wrap_Accessor_mType_set, METH_VARARGS, NULL},
	 { "Accessor_mType_get", _wrap_Accessor_mType_get, METH_O, NULL},
	 { "delete_Accessor", _wrap_delete_Accessor, METH_O, NULL},
	 { "Accessor_swigregister", Accessor_swigregister, METH_O, NULL},
	 { "Accessor_swiginit", Accessor_swiginit, METH_VARARGS, NULL},
	 { "new_Instrument", _wrap_new_Instrument, METH_VARARGS, NULL},
	 { "delete_Instrument", _wrap_delete_Instrument, METH_O, NULL},
	 { "Instrument_graph", _wrap_Instrument_graph, METH_O, NULL},
	 { "Instrument_genMap", _wrap_Instrument_genMap, METH_O, NULL},
	 { "Instrument_envelopes", _wrap_Instrument_envelopes, METH_O, NULL},
	 { "Instrument_name", _wrap_Instrument_name, METH_O, NULL},
	 { "Instrument_genNamed", _wrap_Instrument_genNamed, METH_VARARGS, NULL},
	 { "Instrument_getAccessors", _wrap_Instrument_getAccessors, METH_O, NULL},
	 { "Instrument_numAccessors", _wrap_Instrument_numAccessors, METH_O, NULL},
	 { "Instrument_setParameter", _wrap_Instrument_setParameter, METH_VARARGS, NULL},
	 { "Instrument_play", _wrap_Instrument_play, METH_O, NULL},
	 { "Instrument_playOSC", _wrap_Instrument_playOSC, METH_VARARGS, NULL},
	 { "Instrument_playNote", _wrap_Instrument_playNote, METH_VARARGS, NULL},
	 { "Instrument_playMIDI", _wrap_Instrument_playMIDI, METH_VARARGS, NULL},
	 { "Instrument_release", _wrap_Instrument_release, METH_O, NULL},
	 { "Instrument_swigregister", Instrument_swigregister, METH_O, NULL},
	 { "Instrument_swiginit", Instrument_swiginit, METH_VARARGS, NULL},
	 { "new_AdditiveInstrument", _wrap_new_AdditiveInstrument, METH_VARARGS, NULL},
	 { "delete_AdditiveInstrument", _wrap_delete_AdditiveInstrument, METH_O, NULL},
	 { "AdditiveInstrument_playNote", _wrap_AdditiveInstrument_playNote, METH_VARARGS, NULL},
	 { "AdditiveInstrument_mAEnv_set", _wrap_AdditiveInstrument_mAEnv_set, METH_VARARGS, NULL},
	 { "AdditiveInstrument_mAEnv_get", _wrap_AdditiveInstrument_mAEnv_get, METH_O, NULL},
	 { "AdditiveInstrument_mSOS_set", _wrap_AdditiveInstrument_mSOS_set, METH_VARARGS, NULL},
	 { "AdditiveInstrument_mSOS_get", _wrap_AdditiveInstrument_mSOS_get, METH_O, NULL},
	 { "AdditiveInstrument_mPanner_set", _wrap_AdditiveInstrument_mPanner_set, METH_VARARGS, NULL},
	 { "AdditiveInstrument_mPanner_get", _wrap_AdditiveInstrument_mPanner_get, METH_O, NULL},
	 { "AdditiveInstrument_swigregister", AdditiveInstrument_swigregister, METH_O, NULL},
	 { "AdditiveInstrument_swiginit", AdditiveInstrument_swiginit, METH_VARARGS, NULL},
	 { "new_VAdditiveInstrument", _wrap_new_VAdditiveInstrument, METH_VARARGS, NULL},
	 { "delete_VAdditiveInstrument", _wrap_delete_VAdditiveInstrument, METH_O, NULL},
	 { "VAdditiveInstrument_playNote", _wrap_VAdditiveInstrument_playNote, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mAEnv1_set", _wrap_VAdditiveInstrument_mAEnv1_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mAEnv1_get", _wrap_VAdditiveInstrument_mAEnv1_get, METH_O, NULL},
	 { "VAdditiveInstrument_mAEnv2_set", _wrap_VAdditiveInstrument_mAEnv2_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mAEnv2_get", _wrap_VAdditiveInstrument_mAEnv2_get, METH_O, NULL},
	 { "VAdditiveInstrument_mXEnv1_set", _wrap_VAdditiveInstrument_mXEnv1_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mXEnv1_get", _wrap_VAdditiveInstrument_mXEnv1_get, METH_O, NULL},
	 { "VAdditiveInstrument_mXEnv2_set", _wrap_VAdditiveInstrument_mXEnv2_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mXEnv2_get", _wrap_VAdditiveInstrument_mXEnv2_get, METH_O, NULL},
	 { "VAdditiveInstrument_mSOS1_set", _wrap_VAdditiveInstrument_mSOS1_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mSOS1_get", _wrap_VAdditiveInstrument_mSOS1_get, METH_O, NULL},
	 { "VAdditiveInstrument_mSOS2_set", _wrap_VAdditiveInstrument_mSOS2_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mSOS2_get", _wrap_VAdditiveInstrument_mSOS2_get, METH_O, NULL},
	 { "VAdditiveInstrument_mMix_set", _wrap_VAdditiveInstrument_mMix_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mMix_get", _wrap_VAdditiveInstrument_mMix_get, METH_O, NULL},
	 { "VAdditiveInstrument_mPanner_set", _wrap_VAdditiveInstrument_mPanner_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mPanner_get", _wrap_VAdditiveInstrument_mPanner_get, METH_O, NULL},
	 { "VAdditiveInstrument_swigregister", VAdditiveInstrument_swigregister, METH_O, NULL},
	 { "VAdditiveInstrument_swiginit", VAdditiveInstrument_swiginit, METH_VARARGS, NULL},
	 { "new_FMInstrument", _wrap_new_FMInstrument, METH_VARARGS, NULL},
	 { "delete_FMInstrument", _wrap_delete_FMInstrument, METH_O, NULL},
	 { "FMInstrument_parseArgs", _wrap_FMInstrument_parseArgs, METH_VARARGS, NULL},
	 { "FMInstrument_playNote", _wrap_FMInstrument_playNote, METH_VARARGS, NULL},
	 { "FMInstrument_mAEnv_set", _wrap_FMInstrument_mAEnv_set, METH_VARARGS, NULL},
	 { "FMInstrument_mAEnv_get", _wrap_FMInstrument_mAEnv_get, METH_O, NULL},
	 { "FMInstrument_mIEnv_set", _wrap_FMInstrument_mIEnv_set, METH_VARARGS, NULL},
	 { "FMInstrument_mIEnv_get", _wrap_FMInstrument_mIEnv_get, METH_O, NULL},
	 { "FMInstrument_mCar_set", _wrap_FMInstrument_mCar_set, METH_VARARGS, NULL},
	 { "FMInstrument_mCar_get", _wrap_FMInstrument_mCar_get, METH_O, NULL},
	 { "FMInstrument_mMod_set", _wrap_FMInstrument_mMod_set, METH_VARARGS, NULL},
	 { "FMInstrument_mMod_get", _wrap_FMInstrument_mMod_get, METH_O, NULL},
	 { "FMInstrument_mPanner_set", _wrap_FMInstrument_mPanner_set, METH_VARARGS, NULL},
	 { "FMInstrument_mPanner_get", _wrap_FMInstrument_mPanner_get, METH_O, NULL},
	 { "FMInstrument_swigregister", FMInstrument_swigregister, METH_O, NULL},
	 { "FMInstrument_swiginit", FMInstrument_swiginit, METH_VARARGS, NULL},
	 { "new_FancyFMInstrument", _wrap_new_FancyFMInstrument, METH_NOARGS, NULL},
	 { "delete_FancyFMInstrument", _wrap_delete_FancyFMInstrument, METH_O, NULL},
	 { "FancyFMInstrument_mVibEnv_set", _wrap_FancyFMInstrument_mVibEnv_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mVibEnv_get", _wrap_FancyFMInstrument_mVibEnv_get, METH_O, NULL},
	 { "FancyFMInstrument_mChiffEnv_set", _wrap_FancyFMInstrument_mChiffEnv_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mChiffEnv_get", _wrap_FancyFMInstrument_mChiffEnv_get, METH_O, NULL},
	 { "FancyFMInstrument_mVibrato_set", _wrap_FancyFMInstrument_mVibrato_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mVibrato_get", _wrap_FancyFMInstrument_mVibrato_get, METH_O, NULL},
	 { "FancyFMInstrument_mChiff_set", _wrap_FancyFMInstrument_mChiff_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mChiff_get", _wrap_FancyFMInstrument_mChiff_get, METH_O, NULL},
	 { "FancyFMInstrument_mChFilter_set", _wrap_FancyFMInstrument_mChFilter_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mChFilter_get", _wrap_FancyFMInstrument_mChFilter_get, METH_O, NULL},
	 { "FancyFMInstrument_mReverb_set", _wrap_FancyFMInstrument_mReverb_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mReverb_get", _wrap_FancyFMInstrument_mReverb_get, METH_O, NULL},
	 { "FancyFMInstrument_swigregister", FancyFMInstrument_swigregister, METH_O, NULL},
	 { "FancyFMInstrument_swiginit", FancyFMInstrument_swiginit, METH_VARARGS, NULL},
	 { "new_FMBell", _wrap_new_FMBell, METH_VARARGS, NULL},
	 { "delete_FMBell", _wrap_delete_FMBell, METH_O, NULL},
	 { "FMBell_parseArgs", _wrap_FMBell_parseArgs, METH_VARARGS, NULL},
	 { "FMBell_playNote", _wrap_FMBell_playNote, METH_VARARGS, NULL},
	 { "FMBell_mAEnv_set", _wrap_FMBell_mAEnv_set, METH_VARARGS, NULL},
	 { "FMBell_mAEnv_get", _wrap_FMBell_mAEnv_get, METH_O, NULL},
	 { "FMBell_mIEnv_set", _wrap_FMBell_mIEnv_set, METH_VARARGS, NULL},
	 { "FMBell_mIEnv_get", _wrap_FMBell_mIEnv_get, METH_O, NULL},
	 { "FMBell_mGliss_set", _wrap_FMBell_mGliss_set, METH_VARARGS, NULL},
	 { "FMBell_mGliss_get", _wrap_FMBell_mGliss_get, METH_O, NULL},
	 { "FMBell_mMod_set", _wrap_FMBell_mMod_set, METH_VARARGS, NULL},
	 { "FMBell_mMod_get", _wrap_FMBell_mMod_get, METH_O, NULL},
	 { "FMBell_mCar_set", _wrap_FMBell_mCar_set, METH_VARARGS, NULL},
	 { "FMBell_mCar_get", _wrap_FMBell_mCar_get, METH_O, NULL},
	 { "FMBell_mPanner_set", _wrap_FMBell_mPanner_set, METH_VARARGS, NULL},
	 { "FMBell_mPanner_get", _wrap_FMBell_mPanner_get, METH_O, NULL},
	 { "FMBell_mDirect_set", _wrap_FMBell_mDirect_set, METH_VARARGS, NULL},
	 { "FMBell_mDirect_get", _wrap_FMBell_mDirect_get, METH_O, NULL},
	 { "FMBell_swigregister", FMBell_swigregister, METH_O, NULL},
	 { "FMBell_swiginit", FMBell_swiginit, METH_VARARGS, NULL},
	 { "new_SndFileInstrument0", _wrap_new_SndFileInstrument0, METH_VARARGS, NULL},
	 { "delete_SndFileInstrument0", _wrap_delete_SndFileInstrument0, METH_O, NULL},
	 { "SndFileInstrument0_playNote", _wrap_SndFileInstrument0_playNote, METH_VARARGS, NULL},
	 { "SndFileInstrument0_playMIDI", _wrap_SndFileInstrument0_playMIDI, METH_VARARGS, NULL},
	 { "SndFileInstrument0_mPlayer_set", _wrap_SndFileInstrument0_mPlayer_set, METH_VARARGS, NULL},
	 { "SndFileInstrument0_mPlayer_get", _wrap_SndFileInstrument0_mPlayer_get, METH_O, NULL},
	 { "SndFileInstrument0_mPanner_set", _wrap_SndFileInstrument0_mPanner_set, METH_VARARGS, NULL},
	 { "SndFileInstrument0_mPanner_get", _wrap_SndFileInstrument0_mPanner_get, METH_O, NULL},
	 { "SndFileInstrument0_swigregister", SndFileInstrument0_swigregister, METH_O, NULL},
	 { "SndFileInstrument0_swiginit", SndFileInstrument0_swiginit, METH_VARARGS, NULL},
	 { "new_StringInstrument", _wrap_new_StringInstrument, METH_VARARGS, NULL},
	 { "delete_StringInstrument", _wrap_delete_StringInstrument, METH_O, NULL},
	 { "StringInstrument_playNote", _wrap_StringInstrument_playNote, METH_VARARGS, NULL},
	 { "StringInstrument_mString_set", _wrap_StringInstrument_mString_set, METH_VARARGS, NULL},
	 { "StringInstrument_mString_get", _wrap_StringInstrument_mString_get, METH_O, NULL},
	 { "StringInstrument_mPanner_set", _wrap_StringInstrument_mPanner_set, METH_VARARGS, NULL},
	 { "StringInstrument_mPanner_get", _wrap_StringInstrument_mPanner_get, METH_O, NULL},
	 { "StringInstrument_swigregister", StringInstrument_swigregister, METH_O, NULL},
	 { "StringInstrument_swiginit", StringInstrument_swiginit, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};

static PyMethodDef SwigMethods_proxydocs[] = {
	 { "SWIG_PyInstanceMethod_New", SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { "SWIG_PyStaticMethod_New", SWIG_PyStaticMethod_New, METH_O, NULL},
	 { "delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_O, NULL},
	 { "SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_O, NULL},
	 { "SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { "SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { "SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { "SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { "SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_O, NULL},
	 { "SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_O, NULL},
	 { "SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_O, NULL},
	 { "SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_O, NULL},
	 { "SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { "SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { "SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { "SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { "SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { "SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { "SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { "SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_O, NULL},
	 { "testStruct_name_set", _wrap_testStruct_name_set, METH_VARARGS, NULL},
	 { "testStruct_name_get", _wrap_testStruct_name_get, METH_O, NULL},
	 { "testStruct_fcn_set", _wrap_testStruct_fcn_set, METH_VARARGS, NULL},
	 { "testStruct_fcn_get", _wrap_testStruct_fcn_get, METH_O, NULL},
	 { "testStruct_comment_set", _wrap_testStruct_comment_set, METH_VARARGS, NULL},
	 { "testStruct_comment_get", _wrap_testStruct_comment_get, METH_O, NULL},
	 { "new_testStruct", _wrap_new_testStruct, METH_NOARGS, NULL},
	 { "delete_testStruct", _wrap_delete_testStruct, METH_O, NULL},
	 { "testStruct_swigregister", testStruct_swigregister, METH_O, NULL},
	 { "testStruct_swiginit", testStruct_swiginit, METH_VARARGS, NULL},
	 { "CException_mMessage_set", _wrap_CException_mMessage_set, METH_VARARGS, NULL},
	 { "CException_mMessage_get", _wrap_CException_mMessage_get, METH_O, NULL},
	 { "new_CException", _wrap_new_CException, METH_O, NULL},
	 { "delete_CException", _wrap_delete_CException, METH_O, NULL},
	 { "CException_what", _wrap_CException_what, METH_O, NULL},
	 { "CException_swigregister", CException_swigregister, METH_O, NULL},
	 { "CException_swiginit", CException_swiginit, METH_VARARGS, NULL},
	 { "new_MemoryError", _wrap_new_MemoryError, METH_O, NULL},
	 { "delete_MemoryError", _wrap_delete_MemoryError, METH_O, NULL},
	 { "MemoryError_swigregister", MemoryError_swigregister, METH_O, NULL},
	 { "MemoryError_swiginit", MemoryError_swiginit, METH_VARARGS, NULL},
	 { "new_ValueError", _wrap_new_ValueError, METH_O, NULL},
	 { "delete_ValueError", _wrap_delete_ValueError, METH_O, NULL},
	 { "ValueError_swigregister", ValueError_swigregister, METH_O, NULL},
	 { "ValueError_swiginit", ValueError_swiginit, METH_VARARGS, NULL},
	 { "new_TimingError", _wrap_new_TimingError, METH_O, NULL},
	 { "delete_TimingError", _wrap_delete_TimingError, METH_O, NULL},
	 { "TimingError_swigregister", TimingError_swigregister, METH_O, NULL},
	 { "TimingError_swiginit", TimingError_swiginit, METH_VARARGS, NULL},
	 { "new_RunTimeError", _wrap_new_RunTimeError, METH_O, NULL},
	 { "delete_RunTimeError", _wrap_delete_RunTimeError, METH_O, NULL},
	 { "RunTimeError_swigregister", RunTimeError_swigregister, METH_O, NULL},
	 { "RunTimeError_swiginit", RunTimeError_swiginit, METH_VARARGS, NULL},
	 { "new_LogicError", _wrap_new_LogicError, METH_O, NULL},
	 { "delete_LogicError", _wrap_delete_LogicError, METH_O, NULL},
	 { "LogicError_swigregister", LogicError_swigregister, METH_O, NULL},
	 { "LogicError_swiginit", LogicError_swiginit, METH_VARARGS, NULL},
	 { "new_DomainError", _wrap_new_DomainError, METH_O, NULL},
	 { "delete_DomainError", _wrap_delete_DomainError, METH_O, NULL},
	 { "DomainError_swigregister", DomainError_swigregister, METH_O, NULL},
	 { "DomainError_swiginit", DomainError_swiginit, METH_VARARGS, NULL},
	 { "new_OutOfRangeError", _wrap_new_OutOfRangeError, METH_O, NULL},
	 { "delete_OutOfRangeError", _wrap_delete_OutOfRangeError, METH_O, NULL},
	 { "OutOfRangeError_swigregister", OutOfRangeError_swigregister, METH_O, NULL},
	 { "OutOfRangeError_swiginit", OutOfRangeError_swiginit, METH_VARARGS, NULL},
	 { "new_IOError", _wrap_new_IOError, METH_O, NULL},
	 { "delete_IOError", _wrap_delete_IOError, METH_O, NULL},
	 { "IOError_swigregister", IOError_swigregister, METH_O, NULL},
	 { "IOError_swiginit", IOError_swiginit, METH_VARARGS, NULL},
	 { "new_DBError", _wrap_new_DBError, METH_O, NULL},
	 { "delete_DBError", _wrap_delete_DBError, METH_O, NULL},
	 { "DBError_swigregister", DBError_swigregister, METH_O, NULL},
	 { "DBError_swiginit", DBError_swiginit, METH_VARARGS, NULL},
	 { "new_ProcessingError", _wrap_new_ProcessingError, METH_O, NULL},
	 { "delete_ProcessingError", _wrap_delete_ProcessingError, METH_O, NULL},
	 { "ProcessingError_swigregister", ProcessingError_swigregister, METH_O, NULL},
	 { "ProcessingError_swiginit", ProcessingError_swiginit, METH_VARARGS, NULL},
	 { "CGestalt_frameRate", _wrap_CGestalt_frameRate, METH_NOARGS, NULL},
	 { "CGestalt_frameRateF", _wrap_CGestalt_frameRateF, METH_NOARGS, NULL},
	 { "CGestalt_setFrameRate", _wrap_CGestalt_setFrameRate, METH_O, NULL},
	 { "CGestalt_framePeriod", _wrap_CGestalt_framePeriod, METH_NOARGS, NULL},
	 { "CGestalt_numInChannels", _wrap_CGestalt_numInChannels, METH_NOARGS, NULL},
	 { "CGestalt_setNumInChannels", _wrap_CGestalt_setNumInChannels, METH_O, NULL},
	 { "CGestalt_numOutChannels", _wrap_CGestalt_numOutChannels, METH_NOARGS, NULL},
	 { "CGestalt_setNumOutChannels", _wrap_CGestalt_setNumOutChannels, METH_O, NULL},
	 { "CGestalt_blockSize", _wrap_CGestalt_blockSize, METH_NOARGS, NULL},
	 { "CGestalt_setBlockSize", _wrap_CGestalt_setBlockSize, METH_O, NULL},
	 { "CGestalt_maxBufferFrames", _wrap_CGestalt_maxBufferFrames, METH_NOARGS, NULL},
	 { "CGestalt_setMaxBufferFrames", _wrap_CGestalt_setMaxBufferFrames, METH_O, NULL},
	 { "CGestalt_maxSndFileFrames", _wrap_CGestalt_maxSndFileFrames, METH_NOARGS, NULL},
	 { "CGestalt_setMaxSndFileFrames", _wrap_CGestalt_setMaxSndFileFrames, METH_O, NULL},
	 { "CGestalt_sndFileFrames", _wrap_CGestalt_sndFileFrames, METH_NOARGS, NULL},
	 { "CGestalt_setSndFileFrames", _wrap_CGestalt_setSndFileFrames, METH_O, NULL},
	 { "CGestalt_verbosity", _wrap_CGestalt_verbosity, METH_NOARGS, NULL},
	 { "CGestalt_setVerbosity", _wrap_CGestalt_setVerbosity, METH_O, NULL},
	 { "CGestalt_loggingPeriod", _wrap_CGestalt_loggingPeriod, METH_NOARGS, NULL},
	 { "CGestalt_setLoggingPeriod", _wrap_CGestalt_setLoggingPeriod, METH_O, NULL},
	 { "CGestalt_outPort", _wrap_CGestalt_outPort, METH_NOARGS, NULL},
	 { "CGestalt_setOutPort", _wrap_CGestalt_setOutPort, METH_O, NULL},
	 { "CGestalt_dataFolder", _wrap_CGestalt_dataFolder, METH_NOARGS, NULL},
	 { "CGestalt_setDataFolder", _wrap_CGestalt_setDataFolder, METH_O, NULL},
	 { "CGestalt_stopNow", _wrap_CGestalt_stopNow, METH_NOARGS, NULL},
	 { "CGestalt_setStopNow", _wrap_CGestalt_setStopNow, METH_NOARGS, NULL},
	 { "CGestalt_clearStopNow", _wrap_CGestalt_clearStopNow, METH_NOARGS, NULL},
	 { "CGestalt_initFileText", _wrap_CGestalt_initFileText, METH_O, NULL},
	 { "CGestalt_storeToInitFile", _wrap_CGestalt_storeToInitFile, METH_VARARGS, NULL},
	 { "CGestalt_sndFileName", _wrap_CGestalt_sndFileName, METH_NOARGS, NULL},
	 { "CGestalt_screenWidth", _wrap_CGestalt_screenWidth, METH_NOARGS, NULL},
	 { "CGestalt_setScreenWidth", _wrap_CGestalt_setScreenWidth, METH_O, NULL},
	 { "CGestalt_screenHeight", _wrap_CGestalt_screenHeight, METH_NOARGS, NULL},
	 { "CGestalt_setScreenHeight", _wrap_CGestalt_setScreenHeight, METH_O, NULL},
	 { "new_CGestalt", _wrap_new_CGestalt, METH_NOARGS, NULL},
	 { "delete_CGestalt", _wrap_delete_CGestalt, METH_O, NULL},
	 { "CGestalt_swigregister", CGestalt_swigregister, METH_O, NULL},
	 { "CGestalt_swiginit", CGestalt_swiginit, METH_VARARGS, NULL},
	 { "logMsg", _wrap_logMsg, METH_VARARGS, NULL},
	 { "logMsgNN", _wrap_logMsgNN, METH_VARARGS, NULL},
	 { "logLine", _wrap_logLine, METH_NOARGS, NULL},
	 { "logURL", _wrap_logURL, METH_NOARGS, NULL},
	 { "vlogMsg", _wrap_vlogMsg, METH_VARARGS, NULL},
	 { "sleepUsec", _wrap_sleepUsec, METH_O, NULL},
	 { "sleepMsec", _wrap_sleepMsec, METH_O, NULL},
	 { "sleepSec", _wrap_sleepSec, METH_O, NULL},
	 { "timeNow", _wrap_timeNow, METH_NOARGS, NULL},
	 { "fTimeNow", _wrap_fTimeNow, METH_NOARGS, NULL},
	 { "fRandZ", _wrap_fRandZ, METH_NOARGS, NULL},
	 { "fRand1", _wrap_fRand1, METH_NOARGS, NULL},
	 { "fRandV", _wrap_fRandV, METH_O, NULL},
	 { "fRandM", _wrap_fRandM, METH_VARARGS, NULL},
	 { "fRandR", _wrap_fRandR, METH_VARARGS, NULL},
	 { "fRandB", _wrap_fRandB, METH_VARARGS, NULL},
	 { "iRandV", _wrap_iRandV, METH_O, NULL},
	 { "iRandM", _wrap_iRandM, METH_VARARGS, NULL},
	 { "iRandB", _wrap_iRandB, METH_VARARGS, NULL},
	 { "coin", _wrap_coin, METH_VARARGS, NULL},
	 { "keyToFreq", _wrap_keyToFreq, METH_O, NULL},
	 { "freqToKey", _wrap_freqToKey, METH_O, NULL},
	 { "new_Model", _wrap_new_Model, METH_NOARGS, NULL},
	 { "delete_Model", _wrap_delete_Model, METH_O, NULL},
	 { "Model_attachObserver", _wrap_Model_attachObserver, METH_VARARGS, NULL},
	 { "Model_detachObserver", _wrap_Model_detachObserver, METH_VARARGS, NULL},
	 { "Model_changed", _wrap_Model_changed, METH_VARARGS, NULL},
	 { "Model_evaluate", _wrap_Model_evaluate, METH_VARARGS, NULL},
	 { "Model_swigregister", Model_swigregister, METH_O, NULL},
	 { "Model_swiginit", Model_swiginit, METH_VARARGS, NULL},
	 { "delete_Observer", _wrap_delete_Observer, METH_O, NULL},
	 { "Observer_mPeriod_set", _wrap_Observer_mPeriod_set, METH_VARARGS, NULL},
	 { "Observer_mPeriod_get", _wrap_Observer_mPeriod_get, METH_O, NULL},
	 { "Observer_mKey_set", _wrap_Observer_mKey_set, METH_VARARGS, NULL},
	 { "Observer_mKey_get", _wrap_Observer_mKey_get, METH_O, NULL},
	 { "Observer_update", _wrap_Observer_update, METH_VARARGS, NULL},
	 { "Observer_swigregister", Observer_swigregister, METH_O, NULL},
	 { "new_Buffer", _wrap_new_Buffer, METH_VARARGS, NULL},
	 { "delete_Buffer", _wrap_delete_Buffer, METH_O, NULL},
	 { "Buffer_mNumChannels_set", _wrap_Buffer_mNumChannels_set, METH_VARARGS, NULL},
	 { "Buffer_mNumChannels_get", _wrap_Buffer_mNumChannels_get, METH_O, NULL},
	 { "Buffer_mNumFrames_set", _wrap_Buffer_mNumFrames_set, METH_VARARGS, NULL},
	 { "Buffer_mNumFrames_get", _wrap_Buffer_mNumFrames_get, METH_O, NULL},
	 { "Buffer_mNumAlloc_set", _wrap_Buffer_mNumAlloc_set, METH_VARARGS, NULL},
	 { "Buffer_mNumAlloc_get", _wrap_Buffer_mNumAlloc_get, METH_O, NULL},
	 { "Buffer_mMonoBufferByteSize_set", _wrap_Buffer_mMonoBufferByteSize_set, METH_VARARGS, NULL},
	 { "Buffer_mMonoBufferByteSize_get", _wrap_Buffer_mMonoBufferByteSize_get, METH_O, NULL},
	 { "Buffer_mSequence_set", _wrap_Buffer_mSequence_set, METH_VARARGS, NULL},
	 { "Buffer_mSequence_get", _wrap_Buffer_mSequence_get, METH_O, NULL},
	 { "Buffer_mTimestamp_set", _wrap_Buffer_mTimestamp_set, METH_VARARGS, NULL},
	 { "Buffer_mTimestamp_get", _wrap_Buffer_mTimestamp_get, METH_O, NULL},
	 { "Buffer_duration", _wrap_Buffer_duration, METH_O, NULL},
	 { "Buffer_mAreBuffersAllocated_set", _wrap_Buffer_mAreBuffersAllocated_set, METH_VARARGS, NULL},
	 { "Buffer_mAreBuffersAllocated_get", _wrap_Buffer_mAreBuffersAllocated_get, METH_O, NULL},
	 { "Buffer_mDidIAllocateBuffers_set", _wrap_Buffer_mDidIAllocateBuffers_set, METH_VARARGS, NULL},
	 { "Buffer_mDidIAllocateBuffers_get", _wrap_Buffer_mDidIAllocateBuffers_get, METH_O, NULL},
	 { "Buffer_mIsPopulated_set", _wrap_Buffer_mIsPopulated_set, METH_VARARGS, NULL},
	 { "Buffer_mIsPopulated_get", _wrap_Buffer_mIsPopulated_get, METH_O, NULL},
	 { "Buffer_mAreBuffersZero_set", _wrap_Buffer_mAreBuffersZero_set, METH_VARARGS, NULL},
	 { "Buffer_mAreBuffersZero_get", _wrap_Buffer_mAreBuffersZero_get, METH_O, NULL},
	 { "Buffer_mType_set", _wrap_Buffer_mType_set, METH_VARARGS, NULL},
	 { "Buffer_mType_get", _wrap_Buffer_mType_get, METH_O, NULL},
	 { "Buffer_setSize", _wrap_Buffer_setSize, METH_VARARGS, NULL},
	 { "Buffer_setSizeOnly", _wrap_Buffer_setSizeOnly, METH_VARARGS, NULL},
	 { "Buffer_checkBuffers", _wrap_Buffer_checkBuffers, METH_O, NULL},
	 { "Buffer_allocateBuffers", _wrap_Buffer_allocateBuffers, METH_O, NULL},
	 { "Buffer_freeBuffers", _wrap_Buffer_freeBuffers, METH_O, NULL},
	 { "Buffer_canStore", _wrap_Buffer_canStore, METH_VARARGS, NULL},
	 { "Buffer_zeroBuffers", _wrap_Buffer_zeroBuffers, METH_O, NULL},
	 { "Buffer_fillWith", _wrap_Buffer_fillWith, METH_VARARGS, NULL},
	 { "Buffer_scaleBy", _wrap_Buffer_scaleBy, METH_VARARGS, NULL},
	 { "Buffer_copyFrom", _wrap_Buffer_copyFrom, METH_VARARGS, NULL},
	 { "Buffer_copyHeaderFrom", _wrap_Buffer_copyHeaderFrom, METH_VARARGS, NULL},
	 { "Buffer_copySamplesFrom", _wrap_Buffer_copySamplesFrom, METH_VARARGS, NULL},
	 { "Buffer_copySamplesFromTo", _wrap_Buffer_copySamplesFromTo, METH_VARARGS, NULL},
	 { "Buffer_copyOnlySamplesFrom", _wrap_Buffer_copyOnlySamplesFrom, METH_VARARGS, NULL},
	 { "Buffer_readFromFile", _wrap_Buffer_readFromFile, METH_VARARGS, NULL},
	 { "Buffer_convertRate", _wrap_Buffer_convertRate, METH_VARARGS, NULL},
	 { "Buffer_samplePtrFor", _wrap_Buffer_samplePtrFor, METH_VARARGS, NULL},
	 { "Buffer_buffer", _wrap_Buffer_buffer, METH_VARARGS, NULL},
	 { "Buffer_buffers", _wrap_Buffer_buffers, METH_O, NULL},
	 { "Buffer_setBuffers", _wrap_Buffer_setBuffers, METH_VARARGS, NULL},
	 { "Buffer_setBuffer", _wrap_Buffer_setBuffer, METH_VARARGS, NULL},
	 { "Buffer_normalize", _wrap_Buffer_normalize, METH_VARARGS, NULL},
	 { "Buffer_removeDC", _wrap_Buffer_removeDC, METH_O, NULL},
	 { "Buffer_rms", _wrap_Buffer_rms, METH_VARARGS, NULL},
	 { "Buffer_avg", _wrap_Buffer_avg, METH_VARARGS, NULL},
	 { "Buffer_max", _wrap_Buffer_max, METH_VARARGS, NULL},
	 { "Buffer_min", _wrap_Buffer_min, METH_VARARGS, NULL},
	 { "Buffer_swigregister", Buffer_swigregister, METH_O, NULL},
	 { "Buffer_swiginit", Buffer_swiginit, METH_VARARGS, NULL},
	 { "new_BufferCMap", _wrap_new_BufferCMap, METH_VARARGS, NULL},
	 { "delete_BufferCMap", _wrap_delete_BufferCMap, METH_O, NULL},
	 { "BufferCMap_mRealNumChannels_set", _wrap_BufferCMap_mRealNumChannels_set, METH_VARARGS, NULL},
	 { "BufferCMap_mRealNumChannels_get", _wrap_BufferCMap_mRealNumChannels_get, METH_O, NULL},
	 { "BufferCMap_mChannelMap_set", _wrap_BufferCMap_mChannelMap_set, METH_VARARGS, NULL},
	 { "BufferCMap_mChannelMap_get", _wrap_BufferCMap_mChannelMap_get, METH_O, NULL},
	 { "BufferCMap_swigregister", BufferCMap_swigregister, METH_O, NULL},
	 { "BufferCMap_swiginit", BufferCMap_swiginit, METH_VARARGS, NULL},
	 { "new_UnitGenerator", _wrap_new_UnitGenerator, METH_VARARGS, NULL},
	 { "delete_UnitGenerator", _wrap_delete_UnitGenerator, METH_O, NULL},
	 { "UnitGenerator_frameRate", _wrap_UnitGenerator_frameRate, METH_O, NULL},
	 { "UnitGenerator_setFrameRate", _wrap_UnitGenerator_setFrameRate, METH_VARARGS, NULL},
	 { "UnitGenerator_numChannels", _wrap_UnitGenerator_numChannels, METH_O, NULL},
	 { "UnitGenerator_setNumChannels", _wrap_UnitGenerator_setNumChannels, METH_VARARGS, NULL},
	 { "UnitGenerator_copyPolicy", _wrap_UnitGenerator_copyPolicy, METH_O, NULL},
	 { "UnitGenerator_setCopyPolicy", _wrap_UnitGenerator_setCopyPolicy, METH_VARARGS, NULL},
	 { "UnitGenerator_nextBuffer", _wrap_UnitGenerator_nextBuffer, METH_VARARGS, NULL},
	 { "UnitGenerator_isFixed", _wrap_UnitGenerator_isFixed, METH_O, NULL},
	 { "UnitGenerator_isActive", _wrap_UnitGenerator_isActive, METH_O, NULL},
	 { "UnitGenerator_addOutput", _wrap_UnitGenerator_addOutput, METH_VARARGS, NULL},
	 { "UnitGenerator_removeOutput", _wrap_UnitGenerator_removeOutput, METH_VARARGS, NULL},
	 { "UnitGenerator_outputs", _wrap_UnitGenerator_outputs, METH_O, NULL},
	 { "UnitGenerator_numOutputs", _wrap_UnitGenerator_numOutputs, METH_O, NULL},
	 { "UnitGenerator_checkFanOut", _wrap_UnitGenerator_checkFanOut, METH_VARARGS, NULL},
	 { "UnitGenerator_handleFanOut", _wrap_UnitGenerator_handleFanOut, METH_VARARGS, NULL},
	 { "UnitGenerator_setValue", _wrap_UnitGenerator_setValue, METH_VARARGS, NULL},
	 { "UnitGenerator_value", _wrap_UnitGenerator_value, METH_O, NULL},
	 { "UnitGenerator_dump", _wrap_UnitGenerator_dump, METH_O, NULL},
	 { "UnitGenerator_trigger", _wrap_UnitGenerator_trigger, METH_O, NULL},
	 { "UnitGenerator_swigregister", UnitGenerator_swigregister, METH_O, NULL},
	 { "UnitGenerator_swiginit", UnitGenerator_swiginit, METH_VARARGS, NULL},
	 { "new_Port", _wrap_new_Port, METH_VARARGS, NULL},
	 { "delete_Port", _wrap_delete_Port, METH_O, NULL},
	 { "Port_mUGen_set", _wrap_Port_mUGen_set, METH_VARARGS, NULL},
	 { "Port_mUGen_get", _wrap_Port_mUGen_get, METH_O, NULL},
	 { "Port_mBuffer_set", _wrap_Port_mBuffer_set, METH_VARARGS, NULL},
	 { "Port_mBuffer_get", _wrap_Port_mBuffer_get, METH_O, NULL},
	 { "Port_mValue_set", _wrap_Port_mValue_set, METH_VARARGS, NULL},
	 { "Port_mValue_get", _wrap_Port_mValue_get, METH_O, NULL},
	 { "Port_mValuePtr_set", _wrap_Port_mValuePtr_set, METH_VARARGS, NULL},
	 { "Port_mValuePtr_get", _wrap_Port_mValuePtr_get, METH_O, NULL},
	 { "Port_mPtrIncrement_set", _wrap_Port_mPtrIncrement_set, METH_VARARGS, NULL},
	 { "Port_mPtrIncrement_get", _wrap_Port_mPtrIncrement_get, METH_O, NULL},
	 { "Port_mValueIndex_set", _wrap_Port_mValueIndex_set, METH_VARARGS, NULL},
	 { "Port_mValueIndex_get", _wrap_Port_mValueIndex_get, METH_O, NULL},
	 { "Port_checkBuffer", _wrap_Port_checkBuffer, METH_O, NULL},
	 { "Port_nextValue", _wrap_Port_nextValue, METH_O, NULL},
	 { "Port_nextFrame", _wrap_Port_nextFrame, METH_VARARGS, NULL},
	 { "Port_isReady", _wrap_Port_isReady, METH_O, NULL},
	 { "Port_resetPtr", _wrap_Port_resetPtr, METH_O, NULL},
	 { "Port_isActive", _wrap_Port_isActive, METH_O, NULL},
	 { "Port_dump", _wrap_Port_dump, METH_O, NULL},
	 { "Port_isFixed", _wrap_Port_isFixed, METH_O, NULL},
	 { "Port_trigger", _wrap_Port_trigger, METH_O, NULL},
	 { "Port_swigregister", Port_swigregister, METH_O, NULL},
	 { "Port_swiginit", Port_swiginit, METH_VARARGS, NULL},
	 { "new_Controllable", _wrap_new_Controllable, METH_NOARGS, NULL},
	 { "delete_Controllable", _wrap_delete_Controllable, METH_O, NULL},
	 { "Controllable_getPort", _wrap_Controllable_getPort, METH_VARARGS, NULL},
	 { "Controllable_swigregister", Controllable_swigregister, METH_O, NULL},
	 { "Controllable_swiginit", Controllable_swiginit, METH_VARARGS, NULL},
	 { "new_Scalable", _wrap_new_Scalable, METH_VARARGS, NULL},
	 { "delete_Scalable", _wrap_delete_Scalable, METH_O, NULL},
	 { "Scalable_setScale", _wrap_Scalable_setScale, METH_VARARGS, NULL},
	 { "Scalable_setOffset", _wrap_Scalable_setOffset, METH_VARARGS, NULL},
	 { "Scalable_trigger", _wrap_Scalable_trigger, METH_O, NULL},
	 { "Scalable_isScaled", _wrap_Scalable_isScaled, METH_O, NULL},
	 { "Scalable_swigregister", Scalable_swigregister, METH_O, NULL},
	 { "Scalable_swiginit", Scalable_swiginit, METH_VARARGS, NULL},
	 { "new_Effect", _wrap_new_Effect, METH_VARARGS, NULL},
	 { "Effect_setInput", _wrap_Effect_setInput, METH_VARARGS, NULL},
	 { "Effect_isInline_set", _wrap_Effect_isInline_set, METH_VARARGS, NULL},
	 { "Effect_isInline_get", _wrap_Effect_isInline_get, METH_O, NULL},
	 { "Effect_setInline", _wrap_Effect_setInline, METH_O, NULL},
	 { "delete_Effect", _wrap_delete_Effect, METH_O, NULL},
	 { "Effect_swigregister", Effect_swigregister, METH_O, NULL},
	 { "Effect_swiginit", Effect_swiginit, METH_VARARGS, NULL},
	 { "new_Phased", _wrap_new_Phased, METH_VARARGS, NULL},
	 { "delete_Phased", _wrap_delete_Phased, METH_O, NULL},
	 { "Phased_setFrequency", _wrap_Phased_setFrequency, METH_VARARGS, NULL},
	 { "Phased_setPhase", _wrap_Phased_setPhase, METH_VARARGS, NULL},
	 { "Phased_swigregister", Phased_swigregister, METH_O, NULL},
	 { "Phased_swiginit", Phased_swiginit, METH_VARARGS, NULL},
	 { "Writeable_writeBuffer", _wrap_Writeable_writeBuffer, METH_VARARGS, NULL},
	 { "delete_Writeable", _wrap_delete_Writeable, METH_O, NULL},
	 { "new_Writeable", _wrap_new_Writeable, METH_NOARGS, NULL},
	 { "Writeable_swigregister", Writeable_swigregister, METH_O, NULL},
	 { "Writeable_swiginit", Writeable_swiginit, METH_VARARGS, NULL},
	 { "delete_Seekable", _wrap_delete_Seekable, METH_O, NULL},
	 { "Seekable_mCurrentFrame_set", _wrap_Seekable_mCurrentFrame_set, METH_VARARGS, NULL},
	 { "Seekable_mCurrentFrame_get", _wrap_Seekable_mCurrentFrame_get, METH_O, NULL},
	 { "Seekable_mActualFrame_set", _wrap_Seekable_mActualFrame_set, METH_VARARGS, NULL},
	 { "Seekable_mActualFrame_get", _wrap_Seekable_mActualFrame_get, METH_O, NULL},
	 { "Seekable_seekTo", _wrap_Seekable_seekTo, METH_VARARGS, NULL},
	 { "Seekable_reset", _wrap_Seekable_reset, METH_O, NULL},
	 { "Seekable_duration", _wrap_Seekable_duration, METH_O, NULL},
	 { "Seekable_swigregister", Seekable_swigregister, METH_O, NULL},
	 { "new_Cacheable", _wrap_new_Cacheable, METH_VARARGS, NULL},
	 { "Cacheable_mUseCache_set", _wrap_Cacheable_mUseCache_set, METH_VARARGS, NULL},
	 { "Cacheable_mUseCache_get", _wrap_Cacheable_mUseCache_get, METH_O, NULL},
	 { "delete_Cacheable", _wrap_delete_Cacheable, METH_O, NULL},
	 { "Cacheable_swigregister", Cacheable_swigregister, METH_O, NULL},
	 { "Cacheable_swiginit", Cacheable_swiginit, METH_VARARGS, NULL},
	 { "new_FanOut", _wrap_new_FanOut, METH_VARARGS, NULL},
	 { "delete_FanOut", _wrap_delete_FanOut, METH_O, NULL},
	 { "FanOut_nextBuffer", _wrap_FanOut_nextBuffer, METH_VARARGS, NULL},
	 { "FanOut_swigregister", FanOut_swigregister, METH_O, NULL},
	 { "FanOut_swiginit", FanOut_swiginit, METH_VARARGS, NULL},
	 { "new_Splitter", _wrap_new_Splitter, METH_O, NULL},
	 { "delete_Splitter", _wrap_delete_Splitter, METH_O, NULL},
	 { "Splitter_nextBuffer", _wrap_Splitter_nextBuffer, METH_VARARGS, NULL},
	 { "Splitter_swigregister", Splitter_swigregister, METH_O, NULL},
	 { "Splitter_swiginit", Splitter_swiginit, METH_VARARGS, NULL},
	 { "new_Joiner", _wrap_new_Joiner, METH_VARARGS, NULL},
	 { "delete_Joiner", _wrap_delete_Joiner, METH_O, NULL},
	 { "Joiner_nextBuffer", _wrap_Joiner_nextBuffer, METH_VARARGS, NULL},
	 { "Joiner_addInput", _wrap_Joiner_addInput, METH_VARARGS, NULL},
	 { "Joiner_swigregister", Joiner_swigregister, METH_O, NULL},
	 { "Joiner_swiginit", Joiner_swiginit, METH_VARARGS, NULL},
	 { "Interleaver_interleave", _wrap_Interleaver_interleave, METH_VARARGS, NULL},
	 { "Interleaver_interleaveAndRemap", _wrap_Interleaver_interleaveAndRemap, METH_VARARGS, NULL},
	 { "Interleaver_deinterleave", _wrap_Interleaver_deinterleave, METH_VARARGS, NULL},
	 { "new_Interleaver", _wrap_new_Interleaver, METH_NOARGS, NULL},
	 { "delete_Interleaver", _wrap_delete_Interleaver, METH_O, NULL},
	 { "Interleaver_swigregister", Interleaver_swigregister, METH_O, NULL},
	 { "Interleaver_swiginit", Interleaver_swiginit, METH_VARARGS, NULL},
	 { "new_IO", _wrap_new_IO, METH_VARARGS, NULL},
	 { "delete_IO", _wrap_delete_IO, METH_O, NULL},
	 { "IO_open", _wrap_IO_open, METH_O, NULL},
	 { "IO_close", _wrap_IO_close, METH_O, NULL},
	 { "IO_start", _wrap_IO_start, METH_O, NULL},
	 { "IO_stop", _wrap_IO_stop, METH_O, NULL},
	 { "IO_test", _wrap_IO_test, METH_O, NULL},
	 { "IO_capture_on", _wrap_IO_capture_on, METH_VARARGS, NULL},
	 { "IO_capture_off", _wrap_IO_capture_off, METH_O, NULL},
	 { "IO_get_capture", _wrap_IO_get_capture, METH_O, NULL},
	 { "IO_setRoot", _wrap_IO_setRoot, METH_VARARGS, NULL},
	 { "IO_clearRoot", _wrap_IO_clearRoot, METH_O, NULL},
	 { "IO_pullInput", _wrap_IO_pullInput, METH_VARARGS, NULL},
	 { "IO_getInput", _wrap_IO_getInput, METH_VARARGS, NULL},
	 { "IO_getAndIncrementSequence", _wrap_IO_getAndIncrementSequence, METH_O, NULL},
	 { "IO_mGraph_set", _wrap_IO_mGraph_set, METH_VARARGS, NULL},
	 { "IO_mGraph_get", _wrap_IO_mGraph_get, METH_O, NULL},
	 { "IO_mInputBuffer_set", _wrap_IO_mInputBuffer_set, METH_VARARGS, NULL},
	 { "IO_mInputBuffer_get", _wrap_IO_mInputBuffer_get, METH_O, NULL},
	 { "IO_mOutputBuffer_set", _wrap_IO_mOutputBuffer_set, METH_VARARGS, NULL},
	 { "IO_mOutputBuffer_get", _wrap_IO_mOutputBuffer_get, METH_O, NULL},
	 { "IO_mCaptureBuffer_set", _wrap_IO_mCaptureBuffer_set, METH_VARARGS, NULL},
	 { "IO_mCaptureBuffer_get", _wrap_IO_mCaptureBuffer_get, METH_O, NULL},
	 { "IO_mInputPointer_set", _wrap_IO_mInputPointer_set, METH_VARARGS, NULL},
	 { "IO_mInputPointer_get", _wrap_IO_mInputPointer_get, METH_O, NULL},
	 { "IO_mChannelMap_set", _wrap_IO_mChannelMap_set, METH_VARARGS, NULL},
	 { "IO_mChannelMap_get", _wrap_IO_mChannelMap_get, METH_O, NULL},
	 { "IO_mNumFramesPlayed_set", _wrap_IO_mNumFramesPlayed_set, METH_VARARGS, NULL},
	 { "IO_mNumFramesPlayed_get", _wrap_IO_mNumFramesPlayed_get, METH_O, NULL},
	 { "IO_mSequence_set", _wrap_IO_mSequence_set, METH_VARARGS, NULL},
	 { "IO_mSequence_get", _wrap_IO_mSequence_get, METH_O, NULL},
	 { "IO_mLoggingPeriod_set", _wrap_IO_mLoggingPeriod_set, METH_VARARGS, NULL},
	 { "IO_mLoggingPeriod_get", _wrap_IO_mLoggingPeriod_get, METH_O, NULL},
	 { "IO_mNumInChannels_set", _wrap_IO_mNumInChannels_set, METH_VARARGS, NULL},
	 { "IO_mNumInChannels_get", _wrap_IO_mNumInChannels_get, METH_O, NULL},
	 { "IO_mNumOutChannels_set", _wrap_IO_mNumOutChannels_set, METH_VARARGS, NULL},
	 { "IO_mNumOutChannels_get", _wrap_IO_mNumOutChannels_get, METH_O, NULL},
	 { "IO_mNumRealInChannels_set", _wrap_IO_mNumRealInChannels_set, METH_VARARGS, NULL},
	 { "IO_mNumRealInChannels_get", _wrap_IO_mNumRealInChannels_get, METH_O, NULL},
	 { "IO_mNumRealOutChannels_set", _wrap_IO_mNumRealOutChannels_set, METH_VARARGS, NULL},
	 { "IO_mNumRealOutChannels_get", _wrap_IO_mNumRealOutChannels_get, METH_O, NULL},
	 { "IO_mStatus_set", _wrap_IO_mStatus_set, METH_VARARGS, NULL},
	 { "IO_mStatus_get", _wrap_IO_mStatus_get, METH_O, NULL},
	 { "IO_mInterleaved_set", _wrap_IO_mInterleaved_set, METH_VARARGS, NULL},
	 { "IO_mInterleaved_get", _wrap_IO_mInterleaved_get, METH_O, NULL},
	 { "IO_mOffset_set", _wrap_IO_mOffset_set, METH_VARARGS, NULL},
	 { "IO_mOffset_get", _wrap_IO_mOffset_get, METH_O, NULL},
	 { "IO_mThen_set", _wrap_IO_mThen_set, METH_VARARGS, NULL},
	 { "IO_mThen_get", _wrap_IO_mThen_get, METH_O, NULL},
	 { "IO_mNow_set", _wrap_IO_mNow_set, METH_VARARGS, NULL},
	 { "IO_mNow_get", _wrap_IO_mNow_get, METH_O, NULL},
	 { "IO_mTimeVals_set", _wrap_IO_mTimeVals_set, METH_VARARGS, NULL},
	 { "IO_mTimeVals_get", _wrap_IO_mTimeVals_get, METH_O, NULL},
	 { "IO_mThisSec_set", _wrap_IO_mThisSec_set, METH_VARARGS, NULL},
	 { "IO_mThisSec_get", _wrap_IO_mThisSec_get, METH_O, NULL},
	 { "IO_mTimeSum_set", _wrap_IO_mTimeSum_set, METH_VARARGS, NULL},
	 { "IO_mTimeSum_get", _wrap_IO_mTimeSum_get, METH_O, NULL},
	 { "IO_mUsage_set", _wrap_IO_mUsage_set, METH_VARARGS, NULL},
	 { "IO_mUsage_get", _wrap_IO_mUsage_get, METH_O, NULL},
	 { "IO_printTimeStatistics", _wrap_IO_printTimeStatistics, METH_VARARGS, NULL},
	 { "IO_swigregister", IO_swigregister, METH_O, NULL},
	 { "IO_swiginit", IO_swiginit, METH_VARARGS, NULL},
	 { "new_IODevice", _wrap_new_IODevice, METH_VARARGS, NULL},
	 { "IODevice_mName_set", _wrap_IODevice_mName_set, METH_VARARGS, NULL},
	 { "IODevice_mName_get", _wrap_IODevice_mName_get, METH_O, NULL},
	 { "IODevice_mIndex_set", _wrap_IODevice_mIndex_set, METH_VARARGS, NULL},
	 { "IODevice_mIndex_get", _wrap_IODevice_mIndex_get, METH_O, NULL},
	 { "IODevice_mMaxInputChannels_set", _wrap_IODevice_mMaxInputChannels_set, METH_VARARGS, NULL},
	 { "IODevice_mMaxInputChannels_get", _wrap_IODevice_mMaxInputChannels_get, METH_O, NULL},
	 { "IODevice_mMaxOutputChannels_set", _wrap_IODevice_mMaxOutputChannels_set, METH_VARARGS, NULL},
	 { "IODevice_mMaxOutputChannels_get", _wrap_IODevice_mMaxOutputChannels_get, METH_O, NULL},
	 { "IODevice_mFrameRate_set", _wrap_IODevice_mFrameRate_set, METH_VARARGS, NULL},
	 { "IODevice_mFrameRate_get", _wrap_IODevice_mFrameRate_get, METH_O, NULL},
	 { "IODevice_mFrameRates_set", _wrap_IODevice_mFrameRates_set, METH_VARARGS, NULL},
	 { "IODevice_mFrameRates_get", _wrap_IODevice_mFrameRates_get, METH_O, NULL},
	 { "IODevice_mIsDefaultIn_set", _wrap_IODevice_mIsDefaultIn_set, METH_VARARGS, NULL},
	 { "IODevice_mIsDefaultIn_get", _wrap_IODevice_mIsDefaultIn_get, METH_O, NULL},
	 { "IODevice_mIsDefaultOut_set", _wrap_IODevice_mIsDefaultOut_set, METH_VARARGS, NULL},
	 { "IODevice_mIsDefaultOut_get", _wrap_IODevice_mIsDefaultOut_get, METH_O, NULL},
	 { "IODevice_dump", _wrap_IODevice_dump, METH_O, NULL},
	 { "delete_IODevice", _wrap_delete_IODevice, METH_O, NULL},
	 { "IODevice_swigregister", IODevice_swigregister, METH_O, NULL},
	 { "IODevice_swiginit", IODevice_swiginit, METH_VARARGS, NULL},
	 { "new_RingBufferTap", _wrap_new_RingBufferTap, METH_VARARGS, NULL},
	 { "RingBufferTap_mLoopStartFrame_set", _wrap_RingBufferTap_mLoopStartFrame_set, METH_VARARGS, NULL},
	 { "RingBufferTap_mLoopStartFrame_get", _wrap_RingBufferTap_mLoopStartFrame_get, METH_O, NULL},
	 { "RingBufferTap_mLoopEndFrame_set", _wrap_RingBufferTap_mLoopEndFrame_set, METH_VARARGS, NULL},
	 { "RingBufferTap_mLoopEndFrame_get", _wrap_RingBufferTap_mLoopEndFrame_get, METH_O, NULL},
	 { "RingBufferTap_setOffset", _wrap_RingBufferTap_setOffset, METH_VARARGS, NULL},
	 { "RingBufferTap_setLoopStart", _wrap_RingBufferTap_setLoopStart, METH_VARARGS, NULL},
	 { "RingBufferTap_setLoopEnd", _wrap_RingBufferTap_setLoopEnd, METH_VARARGS, NULL},
	 { "RingBufferTap_setBuffer", _wrap_RingBufferTap_setBuffer, METH_VARARGS, NULL},
	 { "RingBufferTap_nextBuffer", _wrap_RingBufferTap_nextBuffer, METH_VARARGS, NULL},
	 { "RingBufferTap_destructiveNextBuffer", _wrap_RingBufferTap_destructiveNextBuffer, METH_VARARGS, NULL},
	 { "delete_RingBufferTap", _wrap_delete_RingBufferTap, METH_O, NULL},
	 { "RingBufferTap_swigregister", RingBufferTap_swigregister, METH_O, NULL},
	 { "RingBufferTap_swiginit", RingBufferTap_swiginit, METH_VARARGS, NULL},
	 { "new_RingBuffer", _wrap_new_RingBuffer, METH_VARARGS, NULL},
	 { "RingBuffer_mCurrentWriteFrame_set", _wrap_RingBuffer_mCurrentWriteFrame_set, METH_VARARGS, NULL},
	 { "RingBuffer_mCurrentWriteFrame_get", _wrap_RingBuffer_mCurrentWriteFrame_get, METH_O, NULL},
	 { "RingBuffer_mBuffer_set", _wrap_RingBuffer_mBuffer_set, METH_VARARGS, NULL},
	 { "RingBuffer_mBuffer_get", _wrap_RingBuffer_mBuffer_get, METH_O, NULL},
	 { "RingBuffer_mTap_set", _wrap_RingBuffer_mTap_set, METH_VARARGS, NULL},
	 { "RingBuffer_mTap_get", _wrap_RingBuffer_mTap_get, METH_O, NULL},
	 { "RingBuffer_seekTo", _wrap_RingBuffer_seekTo, METH_VARARGS, NULL},
	 { "RingBuffer_setLoopStart", _wrap_RingBuffer_setLoopStart, METH_VARARGS, NULL},
	 { "RingBuffer_setLoopEnd", _wrap_RingBuffer_setLoopEnd, METH_VARARGS, NULL},
	 { "RingBuffer_destructiveNextBuffer", _wrap_RingBuffer_destructiveNextBuffer, METH_VARARGS, NULL},
	 { "RingBuffer_writeBuffer", _wrap_RingBuffer_writeBuffer, METH_VARARGS, NULL},
	 { "RingBuffer_sumIntoBuffer", _wrap_RingBuffer_sumIntoBuffer, METH_VARARGS, NULL},
	 { "delete_RingBuffer", _wrap_delete_RingBuffer, METH_O, NULL},
	 { "RingBuffer_swigregister", RingBuffer_swigregister, METH_O, NULL},
	 { "RingBuffer_swiginit", RingBuffer_swiginit, METH_VARARGS, NULL},
	 { "new_BufferStream", _wrap_new_BufferStream, METH_VARARGS, NULL},
	 { "delete_BufferStream", _wrap_delete_BufferStream, METH_O, NULL},
	 { "BufferStream_setBuffer", _wrap_BufferStream_setBuffer, METH_VARARGS, NULL},
	 { "BufferStream_nextBuffer", _wrap_BufferStream_nextBuffer, METH_VARARGS, NULL},
	 { "BufferStream_writeBuffer", _wrap_BufferStream_writeBuffer, METH_VARARGS, NULL},
	 { "BufferStream_swigregister", BufferStream_swigregister, METH_O, NULL},
	 { "BufferStream_swiginit", BufferStream_swiginit, METH_VARARGS, NULL},
	 { "new_CVariable", _wrap_new_CVariable, METH_VARARGS, NULL},
	 { "CVariable_value", _wrap_CVariable_value, METH_O, NULL},
	 { "CVariable_setValue", _wrap_CVariable_setValue, METH_VARARGS, NULL},
	 { "delete_CVariable", _wrap_delete_CVariable, METH_O, NULL},
	 { "CVariable_swigregister", CVariable_swigregister, METH_O, NULL},
	 { "CVariable_swiginit", CVariable_swiginit, METH_VARARGS, NULL},
	 { "new_StaticVariable", _wrap_new_StaticVariable, METH_VARARGS, NULL},
	 { "StaticVariable_value", _wrap_StaticVariable_value, METH_O, NULL},
	 { "StaticVariable_setValue", _wrap_StaticVariable_setValue, METH_VARARGS, NULL},
	 { "delete_StaticVariable", _wrap_delete_StaticVariable, METH_O, NULL},
	 { "StaticVariable_swigregister", StaticVariable_swigregister, METH_O, NULL},
	 { "StaticVariable_swiginit", StaticVariable_swiginit, METH_VARARGS, NULL},
	 { "new_DynamicVariable", _wrap_new_DynamicVariable, METH_VARARGS, NULL},
	 { "DynamicVariable_setValue", _wrap_DynamicVariable_setValue, METH_VARARGS, NULL},
	 { "delete_DynamicVariable", _wrap_delete_DynamicVariable, METH_O, NULL},
	 { "DynamicVariable_swigregister", DynamicVariable_swigregister, METH_O, NULL},
	 { "DynamicVariable_swiginit", DynamicVariable_swiginit, METH_VARARGS, NULL},
	 { "new_BlockResizer", _wrap_new_BlockResizer, METH_VARARGS, NULL},
	 { "delete_BlockResizer", _wrap_delete_BlockResizer, METH_O, NULL},
	 { "BlockResizer_swigregister", BlockResizer_swigregister, METH_O, NULL},
	 { "BlockResizer_swiginit", BlockResizer_swiginit, METH_VARARGS, NULL},
	 { "CPoint_dimn_set", _wrap_CPoint_dimn_set, METH_VARARGS, NULL},
	 { "CPoint_dimn_get", _wrap_CPoint_dimn_get, METH_O, NULL},
	 { "CPoint_x_set", _wrap_CPoint_x_set, METH_VARARGS, NULL},
	 { "CPoint_x_get", _wrap_CPoint_x_get, METH_O, NULL},
	 { "CPoint_y_set", _wrap_CPoint_y_set, METH_VARARGS, NULL},
	 { "CPoint_y_get", _wrap_CPoint_y_get, METH_O, NULL},
	 { "CPoint_z_set", _wrap_CPoint_z_set, METH_VARARGS, NULL},
	 { "CPoint_z_get", _wrap_CPoint_z_get, METH_O, NULL},
	 { "new_CPoint", _wrap_new_CPoint, METH_VARARGS, NULL},
	 { "delete_CPoint", _wrap_delete_CPoint, METH_O, NULL},
	 { "CPoint_set", _wrap_CPoint_set, METH_VARARGS, NULL},
	 { "CPoint_setAzimuth", _wrap_CPoint_setAzimuth, METH_VARARGS, NULL},
	 { "CPoint_setElevation", _wrap_CPoint_setElevation, METH_VARARGS, NULL},
	 { "CPoint_setMagnitude", _wrap_CPoint_setMagnitude, METH_VARARGS, NULL},
	 { "CPoint_dim", _wrap_CPoint_dim, METH_O, NULL},
	 { "CPoint_setdim", _wrap_CPoint_setdim, METH_VARARGS, NULL},
	 { "CPoint___neg__", _wrap_CPoint___neg__, METH_O, NULL},
	 { "CPoint___invert__", _wrap_CPoint___invert__, METH_O, NULL},
	 { "CPoint___eq__", _wrap_CPoint___eq__, METH_VARARGS, NULL},
	 { "CPoint___ne__", _wrap_CPoint___ne__, METH_VARARGS, NULL},
	 { "CPoint___add__", _wrap_CPoint___add__, METH_VARARGS, NULL},
	 { "CPoint___sub__", _wrap_CPoint___sub__, METH_VARARGS, NULL},
	 { "CPoint___mul__", _wrap_CPoint___mul__, METH_VARARGS, NULL},
	 { "CPoint___or__", _wrap_CPoint___or__, METH_VARARGS, NULL},
	 { "CPoint___xor__", _wrap_CPoint___xor__, METH_VARARGS, NULL},
	 { "CPoint___imul__", _wrap_CPoint___imul__, METH_VARARGS, NULL},
	 { "CPoint___itruediv__", _wrap_CPoint___itruediv__, METH_VARARGS, NULL},
	 { "CPoint___iadd__", _wrap_CPoint___iadd__, METH_VARARGS, NULL},
	 { "CPoint___isub__", _wrap_CPoint___isub__, METH_VARARGS, NULL},
	 { "CPoint___ixor__", _wrap_CPoint___ixor__, METH_VARARGS, NULL},
	 { "CPoint_distance", _wrap_CPoint_distance, METH_VARARGS, NULL},
	 { "CPoint_distance2", _wrap_CPoint_distance2, METH_VARARGS, NULL},
	 { "CPoint___call__", _wrap_CPoint___call__, METH_VARARGS, NULL},
	 { "CPoint_len", _wrap_CPoint_len, METH_O, NULL},
	 { "CPoint_len2", _wrap_CPoint_len2, METH_O, NULL},
	 { "CPoint_r", _wrap_CPoint_r, METH_O, NULL},
	 { "CPoint_theta", _wrap_CPoint_theta, METH_O, NULL},
	 { "CPoint_phi", _wrap_CPoint_phi, METH_O, NULL},
	 { "CPoint_ele", _wrap_CPoint_ele, METH_O, NULL},
	 { "CPoint_rotateBy", _wrap_CPoint_rotateBy, METH_VARARGS, NULL},
	 { "CPoint_dump", _wrap_CPoint_dump, METH_O, NULL},
	 { "CPoint_dumpPol", _wrap_CPoint_dumpPol, METH_O, NULL},
	 { "CPoint_normalize", _wrap_CPoint_normalize, METH_O, NULL},
	 { "CPoint_swigregister", CPoint_swigregister, METH_O, NULL},
	 { "CPoint_swiginit", CPoint_swiginit, METH_VARARGS, NULL},
	 { "new_CThread", _wrap_new_CThread, METH_NOARGS, NULL},
	 { "delete_CThread", _wrap_delete_CThread, METH_O, NULL},
	 { "CThread_MakeThread", _wrap_CThread_MakeThread, METH_NOARGS, NULL},
	 { "CThread_createThread", _wrap_CThread_createThread, METH_VARARGS, NULL},
	 { "CThread_run", _wrap_CThread_run, METH_O, NULL},
	 { "CThread_swigregister", CThread_swigregister, METH_O, NULL},
	 { "CThread_swiginit", CThread_swiginit, METH_VARARGS, NULL},
	 { "new_Window", _wrap_new_Window, METH_VARARGS, NULL},
	 { "delete_Window", _wrap_delete_Window, METH_O, NULL},
	 { "Window_setSize", _wrap_Window_setSize, METH_VARARGS, NULL},
	 { "Window_setGain", _wrap_Window_setGain, METH_VARARGS, NULL},
	 { "Window_window", _wrap_Window_window, METH_O, NULL},
	 { "Window_swigregister", Window_swigregister, METH_O, NULL},
	 { "Window_swiginit", Window_swiginit, METH_VARARGS, NULL},
	 { "new_RectangularWindow", _wrap_new_RectangularWindow, METH_VARARGS, NULL},
	 { "delete_RectangularWindow", _wrap_delete_RectangularWindow, METH_O, NULL},
	 { "RectangularWindow_swigregister", RectangularWindow_swigregister, METH_O, NULL},
	 { "RectangularWindow_swiginit", RectangularWindow_swiginit, METH_VARARGS, NULL},
	 { "new_TriangularWindow", _wrap_new_TriangularWindow, METH_VARARGS, NULL},
	 { "delete_TriangularWindow", _wrap_delete_TriangularWindow, METH_O, NULL},
	 { "TriangularWindow_swigregister", TriangularWindow_swigregister, METH_O, NULL},
	 { "TriangularWindow_swiginit", TriangularWindow_swiginit, METH_VARARGS, NULL},
	 { "new_HammingWindow", _wrap_new_HammingWindow, METH_VARARGS, NULL},
	 { "delete_HammingWindow", _wrap_delete_HammingWindow, METH_O, NULL},
	 { "HammingWindow_swigregister", HammingWindow_swigregister, METH_O, NULL},
	 { "HammingWindow_swiginit", HammingWindow_swiginit, METH_VARARGS, NULL},
	 { "new_HannWindow", _wrap_new_HannWindow, METH_VARARGS, NULL},
	 { "delete_HannWindow", _wrap_delete_HannWindow, METH_O, NULL},
	 { "HannWindow_swigregister", HannWindow_swigregister, METH_O, NULL},
	 { "HannWindow_swiginit", HannWindow_swiginit, METH_VARARGS, NULL},
	 { "new_BlackmanWindow", _wrap_new_BlackmanWindow, METH_VARARGS, NULL},
	 { "delete_BlackmanWindow", _wrap_delete_BlackmanWindow, METH_O, NULL},
	 { "BlackmanWindow_swigregister", BlackmanWindow_swigregister, METH_O, NULL},
	 { "BlackmanWindow_swiginit", BlackmanWindow_swiginit, METH_VARARGS, NULL},
	 { "new_BlackmanHarrisWindow", _wrap_new_BlackmanHarrisWindow, METH_VARARGS, NULL},
	 { "delete_BlackmanHarrisWindow", _wrap_delete_BlackmanHarrisWindow, METH_O, NULL},
	 { "BlackmanHarrisWindow_swigregister", BlackmanHarrisWindow_swigregister, METH_O, NULL},
	 { "BlackmanHarrisWindow_swiginit", BlackmanHarrisWindow_swiginit, METH_VARARGS, NULL},
	 { "new_WelchWindow", _wrap_new_WelchWindow, METH_VARARGS, NULL},
	 { "delete_WelchWindow", _wrap_delete_WelchWindow, METH_O, NULL},
	 { "WelchWindow_swigregister", WelchWindow_swigregister, METH_O, NULL},
	 { "WelchWindow_swiginit", WelchWindow_swiginit, METH_VARARGS, NULL},
	 { "new_LineSegment", _wrap_new_LineSegment, METH_VARARGS, NULL},
	 { "LineSegment_start", _wrap_LineSegment_start, METH_O, NULL},
	 { "LineSegment_end", _wrap_LineSegment_end, METH_O, NULL},
	 { "LineSegment_duration", _wrap_LineSegment_duration, METH_O, NULL},
	 { "LineSegment_currentFrame", _wrap_LineSegment_currentFrame, METH_O, NULL},
	 { "LineSegment_setEnd", _wrap_LineSegment_setEnd, METH_VARARGS, NULL},
	 { "LineSegment_setStart", _wrap_LineSegment_setStart, METH_VARARGS, NULL},
	 { "LineSegment_setDuration", _wrap_LineSegment_setDuration, METH_VARARGS, NULL},
	 { "LineSegment_setMode", _wrap_LineSegment_setMode, METH_VARARGS, NULL},
	 { "LineSegment_nextBuffer", _wrap_LineSegment_nextBuffer, METH_VARARGS, NULL},
	 { "LineSegment_reset", _wrap_LineSegment_reset, METH_O, NULL},
	 { "delete_LineSegment", _wrap_delete_LineSegment, METH_O, NULL},
	 { "LineSegment_swigregister", LineSegment_swigregister, METH_O, NULL},
	 { "LineSegment_swiginit", LineSegment_swiginit, METH_VARARGS, NULL},
	 { "new_Envelope", _wrap_new_Envelope, METH_VARARGS, NULL},
	 { "delete_Envelope", _wrap_delete_Envelope, METH_O, NULL},
	 { "Envelope_addBreakpoint", _wrap_Envelope_addBreakpoint, METH_VARARGS, NULL},
	 { "Envelope_setMode", _wrap_Envelope_setMode, METH_VARARGS, NULL},
	 { "Envelope_setDuration", _wrap_Envelope_setDuration, METH_VARARGS, NULL},
	 { "Envelope_scaleTimes", _wrap_Envelope_scaleTimes, METH_VARARGS, NULL},
	 { "Envelope_scaleValues", _wrap_Envelope_scaleValues, METH_VARARGS, NULL},
	 { "Envelope_reset", _wrap_Envelope_reset, METH_O, NULL},
	 { "Envelope_swigregister", Envelope_swigregister, METH_O, NULL},
	 { "Envelope_swiginit", Envelope_swiginit, METH_VARARGS, NULL},
	 { "new_ADSR", _wrap_new_ADSR, METH_VARARGS, NULL},
	 { "delete_ADSR", _wrap_delete_ADSR, METH_O, NULL},
	 { "ADSR_setDelay", _wrap_ADSR_setDelay, METH_VARARGS, NULL},
	 { "ADSR_setAttack", _wrap_ADSR_setAttack, METH_VARARGS, NULL},
	 { "ADSR_setDecay", _wrap_ADSR_setDecay, METH_VARARGS, NULL},
	 { "ADSR_setSustain", _wrap_ADSR_setSustain, METH_VARARGS, NULL},
	 { "ADSR_setRelease", _wrap_ADSR_setRelease, METH_VARARGS, NULL},
	 { "ADSR_release", _wrap_ADSR_release, METH_O, NULL},
	 { "ADSR_swigregister", ADSR_swigregister, METH_O, NULL},
	 { "ADSR_swiginit", ADSR_swiginit, METH_VARARGS, NULL},
	 { "new_AR", _wrap_new_AR, METH_VARARGS, NULL},
	 { "delete_AR", _wrap_delete_AR, METH_O, NULL},
	 { "AR_setDelay", _wrap_AR_setDelay, METH_VARARGS, NULL},
	 { "AR_setAttack", _wrap_AR_setAttack, METH_VARARGS, NULL},
	 { "AR_setRelease", _wrap_AR_setRelease, METH_VARARGS, NULL},
	 { "AR_setAll", _wrap_AR_setAll, METH_VARARGS, NULL},
	 { "AR_release", _wrap_AR_release, METH_O, NULL},
	 { "AR_swigregister", AR_swigregister, METH_O, NULL},
	 { "AR_swiginit", AR_swiginit, METH_VARARGS, NULL},
	 { "new_Triangle", _wrap_new_Triangle, METH_VARARGS, NULL},
	 { "delete_Triangle", _wrap_delete_Triangle, METH_O, NULL},
	 { "Triangle_swigregister", Triangle_swigregister, METH_O, NULL},
	 { "Triangle_swiginit", Triangle_swiginit, METH_VARARGS, NULL},
	 { "new_RandEnvelope", _wrap_new_RandEnvelope, METH_VARARGS, NULL},
	 { "delete_RandEnvelope", _wrap_delete_RandEnvelope, METH_O, NULL},
	 { "RandEnvelope_setWalk", _wrap_RandEnvelope_setWalk, METH_VARARGS, NULL},
	 { "RandEnvelope_setAmplitude", _wrap_RandEnvelope_setAmplitude, METH_VARARGS, NULL},
	 { "RandEnvelope_setFrequency", _wrap_RandEnvelope_setFrequency, METH_VARARGS, NULL},
	 { "RandEnvelope_setStep", _wrap_RandEnvelope_setStep, METH_VARARGS, NULL},
	 { "RandEnvelope_setOffset", _wrap_RandEnvelope_setOffset, METH_VARARGS, NULL},
	 { "RandEnvelope_swigregister", RandEnvelope_swigregister, METH_O, NULL},
	 { "RandEnvelope_swiginit", RandEnvelope_swiginit, METH_VARARGS, NULL},
	 { "new_Oscillator", _wrap_new_Oscillator, METH_VARARGS, NULL},
	 { "delete_Oscillator", _wrap_delete_Oscillator, METH_O, NULL},
	 { "Oscillator_swigregister", Oscillator_swigregister, METH_O, NULL},
	 { "Oscillator_swiginit", Oscillator_swiginit, METH_VARARGS, NULL},
	 { "new_WavetableOscillator", _wrap_new_WavetableOscillator, METH_VARARGS, NULL},
	 { "delete_WavetableOscillator", _wrap_delete_WavetableOscillator, METH_O, NULL},
	 { "WavetableOscillator_setWaveform", _wrap_WavetableOscillator_setWaveform, METH_VARARGS, NULL},
	 { "WavetableOscillator_setInterpolate", _wrap_WavetableOscillator_setInterpolate, METH_VARARGS, NULL},
	 { "WavetableOscillator_mInterpolate_set", _wrap_WavetableOscillator_mInterpolate_set, METH_VARARGS, NULL},
	 { "WavetableOscillator_mInterpolate_get", _wrap_WavetableOscillator_mInterpolate_get, METH_O, NULL},
	 { "WavetableOscillator_mWavetable_set", _wrap_WavetableOscillator_mWavetable_set, METH_VARARGS, NULL},
	 { "WavetableOscillator_mWavetable_get", _wrap_WavetableOscillator_mWavetable_get, METH_O, NULL},
	 { "WavetableOscillator_swigregister", WavetableOscillator_swigregister, METH_O, NULL},
	 { "WavetableOscillator_swiginit", WavetableOscillator_swiginit, METH_VARARGS, NULL},
	 { "CompOrCacheOscillator_createCache", _wrap_CompOrCacheOscillator_createCache, METH_O, NULL},
	 { "delete_CompOrCacheOscillator", _wrap_delete_CompOrCacheOscillator, METH_O, NULL},
	 { "CompOrCacheOscillator_swigregister", CompOrCacheOscillator_swigregister, METH_O, NULL},
	 { "new_Sine", _wrap_new_Sine, METH_VARARGS, NULL},
	 { "delete_Sine", _wrap_delete_Sine, METH_O, NULL},
	 { "Sine_swigregister", Sine_swigregister, METH_O, NULL},
	 { "Sine_swiginit", Sine_swiginit, METH_VARARGS, NULL},
	 { "new_FSine", _wrap_new_FSine, METH_VARARGS, NULL},
	 { "delete_FSine", _wrap_delete_FSine, METH_O, NULL},
	 { "FSine_swigregister", FSine_swigregister, METH_O, NULL},
	 { "FSine_swiginit", FSine_swiginit, METH_VARARGS, NULL},
	 { "new_Sawtooth", _wrap_new_Sawtooth, METH_VARARGS, NULL},
	 { "delete_Sawtooth", _wrap_delete_Sawtooth, METH_O, NULL},
	 { "Sawtooth_swigregister", Sawtooth_swigregister, METH_O, NULL},
	 { "Sawtooth_swiginit", Sawtooth_swiginit, METH_VARARGS, NULL},
	 { "new_Square", _wrap_new_Square, METH_VARARGS, NULL},
	 { "delete_Square", _wrap_delete_Square, METH_O, NULL},
	 { "Square_swigregister", Square_swigregister, METH_O, NULL},
	 { "Square_swiginit", Square_swiginit, METH_VARARGS, NULL},
	 { "new_Impulse", _wrap_new_Impulse, METH_VARARGS, NULL},
	 { "delete_Impulse", _wrap_delete_Impulse, METH_O, NULL},
	 { "Impulse_swigregister", Impulse_swigregister, METH_O, NULL},
	 { "Impulse_swiginit", Impulse_swiginit, METH_VARARGS, NULL},
	 { "Partial_number_set", _wrap_Partial_number_set, METH_VARARGS, NULL},
	 { "Partial_number_get", _wrap_Partial_number_get, METH_O, NULL},
	 { "Partial_amplitude_set", _wrap_Partial_amplitude_set, METH_VARARGS, NULL},
	 { "Partial_amplitude_get", _wrap_Partial_amplitude_get, METH_O, NULL},
	 { "Partial_phase_set", _wrap_Partial_phase_set, METH_VARARGS, NULL},
	 { "Partial_phase_get", _wrap_Partial_phase_get, METH_O, NULL},
	 { "new_Partial", _wrap_new_Partial, METH_NOARGS, NULL},
	 { "delete_Partial", _wrap_delete_Partial, METH_O, NULL},
	 { "Partial_swigregister", Partial_swigregister, METH_O, NULL},
	 { "Partial_swiginit", Partial_swiginit, METH_VARARGS, NULL},
	 { "new_SumOfSines", _wrap_new_SumOfSines, METH_VARARGS, NULL},
	 { "SumOfSines_addPartials", _wrap_SumOfSines_addPartials, METH_VARARGS, NULL},
	 { "SumOfSines_addPartial", _wrap_SumOfSines_addPartial, METH_VARARGS, NULL},
	 { "SumOfSines_clearPartials", _wrap_SumOfSines_clearPartials, METH_O, NULL},
	 { "delete_SumOfSines", _wrap_delete_SumOfSines, METH_O, NULL},
	 { "SumOfSines_swigregister", SumOfSines_swigregister, METH_O, NULL},
	 { "SumOfSines_swiginit", SumOfSines_swiginit, METH_VARARGS, NULL},
	 { "Noise_generateRandomNumber", _wrap_Noise_generateRandomNumber, METH_O, NULL},
	 { "Noise_generateNormalizedRandomNumber", _wrap_Noise_generateNormalizedRandomNumber, METH_O, NULL},
	 { "Noise_setSeed", _wrap_Noise_setSeed, METH_VARARGS, NULL},
	 { "new_Noise", _wrap_new_Noise, METH_VARARGS, NULL},
	 { "delete_Noise", _wrap_delete_Noise, METH_O, NULL},
	 { "Noise_swigregister", Noise_swigregister, METH_O, NULL},
	 { "Noise_swiginit", Noise_swiginit, METH_VARARGS, NULL},
	 { "new_WhiteNoise", _wrap_new_WhiteNoise, METH_VARARGS, NULL},
	 { "delete_WhiteNoise", _wrap_delete_WhiteNoise, METH_O, NULL},
	 { "WhiteNoise_swigregister", WhiteNoise_swigregister, METH_O, NULL},
	 { "WhiteNoise_swiginit", WhiteNoise_swiginit, METH_VARARGS, NULL},
	 { "new_PinkNoise", _wrap_new_PinkNoise, METH_VARARGS, NULL},
	 { "delete_PinkNoise", _wrap_delete_PinkNoise, METH_O, NULL},
	 { "PinkNoise_nextPink", _wrap_PinkNoise_nextPink, METH_O, NULL},
	 { "PinkNoise_swigregister", PinkNoise_swigregister, METH_O, NULL},
	 { "PinkNoise_swiginit", PinkNoise_swiginit, METH_VARARGS, NULL},
	 { "new_FFT", _wrap_new_FFT, METH_VARARGS, NULL},
	 { "delete_FFT", _wrap_delete_FFT, METH_O, NULL},
	 { "FFT_fftSize", _wrap_FFT_fftSize, METH_O, NULL},
	 { "FFT_mOverwriteOutput_set", _wrap_FFT_mOverwriteOutput_set, METH_VARARGS, NULL},
	 { "FFT_mOverwriteOutput_get", _wrap_FFT_mOverwriteOutput_get, METH_O, NULL},
	 { "FFT_swigregister", FFT_swigregister, METH_O, NULL},
	 { "FFT_swiginit", FFT_swiginit, METH_VARARGS, NULL},
	 { "new_IFFT", _wrap_new_IFFT, METH_VARARGS, NULL},
	 { "delete_IFFT", _wrap_delete_IFFT, METH_O, NULL},
	 { "IFFT_fftSize", _wrap_IFFT_fftSize, METH_O, NULL},
	 { "IFFT_binValue", _wrap_IFFT_binValue, METH_VARARGS, NULL},
	 { "IFFT_binValueMagPhase", _wrap_IFFT_binValueMagPhase, METH_VARARGS, NULL},
	 { "IFFT_setBin", _wrap_IFFT_setBin, METH_VARARGS, NULL},
	 { "IFFT_setBins", _wrap_IFFT_setBins, METH_VARARGS, NULL},
	 { "IFFT_setBinMagPhase", _wrap_IFFT_setBinMagPhase, METH_VARARGS, NULL},
	 { "IFFT_setBinsMagPhase", _wrap_IFFT_setBinsMagPhase, METH_VARARGS, NULL},
	 { "IFFT_swigregister", IFFT_swigregister, METH_O, NULL},
	 { "IFFT_swiginit", IFFT_swiginit, METH_VARARGS, NULL},
	 { "new_KarplusString", _wrap_new_KarplusString, METH_VARARGS, NULL},
	 { "KarplusString_setFrequency", _wrap_KarplusString_setFrequency, METH_VARARGS, NULL},
	 { "KarplusString_mDelayLine_set", _wrap_KarplusString_mDelayLine_set, METH_VARARGS, NULL},
	 { "KarplusString_mDelayLine_get", _wrap_KarplusString_mDelayLine_get, METH_O, NULL},
	 { "delete_KarplusString", _wrap_delete_KarplusString, METH_O, NULL},
	 { "KarplusString_swigregister", KarplusString_swigregister, METH_O, NULL},
	 { "KarplusString_swiginit", KarplusString_swiginit, METH_VARARGS, NULL},
	 { "SHARCSpectrum__note_name_set", _wrap_SHARCSpectrum__note_name_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__note_name_get", _wrap_SHARCSpectrum__note_name_get, METH_O, NULL},
	 { "SHARCSpectrum__midi_key_set", _wrap_SHARCSpectrum__midi_key_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__midi_key_get", _wrap_SHARCSpectrum__midi_key_get, METH_O, NULL},
	 { "SHARCSpectrum__nom_pitch_set", _wrap_SHARCSpectrum__nom_pitch_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__nom_pitch_get", _wrap_SHARCSpectrum__nom_pitch_get, METH_O, NULL},
	 { "SHARCSpectrum__actual_pitch_set", _wrap_SHARCSpectrum__actual_pitch_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__actual_pitch_get", _wrap_SHARCSpectrum__actual_pitch_get, METH_O, NULL},
	 { "SHARCSpectrum__max_amp_set", _wrap_SHARCSpectrum__max_amp_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__max_amp_get", _wrap_SHARCSpectrum__max_amp_get, METH_O, NULL},
	 { "SHARCSpectrum__num_partials_set", _wrap_SHARCSpectrum__num_partials_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__num_partials_get", _wrap_SHARCSpectrum__num_partials_get, METH_O, NULL},
	 { "SHARCSpectrum__partials_set", _wrap_SHARCSpectrum__partials_set, METH_VARARGS, NULL},
	 { "SHARCSpectrum__partials_get", _wrap_SHARCSpectrum__partials_get, METH_O, NULL},
	 { "new_SHARCSpectrum", _wrap_new_SHARCSpectrum, METH_VARARGS, NULL},
	 { "delete_SHARCSpectrum", _wrap_delete_SHARCSpectrum, METH_O, NULL},
	 { "SHARCSpectrum_read_from_file", _wrap_SHARCSpectrum_read_from_file, METH_VARARGS, NULL},
	 { "SHARCSpectrum_count_partials", _wrap_SHARCSpectrum_count_partials, METH_O, NULL},
	 { "SHARCSpectrum_dump_example", _wrap_SHARCSpectrum_dump_example, METH_O, NULL},
	 { "SHARCSpectrum_swigregister", SHARCSpectrum_swigregister, METH_O, NULL},
	 { "SHARCSpectrum_swiginit", SHARCSpectrum_swiginit, METH_VARARGS, NULL},
	 { "SHARCInstrument__name_set", _wrap_SHARCInstrument__name_set, METH_VARARGS, NULL},
	 { "SHARCInstrument__name_get", _wrap_SHARCInstrument__name_get, METH_O, NULL},
	 { "SHARCInstrument__num_spectra_set", _wrap_SHARCInstrument__num_spectra_set, METH_VARARGS, NULL},
	 { "SHARCInstrument__num_spectra_get", _wrap_SHARCInstrument__num_spectra_get, METH_O, NULL},
	 { "SHARCInstrument__spectra_set", _wrap_SHARCInstrument__spectra_set, METH_VARARGS, NULL},
	 { "SHARCInstrument__spectra_get", _wrap_SHARCInstrument__spectra_get, METH_O, NULL},
	 { "new_SHARCInstrument", _wrap_new_SHARCInstrument, METH_VARARGS, NULL},
	 { "delete_SHARCInstrument", _wrap_delete_SHARCInstrument, METH_O, NULL},
	 { "SHARCInstrument_spectrum_names", _wrap_SHARCInstrument_spectrum_names, METH_O, NULL},
	 { "SHARCInstrument_spectrum_keys", _wrap_SHARCInstrument_spectrum_keys, METH_O, NULL},
	 { "SHARCInstrument_spectrum_frequencies", _wrap_SHARCInstrument_spectrum_frequencies, METH_O, NULL},
	 { "SHARCInstrument_spectrum_named", _wrap_SHARCInstrument_spectrum_named, METH_VARARGS, NULL},
	 { "SHARCInstrument_spectrum_with_key", _wrap_SHARCInstrument_spectrum_with_key, METH_VARARGS, NULL},
	 { "SHARCInstrument_spectrum_with_frequency", _wrap_SHARCInstrument_spectrum_with_frequency, METH_VARARGS, NULL},
	 { "SHARCInstrument_count_spectra", _wrap_SHARCInstrument_count_spectra, METH_O, NULL},
	 { "SHARCInstrument_count_partials", _wrap_SHARCInstrument_count_partials, METH_O, NULL},
	 { "SHARCInstrument_dump_example", _wrap_SHARCInstrument_dump_example, METH_O, NULL},
	 { "SHARCInstrument_swigregister", SHARCInstrument_swigregister, METH_O, NULL},
	 { "SHARCInstrument_swiginit", SHARCInstrument_swiginit, METH_VARARGS, NULL},
	 { "SHARCLibrary__num_instruments_set", _wrap_SHARCLibrary__num_instruments_set, METH_VARARGS, NULL},
	 { "SHARCLibrary__num_instruments_get", _wrap_SHARCLibrary__num_instruments_get, METH_O, NULL},
	 { "SHARCLibrary__instruments_set", _wrap_SHARCLibrary__instruments_set, METH_VARARGS, NULL},
	 { "SHARCLibrary__instruments_get", _wrap_SHARCLibrary__instruments_get, METH_O, NULL},
	 { "new_SHARCLibrary", _wrap_new_SHARCLibrary, METH_VARARGS, NULL},
	 { "delete_SHARCLibrary", _wrap_delete_SHARCLibrary, METH_O, NULL},
	 { "SHARCLibrary_instrument_names", _wrap_SHARCLibrary_instrument_names, METH_O, NULL},
	 { "SHARCLibrary_instrument_named", _wrap_SHARCLibrary_instrument_named, METH_VARARGS, NULL},
	 { "SHARCLibrary_spectrum_named", _wrap_SHARCLibrary_spectrum_named, METH_VARARGS, NULL},
	 { "SHARCLibrary_dump", _wrap_SHARCLibrary_dump, METH_O, NULL},
	 { "SHARCLibrary_dump_stats", _wrap_SHARCLibrary_dump_stats, METH_O, NULL},
	 { "SHARCLibrary_dump_example", _wrap_SHARCLibrary_dump_example, METH_O, NULL},
	 { "SHARCLibrary_sSHARCLib_get", _wrap_SHARCLibrary_sSHARCLib_get, METH_VARARGS, NULL},
	 { "SHARCLibrary_sSHARCLib_set", _wrap_SHARCLibrary_sSHARCLib_set, METH_O, NULL},
	 { "SHARCLibrary_loadDefault", _wrap_SHARCLibrary_loadDefault, METH_NOARGS, NULL},
	 { "SHARCLibrary_library", _wrap_SHARCLibrary_library, METH_NOARGS, NULL},
	 { "SHARCLibrary_instrument", _wrap_SHARCLibrary_instrument, METH_VARARGS, NULL},
	 { "SHARCLibrary_spectrum", _wrap_SHARCLibrary_spectrum, METH_VARARGS, NULL},
	 { "SHARCLibrary_swigregister", SHARCLibrary_swigregister, METH_O, NULL},
	 { "SHARCLibrary_swiginit", SHARCLibrary_swiginit, METH_VARARGS, NULL},
	 { "delete_BinaryOp", _wrap_delete_BinaryOp, METH_O, NULL},
	 { "BinaryOp_setOperand", _wrap_BinaryOp_setOperand, METH_VARARGS, NULL},
	 { "BinaryOp_swigregister", BinaryOp_swigregister, METH_O, NULL},
	 { "new_AddOp", _wrap_new_AddOp, METH_VARARGS, NULL},
	 { "delete_AddOp", _wrap_delete_AddOp, METH_O, NULL},
	 { "AddOp_swigregister", AddOp_swigregister, METH_O, NULL},
	 { "AddOp_swiginit", AddOp_swiginit, METH_VARARGS, NULL},
	 { "new_MulOp", _wrap_new_MulOp, METH_VARARGS, NULL},
	 { "MulOp_setScale", _wrap_MulOp_setScale, METH_O, NULL},
	 { "delete_MulOp", _wrap_delete_MulOp, METH_O, NULL},
	 { "MulOp_swigregister", MulOp_swigregister, METH_O, NULL},
	 { "MulOp_swiginit", MulOp_swiginit, METH_VARARGS, NULL},
	 { "new_InOut", _wrap_new_InOut, METH_VARARGS, NULL},
	 { "delete_InOut", _wrap_delete_InOut, METH_O, NULL},
	 { "InOut_setInChan", _wrap_InOut_setInChan, METH_VARARGS, NULL},
	 { "InOut_setOutChan", _wrap_InOut_setOutChan, METH_VARARGS, NULL},
	 { "InOut_getInChan", _wrap_InOut_getInChan, METH_O, NULL},
	 { "InOut_getOutChan", _wrap_InOut_getOutChan, METH_O, NULL},
	 { "InOut_setChanMap", _wrap_InOut_setChanMap, METH_VARARGS, NULL},
	 { "InOut_setChanGains", _wrap_InOut_setChanGains, METH_VARARGS, NULL},
	 { "InOut_setGain", _wrap_InOut_setGain, METH_VARARGS, NULL},
	 { "InOut_swigregister", InOut_swigregister, METH_O, NULL},
	 { "InOut_swiginit", InOut_swiginit, METH_VARARGS, NULL},
	 { "new_FrequencyAmount", _wrap_new_FrequencyAmount, METH_NOARGS, NULL},
	 { "delete_FrequencyAmount", _wrap_delete_FrequencyAmount, METH_O, NULL},
	 { "FrequencyAmount_setFrequency", _wrap_FrequencyAmount_setFrequency, METH_VARARGS, NULL},
	 { "FrequencyAmount_getFrequency", _wrap_FrequencyAmount_getFrequency, METH_O, NULL},
	 { "FrequencyAmount_setAmount", _wrap_FrequencyAmount_setAmount, METH_VARARGS, NULL},
	 { "FrequencyAmount_swigregister", FrequencyAmount_swigregister, METH_O, NULL},
	 { "FrequencyAmount_swiginit", FrequencyAmount_swiginit, METH_VARARGS, NULL},
	 { "new_Filter", _wrap_new_Filter, METH_VARARGS, NULL},
	 { "delete_Filter", _wrap_delete_Filter, METH_O, NULL},
	 { "Filter_clear", _wrap_Filter_clear, METH_O, NULL},
	 { "Filter_setupCoeffs", _wrap_Filter_setupCoeffs, METH_VARARGS, NULL},
	 { "Filter_swigregister", Filter_swigregister, METH_O, NULL},
	 { "Filter_swiginit", Filter_swiginit, METH_VARARGS, NULL},
	 { "new_Butter", _wrap_new_Butter, METH_VARARGS, NULL},
	 { "delete_Butter", _wrap_delete_Butter, METH_O, NULL},
	 { "Butter_swigregister", Butter_swigregister, METH_O, NULL},
	 { "Butter_swiginit", Butter_swiginit, METH_VARARGS, NULL},
	 { "new_Biquad", _wrap_new_Biquad, METH_VARARGS, NULL},
	 { "Biquad_setQ", _wrap_Biquad_setQ, METH_VARARGS, NULL},
	 { "Biquad_setFrq", _wrap_Biquad_setFrq, METH_VARARGS, NULL},
	 { "Biquad_incrFrq", _wrap_Biquad_incrFrq, METH_VARARGS, NULL},
	 { "Biquad_setBoost", _wrap_Biquad_setBoost, METH_VARARGS, NULL},
	 { "Biquad_incrBoost", _wrap_Biquad_incrBoost, METH_VARARGS, NULL},
	 { "delete_Biquad", _wrap_delete_Biquad, METH_O, NULL},
	 { "Biquad_swigregister", Biquad_swigregister, METH_O, NULL},
	 { "Biquad_swiginit", Biquad_swiginit, METH_VARARGS, NULL},
	 { "new_Formant", _wrap_new_Formant, METH_VARARGS, NULL},
	 { "delete_Formant", _wrap_delete_Formant, METH_O, NULL},
	 { "Formant_setNormalize", _wrap_Formant_setNormalize, METH_VARARGS, NULL},
	 { "Formant_swigregister", Formant_swigregister, METH_O, NULL},
	 { "Formant_swiginit", Formant_swiginit, METH_VARARGS, NULL},
	 { "new_Notch", _wrap_new_Notch, METH_VARARGS, NULL},
	 { "delete_Notch", _wrap_delete_Notch, METH_O, NULL},
	 { "Notch_swigregister", Notch_swigregister, METH_O, NULL},
	 { "Notch_swiginit", Notch_swiginit, METH_VARARGS, NULL},
	 { "new_Allpass", _wrap_new_Allpass, METH_VARARGS, NULL},
	 { "delete_Allpass", _wrap_delete_Allpass, METH_O, NULL},
	 { "Allpass_swigregister", Allpass_swigregister, METH_O, NULL},
	 { "Allpass_swiginit", Allpass_swiginit, METH_VARARGS, NULL},
	 { "new_Moog", _wrap_new_Moog, METH_VARARGS, NULL},
	 { "delete_Moog", _wrap_delete_Moog, METH_O, NULL},
	 { "Moog_swigregister", Moog_swigregister, METH_O, NULL},
	 { "Moog_swiginit", Moog_swiginit, METH_VARARGS, NULL},
	 { "new_DelayLine", _wrap_new_DelayLine, METH_O, NULL},
	 { "DelayLine_delayTime", _wrap_DelayLine_delayTime, METH_O, NULL},
	 { "DelayLine_delayLength", _wrap_DelayLine_delayLength, METH_O, NULL},
	 { "DelayLine_setDelayTime", _wrap_DelayLine_setDelayTime, METH_VARARGS, NULL},
	 { "DelayLine_setDelayLength", _wrap_DelayLine_setDelayLength, METH_VARARGS, NULL},
	 { "delete_DelayLine", _wrap_delete_DelayLine, METH_O, NULL},
	 { "DelayLine_swigregister", DelayLine_swigregister, METH_O, NULL},
	 { "DelayLine_swiginit", DelayLine_swiginit, METH_VARARGS, NULL},
	 { "new_Mixer", _wrap_new_Mixer, METH_VARARGS, NULL},
	 { "delete_Mixer", _wrap_delete_Mixer, METH_O, NULL},
	 { "Mixer_getInputs", _wrap_Mixer_getInputs, METH_O, NULL},
	 { "Mixer_getNumInputs", _wrap_Mixer_getNumInputs, METH_O, NULL},
	 { "Mixer_addInput", _wrap_Mixer_addInput, METH_VARARGS, NULL},
	 { "Mixer_removeInput", _wrap_Mixer_removeInput, METH_VARARGS, NULL},
	 { "Mixer_deleteInputs", _wrap_Mixer_deleteInputs, METH_O, NULL},
	 { "Mixer_scaleInput", _wrap_Mixer_scaleInput, METH_VARARGS, NULL},
	 { "Mixer_activeSources", _wrap_Mixer_activeSources, METH_O, NULL},
	 { "Mixer_swigregister", Mixer_swigregister, METH_O, NULL},
	 { "Mixer_swiginit", Mixer_swiginit, METH_VARARGS, NULL},
	 { "new_Panner", _wrap_new_Panner, METH_VARARGS, NULL},
	 { "delete_Panner", _wrap_delete_Panner, METH_O, NULL},
	 { "Panner_setPosition", _wrap_Panner_setPosition, METH_VARARGS, NULL},
	 { "Panner_position", _wrap_Panner_position, METH_O, NULL},
	 { "Panner_numChannels", _wrap_Panner_numChannels, METH_O, NULL},
	 { "Panner_swigregister", Panner_swigregister, METH_O, NULL},
	 { "Panner_swiginit", Panner_swiginit, METH_VARARGS, NULL},
	 { "new_NtoMPanner", _wrap_new_NtoMPanner, METH_VARARGS, NULL},
	 { "delete_NtoMPanner", _wrap_delete_NtoMPanner, METH_O, NULL},
	 { "NtoMPanner_init_stereo", _wrap_NtoMPanner_init_stereo, METH_VARARGS, NULL},
	 { "NtoMPanner_init_quad", _wrap_NtoMPanner_init_quad, METH_VARARGS, NULL},
	 { "NtoMPanner_init_5point1", _wrap_NtoMPanner_init_5point1, METH_VARARGS, NULL},
	 { "NtoMPanner_init_6ch", _wrap_NtoMPanner_init_6ch, METH_VARARGS, NULL},
	 { "NtoMPanner_setX", _wrap_NtoMPanner_setX, METH_VARARGS, NULL},
	 { "NtoMPanner_setY", _wrap_NtoMPanner_setY, METH_VARARGS, NULL},
	 { "NtoMPanner_swigregister", NtoMPanner_swigregister, METH_O, NULL},
	 { "NtoMPanner_swiginit", NtoMPanner_swiginit, METH_VARARGS, NULL},
	 { "new_StereoWidth", _wrap_new_StereoWidth, METH_NOARGS, NULL},
	 { "delete_StereoWidth", _wrap_delete_StereoWidth, METH_O, NULL},
	 { "StereoWidth_setWidth", _wrap_StereoWidth_setWidth, METH_VARARGS, NULL},
	 { "StereoWidth_setPan", _wrap_StereoWidth_setPan, METH_VARARGS, NULL},
	 { "StereoWidth_setGain", _wrap_StereoWidth_setGain, METH_VARARGS, NULL},
	 { "StereoWidth_swigregister", StereoWidth_swigregister, METH_O, NULL},
	 { "StereoWidth_swiginit", StereoWidth_swiginit, METH_VARARGS, NULL},
	 { "new_Convolver", _wrap_new_Convolver, METH_VARARGS, NULL},
	 { "delete_Convolver", _wrap_delete_Convolver, METH_O, NULL},
	 { "Convolver_setIRFile", _wrap_Convolver_setIRFile, METH_VARARGS, NULL},
	 { "Convolver_swigregister", Convolver_swigregister, METH_O, NULL},
	 { "Convolver_swiginit", Convolver_swiginit, METH_VARARGS, NULL},
	 { "new_FilterSpecification", _wrap_new_FilterSpecification, METH_VARARGS, NULL},
	 { "delete_FilterSpecification", _wrap_delete_FilterSpecification, METH_O, NULL},
	 { "FilterSpecification_setFrequencies", _wrap_FilterSpecification_setFrequencies, METH_VARARGS, NULL},
	 { "FilterSpecification_setResponses", _wrap_FilterSpecification_setResponses, METH_VARARGS, NULL},
	 { "FilterSpecification_setWeights", _wrap_FilterSpecification_setWeights, METH_VARARGS, NULL},
	 { "FilterSpecification_setNumTaps", _wrap_FilterSpecification_setNumTaps, METH_VARARGS, NULL},
	 { "FilterSpecification_mNumTaps_set", _wrap_FilterSpecification_mNumTaps_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mNumTaps_get", _wrap_FilterSpecification_mNumTaps_get, METH_O, NULL},
	 { "FilterSpecification_planFilter", _wrap_FilterSpecification_planFilter, METH_O, NULL},
	 { "FilterSpecification_mTapData_set", _wrap_FilterSpecification_mTapData_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mTapData_get", _wrap_FilterSpecification_mTapData_get, METH_O, NULL},
	 { "FilterSpecification_mNumBands_set", _wrap_FilterSpecification_mNumBands_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mNumBands_get", _wrap_FilterSpecification_mNumBands_get, METH_O, NULL},
	 { "FilterSpecification_mFrequencies_set", _wrap_FilterSpecification_mFrequencies_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mFrequencies_get", _wrap_FilterSpecification_mFrequencies_get, METH_O, NULL},
	 { "FilterSpecification_mResponses_set", _wrap_FilterSpecification_mResponses_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mResponses_get", _wrap_FilterSpecification_mResponses_get, METH_O, NULL},
	 { "FilterSpecification_mWeights_set", _wrap_FilterSpecification_mWeights_set, METH_VARARGS, NULL},
	 { "FilterSpecification_mWeights_get", _wrap_FilterSpecification_mWeights_get, METH_O, NULL},
	 { "FilterSpecification_swigregister", FilterSpecification_swigregister, METH_O, NULL},
	 { "FilterSpecification_swiginit", FilterSpecification_swiginit, METH_VARARGS, NULL},
	 { "new_FIR", _wrap_new_FIR, METH_VARARGS, NULL},
	 { "delete_FIR", _wrap_delete_FIR, METH_O, NULL},
	 { "FIR_setTaps", _wrap_FIR_setTaps, METH_VARARGS, NULL},
	 { "FIR_readTaps", _wrap_FIR_readTaps, METH_VARARGS, NULL},
	 { "FIR_print_taps", _wrap_FIR_print_taps, METH_O, NULL},
	 { "FIR_swigregister", FIR_swigregister, METH_O, NULL},
	 { "FIR_swiginit", FIR_swiginit, METH_VARARGS, NULL},
	 { "new_Freeverb", _wrap_new_Freeverb, METH_O, NULL},
	 { "delete_Freeverb", _wrap_delete_Freeverb, METH_O, NULL},
	 { "Freeverb_setRoomSize", _wrap_Freeverb_setRoomSize, METH_VARARGS, NULL},
	 { "Freeverb_roomSize", _wrap_Freeverb_roomSize, METH_O, NULL},
	 { "Freeverb_dampening", _wrap_Freeverb_dampening, METH_O, NULL},
	 { "Freeverb_setDampening", _wrap_Freeverb_setDampening, METH_VARARGS, NULL},
	 { "Freeverb_setWetLevel", _wrap_Freeverb_setWetLevel, METH_VARARGS, NULL},
	 { "Freeverb_wetLevel", _wrap_Freeverb_wetLevel, METH_O, NULL},
	 { "Freeverb_setDryLevel", _wrap_Freeverb_setDryLevel, METH_VARARGS, NULL},
	 { "Freeverb_dryLevel", _wrap_Freeverb_dryLevel, METH_O, NULL},
	 { "Freeverb_setWidth", _wrap_Freeverb_setWidth, METH_VARARGS, NULL},
	 { "Freeverb_width", _wrap_Freeverb_width, METH_O, NULL},
	 { "Freeverb_swigregister", Freeverb_swigregister, METH_O, NULL},
	 { "Freeverb_swiginit", Freeverb_swiginit, METH_VARARGS, NULL},
	 { "new_Comb", _wrap_new_Comb, METH_NOARGS, NULL},
	 { "Comb_mute", _wrap_Comb_mute, METH_O, NULL},
	 { "Comb_damp", _wrap_Comb_damp, METH_O, NULL},
	 { "Comb_feedback", _wrap_Comb_feedback, METH_O, NULL},
	 { "Comb_setDamp", _wrap_Comb_setDamp, METH_VARARGS, NULL},
	 { "Comb_setFeedback", _wrap_Comb_setFeedback, METH_VARARGS, NULL},
	 { "Comb_setBuffer", _wrap_Comb_setBuffer, METH_VARARGS, NULL},
	 { "Comb_process", _wrap_Comb_process, METH_VARARGS, NULL},
	 { "delete_Comb", _wrap_delete_Comb, METH_O, NULL},
	 { "Comb_swigregister", Comb_swigregister, METH_O, NULL},
	 { "Comb_swiginit", Comb_swiginit, METH_VARARGS, NULL},
	 { "new_FAllpass", _wrap_new_FAllpass, METH_NOARGS, NULL},
	 { "FAllpass_mute", _wrap_FAllpass_mute, METH_O, NULL},
	 { "FAllpass_feedback", _wrap_FAllpass_feedback, METH_O, NULL},
	 { "FAllpass_setFeedback", _wrap_FAllpass_setFeedback, METH_VARARGS, NULL},
	 { "FAllpass_setBuffer", _wrap_FAllpass_setBuffer, METH_VARARGS, NULL},
	 { "FAllpass_process", _wrap_FAllpass_process, METH_VARARGS, NULL},
	 { "delete_FAllpass", _wrap_delete_FAllpass, METH_O, NULL},
	 { "FAllpass_swigregister", FAllpass_swigregister, METH_O, NULL},
	 { "FAllpass_swiginit", FAllpass_swiginit, METH_VARARGS, NULL},
	 { "new_Stereoverb", _wrap_new_Stereoverb, METH_O, NULL},
	 { "delete_Stereoverb", _wrap_delete_Stereoverb, METH_O, NULL},
	 { "Stereoverb_setRoomSize", _wrap_Stereoverb_setRoomSize, METH_VARARGS, NULL},
	 { "Stereoverb_setDampening", _wrap_Stereoverb_setDampening, METH_VARARGS, NULL},
	 { "Stereoverb_setWetLevel", _wrap_Stereoverb_setWetLevel, METH_VARARGS, NULL},
	 { "Stereoverb_setDryLevel", _wrap_Stereoverb_setDryLevel, METH_VARARGS, NULL},
	 { "Stereoverb_setWidth", _wrap_Stereoverb_setWidth, METH_VARARGS, NULL},
	 { "Stereoverb_swigregister", Stereoverb_swigregister, METH_O, NULL},
	 { "Stereoverb_swiginit", Stereoverb_swiginit, METH_VARARGS, NULL},
	 { "delete_AudioIODeviceCallback", _wrap_delete_AudioIODeviceCallback, METH_O, NULL},
	 { "AudioIODeviceCallback_audioDeviceIOCallback", _wrap_AudioIODeviceCallback_audioDeviceIOCallback, METH_VARARGS, NULL},
	 { "AudioIODeviceCallback_audioDeviceAboutToStart", _wrap_AudioIODeviceCallback_audioDeviceAboutToStart, METH_VARARGS, NULL},
	 { "AudioIODeviceCallback_audioDeviceStopped", _wrap_AudioIODeviceCallback_audioDeviceStopped, METH_O, NULL},
	 { "AudioIODeviceCallback_audioDeviceError", _wrap_AudioIODeviceCallback_audioDeviceError, METH_VARARGS, NULL},
	 { "AudioIODeviceCallback_swigregister", AudioIODeviceCallback_swigregister, METH_O, NULL},
	 { "delete_AudioIODevice", _wrap_delete_AudioIODevice, METH_O, NULL},
	 { "AudioIODevice_getName", _wrap_AudioIODevice_getName, METH_O, NULL},
	 { "AudioIODevice_getTypeName", _wrap_AudioIODevice_getTypeName, METH_O, NULL},
	 { "AudioIODevice_getOutputChannelNames", _wrap_AudioIODevice_getOutputChannelNames, METH_O, NULL},
	 { "AudioIODevice_getInputChannelNames", _wrap_AudioIODevice_getInputChannelNames, METH_O, NULL},
	 { "AudioIODevice_getAvailableSampleRates", _wrap_AudioIODevice_getAvailableSampleRates, METH_O, NULL},
	 { "AudioIODevice_getAvailableBufferSizes", _wrap_AudioIODevice_getAvailableBufferSizes, METH_O, NULL},
	 { "AudioIODevice_getDefaultBufferSize", _wrap_AudioIODevice_getDefaultBufferSize, METH_O, NULL},
	 { "AudioIODevice_open", _wrap_AudioIODevice_open, METH_VARARGS, NULL},
	 { "AudioIODevice_close", _wrap_AudioIODevice_close, METH_O, NULL},
	 { "AudioIODevice_isOpen", _wrap_AudioIODevice_isOpen, METH_O, NULL},
	 { "AudioIODevice_start", _wrap_AudioIODevice_start, METH_VARARGS, NULL},
	 { "AudioIODevice_stop", _wrap_AudioIODevice_stop, METH_O, NULL},
	 { "AudioIODevice_isPlaying", _wrap_AudioIODevice_isPlaying, METH_O, NULL},
	 { "AudioIODevice_getLastError", _wrap_AudioIODevice_getLastError, METH_O, NULL},
	 { "AudioIODevice_getCurrentBufferSizeSamples", _wrap_AudioIODevice_getCurrentBufferSizeSamples, METH_O, NULL},
	 { "AudioIODevice_getCurrentSampleRate", _wrap_AudioIODevice_getCurrentSampleRate, METH_O, NULL},
	 { "AudioIODevice_getCurrentBitDepth", _wrap_AudioIODevice_getCurrentBitDepth, METH_O, NULL},
	 { "AudioIODevice_getActiveOutputChannels", _wrap_AudioIODevice_getActiveOutputChannels, METH_O, NULL},
	 { "AudioIODevice_getActiveInputChannels", _wrap_AudioIODevice_getActiveInputChannels, METH_O, NULL},
	 { "AudioIODevice_getOutputLatencyInSamples", _wrap_AudioIODevice_getOutputLatencyInSamples, METH_O, NULL},
	 { "AudioIODevice_getInputLatencyInSamples", _wrap_AudioIODevice_getInputLatencyInSamples, METH_O, NULL},
	 { "AudioIODevice_hasControlPanel", _wrap_AudioIODevice_hasControlPanel, METH_O, NULL},
	 { "AudioIODevice_showControlPanel", _wrap_AudioIODevice_showControlPanel, METH_O, NULL},
	 { "AudioIODevice_setAudioPreprocessingEnabled", _wrap_AudioIODevice_setAudioPreprocessingEnabled, METH_VARARGS, NULL},
	 { "AudioIODevice_getXRunCount", _wrap_AudioIODevice_getXRunCount, METH_O, NULL},
	 { "AudioIODevice_swigregister", AudioIODevice_swigregister, METH_O, NULL},
	 { "new_JUCEIO", _wrap_new_JUCEIO, METH_VARARGS, NULL},
	 { "delete_JUCEIO", _wrap_delete_JUCEIO, METH_O, NULL},
	 { "JUCEIO_swigregister", JUCEIO_swigregister, METH_O, NULL},
	 { "JUCEIO_swiginit", JUCEIO_swiginit, METH_VARARGS, NULL},
	 { "new_FileIO", _wrap_new_FileIO, METH_VARARGS, NULL},
	 { "delete_FileIO", _wrap_delete_FileIO, METH_O, NULL},
	 { "FileIO_mIsPlaying_set", _wrap_FileIO_mIsPlaying_set, METH_VARARGS, NULL},
	 { "FileIO_mIsPlaying_get", _wrap_FileIO_mIsPlaying_get, METH_O, NULL},
	 { "FileIO_mIsThreadRunning_set", _wrap_FileIO_mIsThreadRunning_set, METH_VARARGS, NULL},
	 { "FileIO_mIsThreadRunning_get", _wrap_FileIO_mIsThreadRunning_get, METH_O, NULL},
	 { "FileIO_mDuration_set", _wrap_FileIO_mDuration_set, METH_VARARGS, NULL},
	 { "FileIO_mDuration_get", _wrap_FileIO_mDuration_get, METH_O, NULL},
	 { "FileIO_start", _wrap_FileIO_start, METH_VARARGS, NULL},
	 { "FileIO_getInput", _wrap_FileIO_getInput, METH_VARARGS, NULL},
	 { "FileIO_swigregister", FileIO_swigregister, METH_O, NULL},
	 { "FileIO_swiginit", FileIO_swiginit, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mTitle_set", _wrap_SoundFileMetadata_mTitle_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mTitle_get", _wrap_SoundFileMetadata_mTitle_get, METH_O, NULL},
	 { "SoundFileMetadata_mArtist_set", _wrap_SoundFileMetadata_mArtist_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mArtist_get", _wrap_SoundFileMetadata_mArtist_get, METH_O, NULL},
	 { "SoundFileMetadata_mAlbum_set", _wrap_SoundFileMetadata_mAlbum_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mAlbum_get", _wrap_SoundFileMetadata_mAlbum_get, METH_O, NULL},
	 { "SoundFileMetadata_mYear_set", _wrap_SoundFileMetadata_mYear_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mYear_get", _wrap_SoundFileMetadata_mYear_get, METH_O, NULL},
	 { "SoundFileMetadata_mComment_set", _wrap_SoundFileMetadata_mComment_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mComment_get", _wrap_SoundFileMetadata_mComment_get, METH_O, NULL},
	 { "SoundFileMetadata_mTrack_set", _wrap_SoundFileMetadata_mTrack_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mTrack_get", _wrap_SoundFileMetadata_mTrack_get, METH_O, NULL},
	 { "SoundFileMetadata_mGenre_set", _wrap_SoundFileMetadata_mGenre_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mGenre_get", _wrap_SoundFileMetadata_mGenre_get, METH_O, NULL},
	 { "SoundFileMetadata_mBitRate_set", _wrap_SoundFileMetadata_mBitRate_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mBitRate_get", _wrap_SoundFileMetadata_mBitRate_get, METH_O, NULL},
	 { "SoundFileMetadata_mSampleRate_set", _wrap_SoundFileMetadata_mSampleRate_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mSampleRate_get", _wrap_SoundFileMetadata_mSampleRate_get, METH_O, NULL},
	 { "SoundFileMetadata_mChannels_set", _wrap_SoundFileMetadata_mChannels_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mChannels_get", _wrap_SoundFileMetadata_mChannels_get, METH_O, NULL},
	 { "SoundFileMetadata_mLength_set", _wrap_SoundFileMetadata_mLength_set, METH_VARARGS, NULL},
	 { "SoundFileMetadata_mLength_get", _wrap_SoundFileMetadata_mLength_get, METH_O, NULL},
	 { "new_SoundFileMetadata", _wrap_new_SoundFileMetadata, METH_NOARGS, NULL},
	 { "delete_SoundFileMetadata", _wrap_delete_SoundFileMetadata, METH_O, NULL},
	 { "SoundFileMetadata_dump", _wrap_SoundFileMetadata_dump, METH_O, NULL},
	 { "SoundFileMetadata_swigregister", SoundFileMetadata_swigregister, METH_O, NULL},
	 { "SoundFileMetadata_swiginit", SoundFileMetadata_swiginit, METH_VARARGS, NULL},
	 { "delete_Abst_SoundFile", _wrap_delete_Abst_SoundFile, METH_O, NULL},
	 { "Abst_SoundFile_isSndfileName", _wrap_Abst_SoundFile_isSndfileName, METH_O, NULL},
	 { "Abst_SoundFile_sndfileNameType", _wrap_Abst_SoundFile_sndfileNameType, METH_O, NULL},
	 { "Abst_SoundFile_mimeType", _wrap_Abst_SoundFile_mimeType, METH_O, NULL},
	 { "Abst_SoundFile_openForRead", _wrap_Abst_SoundFile_openForRead, METH_VARARGS, NULL},
	 { "Abst_SoundFile_openForWrite", _wrap_Abst_SoundFile_openForWrite, METH_VARARGS, NULL},
	 { "Abst_SoundFile_seekTo", _wrap_Abst_SoundFile_seekTo, METH_VARARGS, NULL},
	 { "Abst_SoundFile_readBufferFromFile", _wrap_Abst_SoundFile_readBufferFromFile, METH_VARARGS, NULL},
	 { "Abst_SoundFile_writeBuffer", _wrap_Abst_SoundFile_writeBuffer, METH_VARARGS, NULL},
	 { "Abst_SoundFile_buffer", _wrap_Abst_SoundFile_buffer, METH_VARARGS, NULL},
	 { "Abst_SoundFile_channels", _wrap_Abst_SoundFile_channels, METH_O, NULL},
	 { "Abst_SoundFile_durationInSecs", _wrap_Abst_SoundFile_durationInSecs, METH_O, NULL},
	 { "Abst_SoundFile_sampleSize", _wrap_Abst_SoundFile_sampleSize, METH_O, NULL},
	 { "Abst_SoundFile_mode", _wrap_Abst_SoundFile_mode, METH_O, NULL},
	 { "Abst_SoundFile_cacheSize", _wrap_Abst_SoundFile_cacheSize, METH_O, NULL},
	 { "Abst_SoundFile_mergeToMono", _wrap_Abst_SoundFile_mergeToMono, METH_O, NULL},
	 { "Abst_SoundFile_setToEnd", _wrap_Abst_SoundFile_setToEnd, METH_O, NULL},
	 { "Abst_SoundFile_close", _wrap_Abst_SoundFile_close, METH_O, NULL},
	 { "Abst_SoundFile_freeBuffer", _wrap_Abst_SoundFile_freeBuffer, METH_O, NULL},
	 { "Abst_SoundFile_convertRate", _wrap_Abst_SoundFile_convertRate, METH_VARARGS, NULL},
	 { "Abst_SoundFile_isValid", _wrap_Abst_SoundFile_isValid, METH_O, NULL},
	 { "Abst_SoundFile_isCached", _wrap_Abst_SoundFile_isCached, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setPath", _wrap_Abst_SoundFile_setPath, METH_VARARGS, NULL},
	 { "Abst_SoundFile_path", _wrap_Abst_SoundFile_path, METH_O, NULL},
	 { "Abst_SoundFile_startFrame", _wrap_Abst_SoundFile_startFrame, METH_O, NULL},
	 { "Abst_SoundFile_setStart", _wrap_Abst_SoundFile_setStart, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setStartSec", _wrap_Abst_SoundFile_setStartSec, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setStartRatio", _wrap_Abst_SoundFile_setStartRatio, METH_VARARGS, NULL},
	 { "Abst_SoundFile_stopFrame", _wrap_Abst_SoundFile_stopFrame, METH_O, NULL},
	 { "Abst_SoundFile_setStop", _wrap_Abst_SoundFile_setStop, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setStopSec", _wrap_Abst_SoundFile_setStopSec, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setStopRatio", _wrap_Abst_SoundFile_setStopRatio, METH_VARARGS, NULL},
	 { "Abst_SoundFile_setBase", _wrap_Abst_SoundFile_setBase, METH_VARARGS, NULL},
	 { "Abst_SoundFile_base", _wrap_Abst_SoundFile_base, METH_O, NULL},
	 { "Abst_SoundFile_playbackRate", _wrap_Abst_SoundFile_playbackRate, METH_O, NULL},
	 { "Abst_SoundFile_setRate", _wrap_Abst_SoundFile_setRate, METH_VARARGS, NULL},
	 { "Abst_SoundFile_isLooping", _wrap_Abst_SoundFile_isLooping, METH_O, NULL},
	 { "Abst_SoundFile_setIsLooping", _wrap_Abst_SoundFile_setIsLooping, METH_VARARGS, NULL},
	 { "Abst_SoundFile_mProperties_set", _wrap_Abst_SoundFile_mProperties_set, METH_VARARGS, NULL},
	 { "Abst_SoundFile_mProperties_get", _wrap_Abst_SoundFile_mProperties_get, METH_O, NULL},
	 { "Abst_SoundFile_swigregister", Abst_SoundFile_swigregister, METH_O, NULL},
	 { "new_SoundCue", _wrap_new_SoundCue, METH_VARARGS, NULL},
	 { "delete_SoundCue", _wrap_delete_SoundCue, METH_O, NULL},
	 { "SoundCue_mName_set", _wrap_SoundCue_mName_set, METH_VARARGS, NULL},
	 { "SoundCue_mName_get", _wrap_SoundCue_mName_get, METH_O, NULL},
	 { "SoundCue_mFile_set", _wrap_SoundCue_mFile_set, METH_VARARGS, NULL},
	 { "SoundCue_mFile_get", _wrap_SoundCue_mFile_get, METH_O, NULL},
	 { "SoundCue_mStart_set", _wrap_SoundCue_mStart_set, METH_VARARGS, NULL},
	 { "SoundCue_mStart_get", _wrap_SoundCue_mStart_get, METH_O, NULL},
	 { "SoundCue_mStop_set", _wrap_SoundCue_mStop_set, METH_VARARGS, NULL},
	 { "SoundCue_mStop_get", _wrap_SoundCue_mStop_get, METH_O, NULL},
	 { "SoundCue_mCurrent_set", _wrap_SoundCue_mCurrent_set, METH_VARARGS, NULL},
	 { "SoundCue_mCurrent_get", _wrap_SoundCue_mCurrent_get, METH_O, NULL},
	 { "SoundCue_mReadRate_set", _wrap_SoundCue_mReadRate_set, METH_VARARGS, NULL},
	 { "SoundCue_mReadRate_get", _wrap_SoundCue_mReadRate_get, METH_O, NULL},
	 { "SoundCue_readFrom", _wrap_SoundCue_readFrom, METH_VARARGS, NULL},
	 { "SoundCue_channels", _wrap_SoundCue_channels, METH_O, NULL},
	 { "SoundCue_setToEnd", _wrap_SoundCue_setToEnd, METH_O, NULL},
	 { "SoundCue_duration", _wrap_SoundCue_duration, METH_O, NULL},
	 { "SoundCue_swigregister", SoundCue_swigregister, METH_O, NULL},
	 { "SoundCue_swiginit", SoundCue_swiginit, METH_VARARGS, NULL},
	 { "new_SoundFileBuffer", _wrap_new_SoundFileBuffer, METH_VARARGS, NULL},
	 { "delete_SoundFileBuffer", _wrap_delete_SoundFileBuffer, METH_O, NULL},
	 { "SoundFileBuffer_samplePtrFor", _wrap_SoundFileBuffer_samplePtrFor, METH_VARARGS, NULL},
	 { "SoundFileBuffer_setBuffer", _wrap_SoundFileBuffer_setBuffer, METH_VARARGS, NULL},
	 { "SoundFileBuffer_swigregister", SoundFileBuffer_swigregister, METH_O, NULL},
	 { "SoundFileBuffer_swiginit", SoundFileBuffer_swiginit, METH_VARARGS, NULL},
	 { "ReferenceCountedObject_incReferenceCount", _wrap_ReferenceCountedObject_incReferenceCount, METH_O, NULL},
	 { "ReferenceCountedObject_decReferenceCount", _wrap_ReferenceCountedObject_decReferenceCount, METH_O, NULL},
	 { "ReferenceCountedObject_decReferenceCountWithoutDeleting", _wrap_ReferenceCountedObject_decReferenceCountWithoutDeleting, METH_O, NULL},
	 { "ReferenceCountedObject_getReferenceCount", _wrap_ReferenceCountedObject_getReferenceCount, METH_O, NULL},
	 { "ReferenceCountedObject_swigregister", ReferenceCountedObject_swigregister, METH_O, NULL},
	 { "SingleThreadedReferenceCountedObject_incReferenceCount", _wrap_SingleThreadedReferenceCountedObject_incReferenceCount, METH_O, NULL},
	 { "SingleThreadedReferenceCountedObject_decReferenceCount", _wrap_SingleThreadedReferenceCountedObject_decReferenceCount, METH_O, NULL},
	 { "SingleThreadedReferenceCountedObject_decReferenceCountWithoutDeleting", _wrap_SingleThreadedReferenceCountedObject_decReferenceCountWithoutDeleting, METH_O, NULL},
	 { "SingleThreadedReferenceCountedObject_getReferenceCount", _wrap_SingleThreadedReferenceCountedObject_getReferenceCount, METH_O, NULL},
	 { "SingleThreadedReferenceCountedObject_swigregister", SingleThreadedReferenceCountedObject_swigregister, METH_O, NULL},
	 { "new_CMIDIMessage", _wrap_new_CMIDIMessage, METH_VARARGS, NULL},
	 { "CMIDIMessage_isNoteOn", _wrap_CMIDIMessage_isNoteOn, METH_O, NULL},
	 { "CMIDIMessage_isNoteOff", _wrap_CMIDIMessage_isNoteOff, METH_O, NULL},
	 { "CMIDIMessage_isNoteOnOff", _wrap_CMIDIMessage_isNoteOnOff, METH_O, NULL},
	 { "CMIDIMessage_isPolyTouch", _wrap_CMIDIMessage_isPolyTouch, METH_O, NULL},
	 { "CMIDIMessage_isControlChange", _wrap_CMIDIMessage_isControlChange, METH_O, NULL},
	 { "CMIDIMessage_isProgramChange", _wrap_CMIDIMessage_isProgramChange, METH_O, NULL},
	 { "CMIDIMessage_isAftertouch", _wrap_CMIDIMessage_isAftertouch, METH_O, NULL},
	 { "CMIDIMessage_isPitchWheel", _wrap_CMIDIMessage_isPitchWheel, METH_O, NULL},
	 { "CMIDIMessage_isSysEX", _wrap_CMIDIMessage_isSysEX, METH_O, NULL},
	 { "CMIDIMessage_getCommand", _wrap_CMIDIMessage_getCommand, METH_O, NULL},
	 { "CMIDIMessage_getNote", _wrap_CMIDIMessage_getNote, METH_O, NULL},
	 { "CMIDIMessage_getVelocity", _wrap_CMIDIMessage_getVelocity, METH_O, NULL},
	 { "CMIDIMessage_getPolyAftertouch", _wrap_CMIDIMessage_getPolyAftertouch, METH_O, NULL},
	 { "CMIDIMessage_getControlFunction", _wrap_CMIDIMessage_getControlFunction, METH_O, NULL},
	 { "CMIDIMessage_getControlValue", _wrap_CMIDIMessage_getControlValue, METH_O, NULL},
	 { "CMIDIMessage_getProgramNumber", _wrap_CMIDIMessage_getProgramNumber, METH_O, NULL},
	 { "CMIDIMessage_getAftertouch", _wrap_CMIDIMessage_getAftertouch, METH_O, NULL},
	 { "CMIDIMessage_getPitchWheel", _wrap_CMIDIMessage_getPitchWheel, METH_O, NULL},
	 { "CMIDIMessage_getFrequency", _wrap_CMIDIMessage_getFrequency, METH_O, NULL},
	 { "CMIDIMessage_getVelocityFloat", _wrap_CMIDIMessage_getVelocityFloat, METH_O, NULL},
	 { "CMIDIMessage_message_set", _wrap_CMIDIMessage_message_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_message_get", _wrap_CMIDIMessage_message_get, METH_O, NULL},
	 { "CMIDIMessage_command_set", _wrap_CMIDIMessage_command_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_command_get", _wrap_CMIDIMessage_command_get, METH_O, NULL},
	 { "CMIDIMessage_channel_set", _wrap_CMIDIMessage_channel_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_channel_get", _wrap_CMIDIMessage_channel_get, METH_O, NULL},
	 { "CMIDIMessage_data1_set", _wrap_CMIDIMessage_data1_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_data1_get", _wrap_CMIDIMessage_data1_get, METH_O, NULL},
	 { "CMIDIMessage_data2_set", _wrap_CMIDIMessage_data2_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_data2_get", _wrap_CMIDIMessage_data2_get, METH_O, NULL},
	 { "CMIDIMessage_time_set", _wrap_CMIDIMessage_time_set, METH_VARARGS, NULL},
	 { "CMIDIMessage_time_get", _wrap_CMIDIMessage_time_get, METH_O, NULL},
	 { "delete_CMIDIMessage", _wrap_delete_CMIDIMessage, METH_O, NULL},
	 { "CMIDIMessage_swigregister", CMIDIMessage_swigregister, METH_O, NULL},
	 { "CMIDIMessage_swiginit", CMIDIMessage_swiginit, METH_VARARGS, NULL},
	 { "new_MidiDeviceListEntry", _wrap_new_MidiDeviceListEntry, METH_O, NULL},
	 { "MidiDeviceListEntry_deviceInfo_set", _wrap_MidiDeviceListEntry_deviceInfo_set, METH_VARARGS, NULL},
	 { "MidiDeviceListEntry_deviceInfo_get", _wrap_MidiDeviceListEntry_deviceInfo_get, METH_O, NULL},
	 { "MidiDeviceListEntry_inDevice_set", _wrap_MidiDeviceListEntry_inDevice_set, METH_VARARGS, NULL},
	 { "MidiDeviceListEntry_inDevice_get", _wrap_MidiDeviceListEntry_inDevice_get, METH_O, NULL},
	 { "MidiDeviceListEntry_outDevice_set", _wrap_MidiDeviceListEntry_outDevice_set, METH_VARARGS, NULL},
	 { "MidiDeviceListEntry_outDevice_get", _wrap_MidiDeviceListEntry_outDevice_get, METH_O, NULL},
	 { "delete_MidiDeviceListEntry", _wrap_delete_MidiDeviceListEntry, METH_O, NULL},
	 { "MidiDeviceListEntry_swigregister", MidiDeviceListEntry_swigregister, METH_O, NULL},
	 { "MidiDeviceListEntry_swiginit", MidiDeviceListEntry_swiginit, METH_VARARGS, NULL},
	 { "delete_MIDIIO", _wrap_delete_MIDIIO, METH_O, NULL},
	 { "MIDIIO_countDevices", _wrap_MIDIIO_countDevices, METH_O, NULL},
	 { "MIDIIO_dumpDevices", _wrap_MIDIIO_dumpDevices, METH_O, NULL},
	 { "MIDIIO_open", _wrap_MIDIIO_open, METH_VARARGS, NULL},
	 { "MIDIIO_isOpen", _wrap_MIDIIO_isOpen, METH_O, NULL},
	 { "MIDIIO_close", _wrap_MIDIIO_close, METH_O, NULL},
	 { "MIDIIO_start", _wrap_MIDIIO_start, METH_O, NULL},
	 { "MIDIIO_stop", _wrap_MIDIIO_stop, METH_O, NULL},
	 { "MIDIIO_clear", _wrap_MIDIIO_clear, METH_O, NULL},
	 { "MIDIIO_dumpBuffer", _wrap_MIDIIO_dumpBuffer, METH_O, NULL},
	 { "MIDIIO_mDeviceID_set", _wrap_MIDIIO_mDeviceID_set, METH_VARARGS, NULL},
	 { "MIDIIO_mDeviceID_get", _wrap_MIDIIO_mDeviceID_get, METH_O, NULL},
	 { "MIDIIO_mMsg_set", _wrap_MIDIIO_mMsg_set, METH_VARARGS, NULL},
	 { "MIDIIO_mMsg_get", _wrap_MIDIIO_mMsg_get, METH_O, NULL},
	 { "MIDIIO_mMsg2_set", _wrap_MIDIIO_mMsg2_set, METH_VARARGS, NULL},
	 { "MIDIIO_mMsg2_get", _wrap_MIDIIO_mMsg2_get, METH_O, NULL},
	 { "MIDIIO_mBuffer_set", _wrap_MIDIIO_mBuffer_set, METH_VARARGS, NULL},
	 { "MIDIIO_mBuffer_get", _wrap_MIDIIO_mBuffer_get, METH_O, NULL},
	 { "MIDIIO_swigregister", MIDIIO_swigregister, METH_O, NULL},
	 { "new_MIDIIn", _wrap_new_MIDIIn, METH_NOARGS, NULL},
	 { "MIDIIn_bufferSize", _wrap_MIDIIn_bufferSize, METH_O, NULL},
	 { "MIDIIn_setBufferSize", _wrap_MIDIIn_setBufferSize, METH_VARARGS, NULL},
	 { "MIDIIn_poll", _wrap_MIDIIn_poll, METH_O, NULL},
	 { "MIDIIn_nextEvent", _wrap_MIDIIn_nextEvent, METH_O, NULL},
	 { "MIDIIn_dumpMessage", _wrap_MIDIIn_dumpMessage, METH_O, NULL},
	 { "MIDIIn_mDevice_set", _wrap_MIDIIn_mDevice_set, METH_VARARGS, NULL},
	 { "MIDIIn_mDevice_get", _wrap_MIDIIn_mDevice_get, METH_O, NULL},
	 { "MIDIIn_mStartTime_set", _wrap_MIDIIn_mStartTime_set, METH_VARARGS, NULL},
	 { "MIDIIn_mStartTime_get", _wrap_MIDIIn_mStartTime_get, METH_O, NULL},
	 { "MIDIIn_handleIncomingMidiMessage", _wrap_MIDIIn_handleIncomingMidiMessage, METH_VARARGS, NULL},
	 { "MIDIIn_handleNoteOn", _wrap_MIDIIn_handleNoteOn, METH_VARARGS, NULL},
	 { "MIDIIn_handleNoteOff", _wrap_MIDIIn_handleNoteOff, METH_VARARGS, NULL},
	 { "MIDIIn_handleAsyncUpdate", _wrap_MIDIIn_handleAsyncUpdate, METH_O, NULL},
	 { "MIDIIn_midiMonitorLock_set", _wrap_MIDIIn_midiMonitorLock_set, METH_VARARGS, NULL},
	 { "MIDIIn_midiMonitorLock_get", _wrap_MIDIIn_midiMonitorLock_get, METH_O, NULL},
	 { "MIDIIn_incomingMessages_set", _wrap_MIDIIn_incomingMessages_set, METH_VARARGS, NULL},
	 { "MIDIIn_incomingMessages_get", _wrap_MIDIIn_incomingMessages_get, METH_O, NULL},
	 { "MIDIIn_mKeyboardState_set", _wrap_MIDIIn_mKeyboardState_set, METH_VARARGS, NULL},
	 { "MIDIIn_mKeyboardState_get", _wrap_MIDIIn_mKeyboardState_get, METH_O, NULL},
	 { "delete_MIDIIn", _wrap_delete_MIDIIn, METH_O, NULL},
	 { "MIDIIn_swigregister", MIDIIn_swigregister, METH_O, NULL},
	 { "MIDIIn_swiginit", MIDIIn_swiginit, METH_VARARGS, NULL},
	 { "new_MIDIOut", _wrap_new_MIDIOut, METH_NOARGS, NULL},
	 { "delete_MIDIOut", _wrap_delete_MIDIOut, METH_O, NULL},
	 { "MIDIOut_mOut_set", _wrap_MIDIOut_mOut_set, METH_VARARGS, NULL},
	 { "MIDIOut_mOut_get", _wrap_MIDIOut_mOut_get, METH_O, NULL},
	 { "MIDIOut_write", _wrap_MIDIOut_write, METH_VARARGS, NULL},
	 { "MIDIOut_writeNoteOn", _wrap_MIDIOut_writeNoteOn, METH_VARARGS, NULL},
	 { "MIDIOut_writeNoteOff", _wrap_MIDIOut_writeNoteOff, METH_VARARGS, NULL},
	 { "MIDIOut_writePolyTouch", _wrap_MIDIOut_writePolyTouch, METH_VARARGS, NULL},
	 { "MIDIOut_writeControlChange", _wrap_MIDIOut_writeControlChange, METH_VARARGS, NULL},
	 { "MIDIOut_writeProgramChange", _wrap_MIDIOut_writeProgramChange, METH_VARARGS, NULL},
	 { "MIDIOut_writeAftertouch", _wrap_MIDIOut_writeAftertouch, METH_VARARGS, NULL},
	 { "MIDIOut_writePitchWheel", _wrap_MIDIOut_writePitchWheel, METH_VARARGS, NULL},
	 { "MIDIOut_writeSysEX", _wrap_MIDIOut_writeSysEX, METH_VARARGS, NULL},
	 { "MIDIOut_swigregister", MIDIOut_swigregister, METH_O, NULL},
	 { "MIDIOut_swiginit", MIDIOut_swiginit, METH_VARARGS, NULL},
	 { "new_MIDIPlayer", _wrap_new_MIDIPlayer, METH_VARARGS, NULL},
	 { "delete_MIDIPlayer", _wrap_delete_MIDIPlayer, METH_O, NULL},
	 { "MIDIPlayer_start", _wrap_MIDIPlayer_start, METH_VARARGS, NULL},
	 { "MIDIPlayer_mFile_set", _wrap_MIDIPlayer_mFile_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mFile_get", _wrap_MIDIPlayer_mFile_get, METH_O, NULL},
	 { "MIDIPlayer_mNumTrax_set", _wrap_MIDIPlayer_mNumTrax_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mNumTrax_get", _wrap_MIDIPlayer_mNumTrax_get, METH_O, NULL},
	 { "MIDIPlayer_mTrak_set", _wrap_MIDIPlayer_mTrak_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mTrak_get", _wrap_MIDIPlayer_mTrak_get, METH_O, NULL},
	 { "MIDIPlayer_mIsOn_set", _wrap_MIDIPlayer_mIsOn_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mIsOn_get", _wrap_MIDIPlayer_mIsOn_get, METH_O, NULL},
	 { "MIDIPlayer_mLibrary_set", _wrap_MIDIPlayer_mLibrary_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mLibrary_get", _wrap_MIDIPlayer_mLibrary_get, METH_O, NULL},
	 { "MIDIPlayer_mTempoScale_set", _wrap_MIDIPlayer_mTempoScale_set, METH_VARARGS, NULL},
	 { "MIDIPlayer_mTempoScale_get", _wrap_MIDIPlayer_mTempoScale_get, METH_O, NULL},
	 { "MIDIPlayer_swigregister", MIDIPlayer_swigregister, METH_O, NULL},
	 { "MIDIPlayer_swiginit", MIDIPlayer_swiginit, METH_VARARGS, NULL},
	 { "find_option", _wrap_find_option, METH_VARARGS, NULL},
	 { "usage", _wrap_usage, METH_O, NULL},
	 { "initOSC", _wrap_initOSC, METH_O, NULL},
	 { "setupOSCInstrLibrary", _wrap_setupOSCInstrLibrary, METH_O, NULL},
	 { "mainOSCLoop", _wrap_mainOSCLoop, METH_O, NULL},
	 { "new_Accessor", _wrap_new_Accessor, METH_VARARGS, NULL},
	 { "Accessor_mName_set", _wrap_Accessor_mName_set, METH_VARARGS, NULL},
	 { "Accessor_mName_get", _wrap_Accessor_mName_get, METH_O, NULL},
	 { "Accessor_mSelector_set", _wrap_Accessor_mSelector_set, METH_VARARGS, NULL},
	 { "Accessor_mSelector_get", _wrap_Accessor_mSelector_get, METH_O, NULL},
	 { "Accessor_mType_set", _wrap_Accessor_mType_set, METH_VARARGS, NULL},
	 { "Accessor_mType_get", _wrap_Accessor_mType_get, METH_O, NULL},
	 { "delete_Accessor", _wrap_delete_Accessor, METH_O, NULL},
	 { "Accessor_swigregister", Accessor_swigregister, METH_O, NULL},
	 { "Accessor_swiginit", Accessor_swiginit, METH_VARARGS, NULL},
	 { "new_Instrument", _wrap_new_Instrument, METH_VARARGS, NULL},
	 { "delete_Instrument", _wrap_delete_Instrument, METH_O, NULL},
	 { "Instrument_graph", _wrap_Instrument_graph, METH_O, NULL},
	 { "Instrument_genMap", _wrap_Instrument_genMap, METH_O, NULL},
	 { "Instrument_envelopes", _wrap_Instrument_envelopes, METH_O, NULL},
	 { "Instrument_name", _wrap_Instrument_name, METH_O, NULL},
	 { "Instrument_genNamed", _wrap_Instrument_genNamed, METH_VARARGS, NULL},
	 { "Instrument_getAccessors", _wrap_Instrument_getAccessors, METH_O, NULL},
	 { "Instrument_numAccessors", _wrap_Instrument_numAccessors, METH_O, NULL},
	 { "Instrument_setParameter", _wrap_Instrument_setParameter, METH_VARARGS, NULL},
	 { "Instrument_play", _wrap_Instrument_play, METH_O, NULL},
	 { "Instrument_playOSC", _wrap_Instrument_playOSC, METH_VARARGS, NULL},
	 { "Instrument_playNote", _wrap_Instrument_playNote, METH_VARARGS, NULL},
	 { "Instrument_playMIDI", _wrap_Instrument_playMIDI, METH_VARARGS, NULL},
	 { "Instrument_release", _wrap_Instrument_release, METH_O, NULL},
	 { "Instrument_swigregister", Instrument_swigregister, METH_O, NULL},
	 { "Instrument_swiginit", Instrument_swiginit, METH_VARARGS, NULL},
	 { "new_AdditiveInstrument", _wrap_new_AdditiveInstrument, METH_VARARGS, NULL},
	 { "delete_AdditiveInstrument", _wrap_delete_AdditiveInstrument, METH_O, NULL},
	 { "AdditiveInstrument_playNote", _wrap_AdditiveInstrument_playNote, METH_VARARGS, NULL},
	 { "AdditiveInstrument_mAEnv_set", _wrap_AdditiveInstrument_mAEnv_set, METH_VARARGS, NULL},
	 { "AdditiveInstrument_mAEnv_get", _wrap_AdditiveInstrument_mAEnv_get, METH_O, NULL},
	 { "AdditiveInstrument_mSOS_set", _wrap_AdditiveInstrument_mSOS_set, METH_VARARGS, NULL},
	 { "AdditiveInstrument_mSOS_get", _wrap_AdditiveInstrument_mSOS_get, METH_O, NULL},
	 { "AdditiveInstrument_mPanner_set", _wrap_AdditiveInstrument_mPanner_set, METH_VARARGS, NULL},
	 { "AdditiveInstrument_mPanner_get", _wrap_AdditiveInstrument_mPanner_get, METH_O, NULL},
	 { "AdditiveInstrument_swigregister", AdditiveInstrument_swigregister, METH_O, NULL},
	 { "AdditiveInstrument_swiginit", AdditiveInstrument_swiginit, METH_VARARGS, NULL},
	 { "new_VAdditiveInstrument", _wrap_new_VAdditiveInstrument, METH_VARARGS, NULL},
	 { "delete_VAdditiveInstrument", _wrap_delete_VAdditiveInstrument, METH_O, NULL},
	 { "VAdditiveInstrument_playNote", _wrap_VAdditiveInstrument_playNote, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mAEnv1_set", _wrap_VAdditiveInstrument_mAEnv1_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mAEnv1_get", _wrap_VAdditiveInstrument_mAEnv1_get, METH_O, NULL},
	 { "VAdditiveInstrument_mAEnv2_set", _wrap_VAdditiveInstrument_mAEnv2_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mAEnv2_get", _wrap_VAdditiveInstrument_mAEnv2_get, METH_O, NULL},
	 { "VAdditiveInstrument_mXEnv1_set", _wrap_VAdditiveInstrument_mXEnv1_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mXEnv1_get", _wrap_VAdditiveInstrument_mXEnv1_get, METH_O, NULL},
	 { "VAdditiveInstrument_mXEnv2_set", _wrap_VAdditiveInstrument_mXEnv2_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mXEnv2_get", _wrap_VAdditiveInstrument_mXEnv2_get, METH_O, NULL},
	 { "VAdditiveInstrument_mSOS1_set", _wrap_VAdditiveInstrument_mSOS1_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mSOS1_get", _wrap_VAdditiveInstrument_mSOS1_get, METH_O, NULL},
	 { "VAdditiveInstrument_mSOS2_set", _wrap_VAdditiveInstrument_mSOS2_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mSOS2_get", _wrap_VAdditiveInstrument_mSOS2_get, METH_O, NULL},
	 { "VAdditiveInstrument_mMix_set", _wrap_VAdditiveInstrument_mMix_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mMix_get", _wrap_VAdditiveInstrument_mMix_get, METH_O, NULL},
	 { "VAdditiveInstrument_mPanner_set", _wrap_VAdditiveInstrument_mPanner_set, METH_VARARGS, NULL},
	 { "VAdditiveInstrument_mPanner_get", _wrap_VAdditiveInstrument_mPanner_get, METH_O, NULL},
	 { "VAdditiveInstrument_swigregister", VAdditiveInstrument_swigregister, METH_O, NULL},
	 { "VAdditiveInstrument_swiginit", VAdditiveInstrument_swiginit, METH_VARARGS, NULL},
	 { "new_FMInstrument", _wrap_new_FMInstrument, METH_VARARGS, NULL},
	 { "delete_FMInstrument", _wrap_delete_FMInstrument, METH_O, NULL},
	 { "FMInstrument_parseArgs", _wrap_FMInstrument_parseArgs, METH_VARARGS, NULL},
	 { "FMInstrument_playNote", _wrap_FMInstrument_playNote, METH_VARARGS, NULL},
	 { "FMInstrument_mAEnv_set", _wrap_FMInstrument_mAEnv_set, METH_VARARGS, NULL},
	 { "FMInstrument_mAEnv_get", _wrap_FMInstrument_mAEnv_get, METH_O, NULL},
	 { "FMInstrument_mIEnv_set", _wrap_FMInstrument_mIEnv_set, METH_VARARGS, NULL},
	 { "FMInstrument_mIEnv_get", _wrap_FMInstrument_mIEnv_get, METH_O, NULL},
	 { "FMInstrument_mCar_set", _wrap_FMInstrument_mCar_set, METH_VARARGS, NULL},
	 { "FMInstrument_mCar_get", _wrap_FMInstrument_mCar_get, METH_O, NULL},
	 { "FMInstrument_mMod_set", _wrap_FMInstrument_mMod_set, METH_VARARGS, NULL},
	 { "FMInstrument_mMod_get", _wrap_FMInstrument_mMod_get, METH_O, NULL},
	 { "FMInstrument_mPanner_set", _wrap_FMInstrument_mPanner_set, METH_VARARGS, NULL},
	 { "FMInstrument_mPanner_get", _wrap_FMInstrument_mPanner_get, METH_O, NULL},
	 { "FMInstrument_swigregister", FMInstrument_swigregister, METH_O, NULL},
	 { "FMInstrument_swiginit", FMInstrument_swiginit, METH_VARARGS, NULL},
	 { "new_FancyFMInstrument", _wrap_new_FancyFMInstrument, METH_NOARGS, NULL},
	 { "delete_FancyFMInstrument", _wrap_delete_FancyFMInstrument, METH_O, NULL},
	 { "FancyFMInstrument_mVibEnv_set", _wrap_FancyFMInstrument_mVibEnv_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mVibEnv_get", _wrap_FancyFMInstrument_mVibEnv_get, METH_O, NULL},
	 { "FancyFMInstrument_mChiffEnv_set", _wrap_FancyFMInstrument_mChiffEnv_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mChiffEnv_get", _wrap_FancyFMInstrument_mChiffEnv_get, METH_O, NULL},
	 { "FancyFMInstrument_mVibrato_set", _wrap_FancyFMInstrument_mVibrato_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mVibrato_get", _wrap_FancyFMInstrument_mVibrato_get, METH_O, NULL},
	 { "FancyFMInstrument_mChiff_set", _wrap_FancyFMInstrument_mChiff_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mChiff_get", _wrap_FancyFMInstrument_mChiff_get, METH_O, NULL},
	 { "FancyFMInstrument_mChFilter_set", _wrap_FancyFMInstrument_mChFilter_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mChFilter_get", _wrap_FancyFMInstrument_mChFilter_get, METH_O, NULL},
	 { "FancyFMInstrument_mReverb_set", _wrap_FancyFMInstrument_mReverb_set, METH_VARARGS, NULL},
	 { "FancyFMInstrument_mReverb_get", _wrap_FancyFMInstrument_mReverb_get, METH_O, NULL},
	 { "FancyFMInstrument_swigregister", FancyFMInstrument_swigregister, METH_O, NULL},
	 { "FancyFMInstrument_swiginit", FancyFMInstrument_swiginit, METH_VARARGS, NULL},
	 { "new_FMBell", _wrap_new_FMBell, METH_VARARGS, NULL},
	 { "delete_FMBell", _wrap_delete_FMBell, METH_O, NULL},
	 { "FMBell_parseArgs", _wrap_FMBell_parseArgs, METH_VARARGS, NULL},
	 { "FMBell_playNote", _wrap_FMBell_playNote, METH_VARARGS, NULL},
	 { "FMBell_mAEnv_set", _wrap_FMBell_mAEnv_set, METH_VARARGS, NULL},
	 { "FMBell_mAEnv_get", _wrap_FMBell_mAEnv_get, METH_O, NULL},
	 { "FMBell_mIEnv_set", _wrap_FMBell_mIEnv_set, METH_VARARGS, NULL},
	 { "FMBell_mIEnv_get", _wrap_FMBell_mIEnv_get, METH_O, NULL},
	 { "FMBell_mGliss_set", _wrap_FMBell_mGliss_set, METH_VARARGS, NULL},
	 { "FMBell_mGliss_get", _wrap_FMBell_mGliss_get, METH_O, NULL},
	 { "FMBell_mMod_set", _wrap_FMBell_mMod_set, METH_VARARGS, NULL},
	 { "FMBell_mMod_get", _wrap_FMBell_mMod_get, METH_O, NULL},
	 { "FMBell_mCar_set", _wrap_FMBell_mCar_set, METH_VARARGS, NULL},
	 { "FMBell_mCar_get", _wrap_FMBell_mCar_get, METH_O, NULL},
	 { "FMBell_mPanner_set", _wrap_FMBell_mPanner_set, METH_VARARGS, NULL},
	 { "FMBell_mPanner_get", _wrap_FMBell_mPanner_get, METH_O, NULL},
	 { "FMBell_mDirect_set", _wrap_FMBell_mDirect_set, METH_VARARGS, NULL},
	 { "FMBell_mDirect_get", _wrap_FMBell_mDirect_get, METH_O, NULL},
	 { "FMBell_swigregister", FMBell_swigregister, METH_O, NULL},
	 { "FMBell_swiginit", FMBell_swiginit, METH_VARARGS, NULL},
	 { "new_SndFileInstrument0", _wrap_new_SndFileInstrument0, METH_VARARGS, NULL},
	 { "delete_SndFileInstrument0", _wrap_delete_SndFileInstrument0, METH_O, NULL},
	 { "SndFileInstrument0_playNote", _wrap_SndFileInstrument0_playNote, METH_VARARGS, NULL},
	 { "SndFileInstrument0_playMIDI", _wrap_SndFileInstrument0_playMIDI, METH_VARARGS, NULL},
	 { "SndFileInstrument0_mPlayer_set", _wrap_SndFileInstrument0_mPlayer_set, METH_VARARGS, NULL},
	 { "SndFileInstrument0_mPlayer_get", _wrap_SndFileInstrument0_mPlayer_get, METH_O, NULL},
	 { "SndFileInstrument0_mPanner_set", _wrap_SndFileInstrument0_mPanner_set, METH_VARARGS, NULL},
	 { "SndFileInstrument0_mPanner_get", _wrap_SndFileInstrument0_mPanner_get, METH_O, NULL},
	 { "SndFileInstrument0_swigregister", SndFileInstrument0_swigregister, METH_O, NULL},
	 { "SndFileInstrument0_swiginit", SndFileInstrument0_swiginit, METH_VARARGS, NULL},
	 { "new_StringInstrument", _wrap_new_StringInstrument, METH_VARARGS, NULL},
	 { "delete_StringInstrument", _wrap_delete_StringInstrument, METH_O, NULL},
	 { "StringInstrument_playNote", _wrap_StringInstrument_playNote, METH_VARARGS, NULL},
	 { "StringInstrument_mString_set", _wrap_StringInstrument_mString_set, METH_VARARGS, NULL},
	 { "StringInstrument_mString_get", _wrap_StringInstrument_mString_get, METH_O, NULL},
	 { "StringInstrument_mPanner_set", _wrap_StringInstrument_mPanner_set, METH_VARARGS, NULL},
	 { "StringInstrument_mPanner_get", _wrap_StringInstrument_mPanner_get, METH_O, NULL},
	 { "StringInstrument_swigregister", StringInstrument_swigregister, METH_O, NULL},
	 { "StringInstrument_swiginit", StringInstrument_swiginit, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_csl__SplitterTo_p_csl__FanOut(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::FanOut *)  ((csl::Splitter *) x));
}
static void *_p_csl__AllpassTo_p_csl__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Filter *)  ((csl::Allpass *) x));
}
static void *_p_csl__ButterTo_p_csl__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Filter *)  ((csl::Butter *) x));
}
static void *_p_csl__FormantTo_p_csl__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Filter *)  ((csl::Formant *) x));
}
static void *_p_csl__NotchTo_p_csl__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Filter *)  ((csl::Notch *) x));
}
static void *_p_csl__MoogTo_p_csl__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Filter *)  ((csl::Moog *) x));
}
static void *_p_csl__BiquadTo_p_csl__Filter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Filter *)  ((csl::Biquad *) x));
}
static void *_p_csl__SoundFileBufferTo_p_csl__Buffer(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Buffer *)  ((csl::SoundFileBuffer *) x));
}
static void *_p_csl__BufferCMapTo_p_csl__Buffer(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Buffer *)  ((csl::BufferCMap *) x));
}
static void *_p_csl__DBErrorTo_p_csl__LogicError(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::LogicError *)  ((csl::DBError *) x));
}
static void *_p_csl__SumOfSinesTo_p_csl__CompOrCacheOscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CompOrCacheOscillator *)  ((csl::SumOfSines *) x));
}
static void *_p_csl__Abst_SoundFileTo_p_csl__WavetableOscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::WavetableOscillator *)  ((csl::Abst_SoundFile *) x));
}
static void *_p_csl__SumOfSinesTo_p_csl__WavetableOscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::WavetableOscillator *) (csl::CompOrCacheOscillator *) ((csl::SumOfSines *) x));
}
static void *_p_csl__CompOrCacheOscillatorTo_p_csl__WavetableOscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::WavetableOscillator *)  ((csl::CompOrCacheOscillator *) x));
}
static void *_p_csl__SquareTo_p_csl__Oscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Oscillator *)  ((csl::Square *) x));
}
static void *_p_csl__Abst_SoundFileTo_p_csl__Oscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Oscillator *) (csl::WavetableOscillator *) ((csl::Abst_SoundFile *) x));
}
static void *_p_csl__ImpulseTo_p_csl__Oscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Oscillator *)  ((csl::Impulse *) x));
}
static void *_p_csl__SawtoothTo_p_csl__Oscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Oscillator *)  ((csl::Sawtooth *) x));
}
static void *_p_csl__FSineTo_p_csl__Oscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Oscillator *)  ((csl::FSine *) x));
}
static void *_p_csl__SumOfSinesTo_p_csl__Oscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Oscillator *) (csl::WavetableOscillator *)(csl::CompOrCacheOscillator *) ((csl::SumOfSines *) x));
}
static void *_p_csl__WavetableOscillatorTo_p_csl__Oscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Oscillator *)  ((csl::WavetableOscillator *) x));
}
static void *_p_csl__CompOrCacheOscillatorTo_p_csl__Oscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Oscillator *) (csl::WavetableOscillator *) ((csl::CompOrCacheOscillator *) x));
}
static void *_p_csl__SineTo_p_csl__Oscillator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Oscillator *)  ((csl::Sine *) x));
}
static void *_p_csl__MidiDeviceListEntryTo_p_juce__ReferenceCountedObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((juce::ReferenceCountedObject *)  ((csl::MidiDeviceListEntry *) x));
}
static void *_p_csl__AllpassTo_p_csl__FrequencyAmount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::FrequencyAmount *) (csl::Filter *) ((csl::Allpass *) x));
}
static void *_p_csl__ButterTo_p_csl__FrequencyAmount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::FrequencyAmount *) (csl::Filter *) ((csl::Butter *) x));
}
static void *_p_csl__FilterTo_p_csl__FrequencyAmount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::FrequencyAmount *)  ((csl::Filter *) x));
}
static void *_p_csl__FormantTo_p_csl__FrequencyAmount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::FrequencyAmount *) (csl::Filter *) ((csl::Formant *) x));
}
static void *_p_csl__NotchTo_p_csl__FrequencyAmount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::FrequencyAmount *) (csl::Filter *) ((csl::Notch *) x));
}
static void *_p_csl__MoogTo_p_csl__FrequencyAmount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::FrequencyAmount *) (csl::Filter *) ((csl::Moog *) x));
}
static void *_p_csl__BiquadTo_p_csl__FrequencyAmount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::FrequencyAmount *) (csl::Filter *) ((csl::Biquad *) x));
}
static void *_p_csl__RandEnvelopeTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Envelope *) ((csl::RandEnvelope *) x));
}
static void *_p_csl__EnvelopeTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::Envelope *) x));
}
static void *_p_csl__StaticVariableTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::StaticVariable *) x));
}
static void *_p_csl__DynamicVariableTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::DynamicVariable *) x));
}
static void *_p_csl__SawtoothTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Oscillator *) ((csl::Sawtooth *) x));
}
static void *_p_csl__NoiseTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::Noise *) x));
}
static void *_p_csl__BinaryOpTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::BinaryOp *) x));
}
static void *_p_csl__EffectTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::Effect *) x));
}
static void *_p_csl__MulOpTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *)(csl::BinaryOp *) ((csl::MulOp *) x));
}
static void *_p_csl__RingBufferTapTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::RingBufferTap *) x));
}
static void *_p_csl__FSineTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Oscillator *) ((csl::FSine *) x));
}
static void *_p_csl__WelchWindowTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Window *) ((csl::WelchWindow *) x));
}
static void *_p_csl__BlackmanWindowTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Window *) ((csl::BlackmanWindow *) x));
}
static void *_p_csl__HannWindowTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Window *) ((csl::HannWindow *) x));
}
static void *_p_csl__WindowTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::Window *) x));
}
static void *_p_csl__RectangularWindowTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Window *) ((csl::RectangularWindow *) x));
}
static void *_p_csl__TriangularWindowTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Window *) ((csl::TriangularWindow *) x));
}
static void *_p_csl__ARTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Envelope *) ((csl::AR *) x));
}
static void *_p_csl__PannerTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::Panner *) x));
}
static void *_p_csl__SumOfSinesTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Oscillator *)(csl::WavetableOscillator *)(csl::CompOrCacheOscillator *) ((csl::SumOfSines *) x));
}
static void *_p_csl__SplitterTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *)(csl::FanOut *) ((csl::Splitter *) x));
}
static void *_p_csl__ButterTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *)(csl::Filter *) ((csl::Butter *) x));
}
static void *_p_csl__Abst_SoundFileTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Oscillator *)(csl::WavetableOscillator *) ((csl::Abst_SoundFile *) x));
}
static void *_p_csl__FFTTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::FFT *) x));
}
static void *_p_csl__AddOpTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *)(csl::BinaryOp *) ((csl::AddOp *) x));
}
static void *_p_csl__JoinerTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::Joiner *) x));
}
static void *_p_csl__ADSRTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Envelope *) ((csl::ADSR *) x));
}
static void *_p_csl__RingBufferTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::RingBuffer *) x));
}
static void *_p_csl__SineTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Oscillator *) ((csl::Sine *) x));
}
static void *_p_csl__ConvolverTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::Convolver *) x));
}
static void *_p_csl__FMBellTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Instrument *) ((csl::FMBell *) x));
}
static void *_p_csl__BlackmanHarrisWindowTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Window *) ((csl::BlackmanHarrisWindow *) x));
}
static void *_p_csl__HammingWindowTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Window *) ((csl::HammingWindow *) x));
}
static void *_p_csl__InOutTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::InOut *) x));
}
static void *_p_csl__AllpassTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *)(csl::Filter *) ((csl::Allpass *) x));
}
static void *_p_csl__CompOrCacheOscillatorTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Oscillator *)(csl::WavetableOscillator *) ((csl::CompOrCacheOscillator *) x));
}
static void *_p_csl__WavetableOscillatorTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Oscillator *) ((csl::WavetableOscillator *) x));
}
static void *_p_csl__OscillatorTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::Oscillator *) x));
}
static void *_p_csl__IFFTTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::IFFT *) x));
}
static void *_p_csl__NtoMPannerTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *)(csl::Panner *) ((csl::NtoMPanner *) x));
}
static void *_p_csl__SndFileInstrument0To_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Instrument *) ((csl::SndFileInstrument0 *) x));
}
static void *_p_csl__BiquadTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *)(csl::Filter *) ((csl::Biquad *) x));
}
static void *_p_csl__SquareTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Oscillator *) ((csl::Square *) x));
}
static void *_p_csl__FormantTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *)(csl::Filter *) ((csl::Formant *) x));
}
static void *_p_csl__InstrumentTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::Instrument *) x));
}
static void *_p_csl__AdditiveInstrumentTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Instrument *) ((csl::AdditiveInstrument *) x));
}
static void *_p_csl__VAdditiveInstrumentTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Instrument *) ((csl::VAdditiveInstrument *) x));
}
static void *_p_csl__FMInstrumentTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Instrument *) ((csl::FMInstrument *) x));
}
static void *_p_csl__FancyFMInstrumentTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Instrument *)(csl::FMInstrument *) ((csl::FancyFMInstrument *) x));
}
static void *_p_csl__StringInstrumentTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Instrument *) ((csl::StringInstrument *) x));
}
static void *_p_csl__BufferStreamTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::BufferStream *) x));
}
static void *_p_csl__StereoWidthTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::StereoWidth *) x));
}
static void *_p_csl__BlockResizerTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::BlockResizer *) x));
}
static void *_p_csl__WhiteNoiseTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Noise *) ((csl::WhiteNoise *) x));
}
static void *_p_csl__NotchTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *)(csl::Filter *) ((csl::Notch *) x));
}
static void *_p_csl__MoogTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *)(csl::Filter *) ((csl::Moog *) x));
}
static void *_p_csl__KarplusStringTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::KarplusString *) x));
}
static void *_p_csl__TriangleTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Envelope *) ((csl::Triangle *) x));
}
static void *_p_csl__ImpulseTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Oscillator *) ((csl::Impulse *) x));
}
static void *_p_csl__DelayLineTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::DelayLine *) x));
}
static void *_p_csl__MixerTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::Mixer *) x));
}
static void *_p_csl__SoundCueTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::SoundCue *) x));
}
static void *_p_csl__LineSegmentTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *)  ((csl::LineSegment *) x));
}
static void *_p_csl__FanOutTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::FanOut *) x));
}
static void *_p_csl__FilterTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::Filter *) x));
}
static void *_p_csl__StereoverbTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::Stereoverb *) x));
}
static void *_p_csl__FIRTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::FIR *) x));
}
static void *_p_csl__FreeverbTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Effect *) ((csl::Freeverb *) x));
}
static void *_p_csl__PinkNoiseTo_p_csl__UnitGenerator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::UnitGenerator *) (csl::Noise *) ((csl::PinkNoise *) x));
}
static void *_p_csl__EnvelopeTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Scalable *) ((csl::Envelope *) x));
}
static void *_p_csl__RandEnvelopeTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Scalable *)(csl::Envelope *) ((csl::RandEnvelope *) x));
}
static void *_p_csl__DynamicVariableTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::DynamicVariable *) x));
}
static void *_p_csl__SawtoothTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Phased *)(csl::Oscillator *) ((csl::Sawtooth *) x));
}
static void *_p_csl__NoiseTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Scalable *) ((csl::Noise *) x));
}
static void *_p_csl__BinaryOpTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::BinaryOp *) x));
}
static void *_p_csl__MulOpTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *)(csl::BinaryOp *) ((csl::MulOp *) x));
}
static void *_p_csl__EffectTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *)  ((csl::Effect *) x));
}
static void *_p_csl__RingBufferTapTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Scalable *) ((csl::RingBufferTap *) x));
}
static void *_p_csl__FSineTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Phased *)(csl::Oscillator *) ((csl::FSine *) x));
}
static void *_p_csl__ARTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Scalable *)(csl::Envelope *) ((csl::AR *) x));
}
static void *_p_csl__PannerTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::Panner *) x));
}
static void *_p_csl__SumOfSinesTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Phased *)(csl::Oscillator *)(csl::WavetableOscillator *)(csl::CompOrCacheOscillator *) ((csl::SumOfSines *) x));
}
static void *_p_csl__SplitterTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *)(csl::FanOut *) ((csl::Splitter *) x));
}
static void *_p_csl__ButterTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *)(csl::Filter *) ((csl::Butter *) x));
}
static void *_p_csl__Abst_SoundFileTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Phased *)(csl::Oscillator *)(csl::WavetableOscillator *) ((csl::Abst_SoundFile *) x));
}
static void *_p_csl__FFTTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::FFT *) x));
}
static void *_p_csl__FrequencyAmountTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *)  ((csl::FrequencyAmount *) x));
}
static void *_p_csl__AddOpTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *)(csl::BinaryOp *) ((csl::AddOp *) x));
}
static void *_p_csl__JoinerTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::Joiner *) x));
}
static void *_p_csl__ADSRTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Scalable *)(csl::Envelope *) ((csl::ADSR *) x));
}
static void *_p_csl__PhasedTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *)  ((csl::Phased *) x));
}
static void *_p_csl__RingBufferTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::RingBuffer *) x));
}
static void *_p_csl__SineTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Phased *)(csl::Oscillator *) ((csl::Sine *) x));
}
static void *_p_csl__ConvolverTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::Convolver *) x));
}
static void *_p_csl__ScalableTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *)  ((csl::Scalable *) x));
}
static void *_p_csl__InOutTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::InOut *) x));
}
static void *_p_csl__AllpassTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *)(csl::Filter *) ((csl::Allpass *) x));
}
static void *_p_csl__CompOrCacheOscillatorTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Phased *)(csl::Oscillator *)(csl::WavetableOscillator *) ((csl::CompOrCacheOscillator *) x));
}
static void *_p_csl__WavetableOscillatorTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Phased *)(csl::Oscillator *) ((csl::WavetableOscillator *) x));
}
static void *_p_csl__OscillatorTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Phased *) ((csl::Oscillator *) x));
}
static void *_p_csl__NtoMPannerTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *)(csl::Panner *) ((csl::NtoMPanner *) x));
}
static void *_p_csl__BiquadTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *)(csl::Filter *) ((csl::Biquad *) x));
}
static void *_p_csl__SquareTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Phased *)(csl::Oscillator *) ((csl::Square *) x));
}
static void *_p_csl__FormantTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *)(csl::Filter *) ((csl::Formant *) x));
}
static void *_p_csl__StereoWidthTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::StereoWidth *) x));
}
static void *_p_csl__WhiteNoiseTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Scalable *)(csl::Noise *) ((csl::WhiteNoise *) x));
}
static void *_p_csl__NotchTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *)(csl::Filter *) ((csl::Notch *) x));
}
static void *_p_csl__MoogTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *)(csl::Filter *) ((csl::Moog *) x));
}
static void *_p_csl__KarplusStringTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Scalable *) ((csl::KarplusString *) x));
}
static void *_p_csl__TriangleTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Scalable *)(csl::Envelope *) ((csl::Triangle *) x));
}
static void *_p_csl__ImpulseTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Phased *)(csl::Oscillator *) ((csl::Impulse *) x));
}
static void *_p_csl__DelayLineTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::DelayLine *) x));
}
static void *_p_csl__MixerTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Scalable *) ((csl::Mixer *) x));
}
static void *_p_csl__FanOutTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::FanOut *) x));
}
static void *_p_csl__FilterTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::Filter *) x));
}
static void *_p_csl__StereoverbTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::Stereoverb *) x));
}
static void *_p_csl__FIRTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::FIR *) x));
}
static void *_p_csl__FreeverbTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Effect *) ((csl::Freeverb *) x));
}
static void *_p_csl__PinkNoiseTo_p_csl__Controllable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Controllable *) (csl::Scalable *)(csl::Noise *) ((csl::PinkNoise *) x));
}
static void *_p_csl__JUCEIOTo_p_juce__AudioIODeviceCallback(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((juce::AudioIODeviceCallback *)  ((csl::JUCEIO *) x));
}
static void *_p_csl__MIDIOutTo_p_csl__MIDIIO(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::MIDIIO *)  ((csl::MIDIOut *) x));
}
static void *_p_csl__MIDIInTo_p_csl__MIDIIO(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::MIDIIO *)  ((csl::MIDIIn *) x));
}
static void *_p_csl__MIDIPlayerTo_p_csl__MIDIIO(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::MIDIIO *)  ((csl::MIDIPlayer *) x));
}
static void *_p_csl__SquareTo_p_csl__Phased(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Phased *) (csl::Oscillator *) ((csl::Square *) x));
}
static void *_p_csl__Abst_SoundFileTo_p_csl__Phased(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Phased *) (csl::Oscillator *)(csl::WavetableOscillator *) ((csl::Abst_SoundFile *) x));
}
static void *_p_csl__ImpulseTo_p_csl__Phased(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Phased *) (csl::Oscillator *) ((csl::Impulse *) x));
}
static void *_p_csl__SawtoothTo_p_csl__Phased(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Phased *) (csl::Oscillator *) ((csl::Sawtooth *) x));
}
static void *_p_csl__FSineTo_p_csl__Phased(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Phased *) (csl::Oscillator *) ((csl::FSine *) x));
}
static void *_p_csl__SumOfSinesTo_p_csl__Phased(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Phased *) (csl::Oscillator *)(csl::WavetableOscillator *)(csl::CompOrCacheOscillator *) ((csl::SumOfSines *) x));
}
static void *_p_csl__KarplusStringTo_p_csl__Phased(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Phased *)  ((csl::KarplusString *) x));
}
static void *_p_csl__OscillatorTo_p_csl__Phased(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Phased *)  ((csl::Oscillator *) x));
}
static void *_p_csl__WavetableOscillatorTo_p_csl__Phased(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Phased *) (csl::Oscillator *) ((csl::WavetableOscillator *) x));
}
static void *_p_csl__CompOrCacheOscillatorTo_p_csl__Phased(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Phased *) (csl::Oscillator *)(csl::WavetableOscillator *) ((csl::CompOrCacheOscillator *) x));
}
static void *_p_csl__SineTo_p_csl__Phased(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Phased *) (csl::Oscillator *) ((csl::Sine *) x));
}
static void *_p_csl__RingBufferTapTo_p_csl__Seekable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Seekable *)  ((csl::RingBufferTap *) x));
}
static void *_p_csl__Abst_SoundFileTo_p_csl__Seekable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Seekable *)  ((csl::Abst_SoundFile *) x));
}
static void *_p_csl__BufferStreamTo_p_csl__Seekable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Seekable *)  ((csl::BufferStream *) x));
}
static void *_p_csl__UnitGeneratorTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *)  ((csl::UnitGenerator *) x));
}
static void *_p_csl__DynamicVariableTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::DynamicVariable *) x));
}
static void *_p_csl__StaticVariableTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::StaticVariable *) x));
}
static void *_p_csl__RingBufferTapTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::RingBufferTap *) x));
}
static void *_p_csl__SineTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Oscillator *) ((csl::Sine *) x));
}
static void *_p_csl__BiquadTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *)(csl::Filter *) ((csl::Biquad *) x));
}
static void *_p_csl__IFFTTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::IFFT *) x));
}
static void *_p_csl__FanOutTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::FanOut *) x));
}
static void *_p_csl__BlockResizerTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::BlockResizer *) x));
}
static void *_p_csl__ConvolverTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::Convolver *) x));
}
static void *_p_csl__ADSRTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Envelope *) ((csl::ADSR *) x));
}
static void *_p_csl__MIDIPlayerTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::MIDIIO *) ((csl::MIDIPlayer *) x));
}
static void *_p_csl__OscillatorTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::Oscillator *) x));
}
static void *_p_csl__WavetableOscillatorTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Oscillator *) ((csl::WavetableOscillator *) x));
}
static void *_p_csl__CompOrCacheOscillatorTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Oscillator *)(csl::WavetableOscillator *) ((csl::CompOrCacheOscillator *) x));
}
static void *_p_csl__FormantTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *)(csl::Filter *) ((csl::Formant *) x));
}
static void *_p_csl__ARTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Envelope *) ((csl::AR *) x));
}
static void *_p_csl__MIDIInTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::MIDIIO *) ((csl::MIDIIn *) x));
}
static void *_p_csl__SawtoothTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Oscillator *) ((csl::Sawtooth *) x));
}
static void *_p_csl__AllpassTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *)(csl::Filter *) ((csl::Allpass *) x));
}
static void *_p_csl__NoiseTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::Noise *) x));
}
static void *_p_csl__SndFileInstrument0To_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Instrument *) ((csl::SndFileInstrument0 *) x));
}
static void *_p_csl__FileIOTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::IO *) ((csl::FileIO *) x));
}
static void *_p_csl__FancyFMInstrumentTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Instrument *)(csl::FMInstrument *) ((csl::FancyFMInstrument *) x));
}
static void *_p_csl__FMInstrumentTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Instrument *) ((csl::FMInstrument *) x));
}
static void *_p_csl__VAdditiveInstrumentTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Instrument *) ((csl::VAdditiveInstrument *) x));
}
static void *_p_csl__AdditiveInstrumentTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Instrument *) ((csl::AdditiveInstrument *) x));
}
static void *_p_csl__InstrumentTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::Instrument *) x));
}
static void *_p_csl__StringInstrumentTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Instrument *) ((csl::StringInstrument *) x));
}
static void *_p_csl__SplitterTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *)(csl::FanOut *) ((csl::Splitter *) x));
}
static void *_p_csl__MulOpTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *)(csl::BinaryOp *) ((csl::MulOp *) x));
}
static void *_p_csl__MIDIOutTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::MIDIIO *) ((csl::MIDIOut *) x));
}
static void *_p_csl__BinaryOpTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::BinaryOp *) x));
}
static void *_p_csl__Abst_SoundFileTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Oscillator *)(csl::WavetableOscillator *) ((csl::Abst_SoundFile *) x));
}
static void *_p_csl__FSineTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Oscillator *) ((csl::FSine *) x));
}
static void *_p_csl__MixerTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::Mixer *) x));
}
static void *_p_csl__NotchTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *)(csl::Filter *) ((csl::Notch *) x));
}
static void *_p_csl__IOTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *)  ((csl::IO *) x));
}
static void *_p_csl__HammingWindowTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Window *) ((csl::HammingWindow *) x));
}
static void *_p_csl__BlackmanHarrisWindowTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Window *) ((csl::BlackmanHarrisWindow *) x));
}
static void *_p_csl__KarplusStringTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::KarplusString *) x));
}
static void *_p_csl__StereoWidthTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::StereoWidth *) x));
}
static void *_p_csl__MoogTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *)(csl::Filter *) ((csl::Moog *) x));
}
static void *_p_csl__FilterTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::Filter *) x));
}
static void *_p_csl__NtoMPannerTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *)(csl::Panner *) ((csl::NtoMPanner *) x));
}
static void *_p_csl__EnvelopeTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::Envelope *) x));
}
static void *_p_csl__RandEnvelopeTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Envelope *) ((csl::RandEnvelope *) x));
}
static void *_p_csl__FreeverbTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::Freeverb *) x));
}
static void *_p_csl__DelayLineTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::DelayLine *) x));
}
static void *_p_csl__ButterTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *)(csl::Filter *) ((csl::Butter *) x));
}
static void *_p_csl__PinkNoiseTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Noise *) ((csl::PinkNoise *) x));
}
static void *_p_csl__FFTTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::FFT *) x));
}
static void *_p_csl__EffectTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::Effect *) x));
}
static void *_p_csl__JUCEIOTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::IO *) ((csl::JUCEIO *) x));
}
static void *_p_csl__JoinerTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::Joiner *) x));
}
static void *_p_csl__LineSegmentTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::LineSegment *) x));
}
static void *_p_csl__SoundCueTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::SoundCue *) x));
}
static void *_p_csl__StereoverbTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::Stereoverb *) x));
}
static void *_p_csl__FMBellTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Instrument *) ((csl::FMBell *) x));
}
static void *_p_csl__ImpulseTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Oscillator *) ((csl::Impulse *) x));
}
static void *_p_csl__SquareTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Oscillator *) ((csl::Square *) x));
}
static void *_p_csl__WhiteNoiseTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Noise *) ((csl::WhiteNoise *) x));
}
static void *_p_csl__BufferStreamTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::BufferStream *) x));
}
static void *_p_csl__RingBufferTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::RingBuffer *) x));
}
static void *_p_csl__RectangularWindowTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Window *) ((csl::RectangularWindow *) x));
}
static void *_p_csl__WindowTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *) ((csl::Window *) x));
}
static void *_p_csl__TriangularWindowTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Window *) ((csl::TriangularWindow *) x));
}
static void *_p_csl__HannWindowTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Window *) ((csl::HannWindow *) x));
}
static void *_p_csl__BlackmanWindowTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Window *) ((csl::BlackmanWindow *) x));
}
static void *_p_csl__WelchWindowTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Window *) ((csl::WelchWindow *) x));
}
static void *_p_csl__FIRTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::FIR *) x));
}
static void *_p_csl__MIDIIOTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *)  ((csl::MIDIIO *) x));
}
static void *_p_csl__PannerTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::Panner *) x));
}
static void *_p_csl__SumOfSinesTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Oscillator *)(csl::WavetableOscillator *)(csl::CompOrCacheOscillator *) ((csl::SumOfSines *) x));
}
static void *_p_csl__InOutTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *) ((csl::InOut *) x));
}
static void *_p_csl__AddOpTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Effect *)(csl::BinaryOp *) ((csl::AddOp *) x));
}
static void *_p_csl__TriangleTo_p_csl__Model(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Model *) (csl::UnitGenerator *)(csl::Envelope *) ((csl::Triangle *) x));
}
static void *_p_csl__FancyFMInstrumentTo_p_csl__FMInstrument(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::FMInstrument *)  ((csl::FancyFMInstrument *) x));
}
static void *_p_csl__AdditiveInstrumentTo_p_csl__Instrument(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Instrument *)  ((csl::AdditiveInstrument *) x));
}
static void *_p_csl__VAdditiveInstrumentTo_p_csl__Instrument(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Instrument *)  ((csl::VAdditiveInstrument *) x));
}
static void *_p_csl__FMInstrumentTo_p_csl__Instrument(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Instrument *)  ((csl::FMInstrument *) x));
}
static void *_p_csl__FancyFMInstrumentTo_p_csl__Instrument(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Instrument *) (csl::FMInstrument *) ((csl::FancyFMInstrument *) x));
}
static void *_p_csl__StringInstrumentTo_p_csl__Instrument(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Instrument *)  ((csl::StringInstrument *) x));
}
static void *_p_csl__FMBellTo_p_csl__Instrument(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Instrument *)  ((csl::FMBell *) x));
}
static void *_p_csl__SndFileInstrument0To_p_csl__Instrument(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Instrument *)  ((csl::SndFileInstrument0 *) x));
}
static void *_p_csl__TriangleTo_p_csl__Envelope(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Envelope *)  ((csl::Triangle *) x));
}
static void *_p_csl__ADSRTo_p_csl__Envelope(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Envelope *)  ((csl::ADSR *) x));
}
static void *_p_csl__RandEnvelopeTo_p_csl__Envelope(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Envelope *)  ((csl::RandEnvelope *) x));
}
static void *_p_csl__ARTo_p_csl__Envelope(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Envelope *)  ((csl::AR *) x));
}
static void *_p_csl__RectangularWindowTo_p_csl__Window(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Window *)  ((csl::RectangularWindow *) x));
}
static void *_p_csl__TriangularWindowTo_p_csl__Window(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Window *)  ((csl::TriangularWindow *) x));
}
static void *_p_csl__HannWindowTo_p_csl__Window(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Window *)  ((csl::HannWindow *) x));
}
static void *_p_csl__BlackmanWindowTo_p_csl__Window(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Window *)  ((csl::BlackmanWindow *) x));
}
static void *_p_csl__WelchWindowTo_p_csl__Window(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Window *)  ((csl::WelchWindow *) x));
}
static void *_p_csl__HammingWindowTo_p_csl__Window(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Window *)  ((csl::HammingWindow *) x));
}
static void *_p_csl__BlackmanHarrisWindowTo_p_csl__Window(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Window *)  ((csl::BlackmanHarrisWindow *) x));
}
static void *_p_csl__WhiteNoiseTo_p_csl__Noise(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Noise *)  ((csl::WhiteNoise *) x));
}
static void *_p_csl__PinkNoiseTo_p_csl__Noise(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Noise *)  ((csl::PinkNoise *) x));
}
static void *_p_csl__DomainErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (csl::CException *)(csl::ValueError *) ((csl::DomainError *) x));
}
static void *_p_csl__CExceptionTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *)  ((csl::CException *) x));
}
static void *_p_csl__TimingErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (csl::CException *) ((csl::TimingError *) x));
}
static void *_p_csl__ProcessingErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (csl::CException *)(csl::ValueError *) ((csl::ProcessingError *) x));
}
static void *_p_csl__MemoryErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (csl::CException *) ((csl::MemoryError *) x));
}
static void *_p_csl__ValueErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (csl::CException *) ((csl::ValueError *) x));
}
static void *_p_csl__RunTimeErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (csl::CException *) ((csl::RunTimeError *) x));
}
static void *_p_csl__OutOfRangeErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (csl::CException *)(csl::ValueError *) ((csl::OutOfRangeError *) x));
}
static void *_p_csl__IOErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (csl::CException *)(csl::ValueError *) ((csl::IOError *) x));
}
static void *_p_csl__DBErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (csl::CException *)(csl::LogicError *) ((csl::DBError *) x));
}
static void *_p_csl__LogicErrorTo_p_std__exception(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::exception *) (csl::CException *) ((csl::LogicError *) x));
}
static void *_p_csl__DomainErrorTo_p_csl__CException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CException *) (csl::ValueError *) ((csl::DomainError *) x));
}
static void *_p_csl__TimingErrorTo_p_csl__CException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CException *)  ((csl::TimingError *) x));
}
static void *_p_csl__ProcessingErrorTo_p_csl__CException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CException *) (csl::ValueError *) ((csl::ProcessingError *) x));
}
static void *_p_csl__MemoryErrorTo_p_csl__CException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CException *)  ((csl::MemoryError *) x));
}
static void *_p_csl__ValueErrorTo_p_csl__CException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CException *)  ((csl::ValueError *) x));
}
static void *_p_csl__RunTimeErrorTo_p_csl__CException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CException *)  ((csl::RunTimeError *) x));
}
static void *_p_csl__OutOfRangeErrorTo_p_csl__CException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CException *) (csl::ValueError *) ((csl::OutOfRangeError *) x));
}
static void *_p_csl__IOErrorTo_p_csl__CException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CException *) (csl::ValueError *) ((csl::IOError *) x));
}
static void *_p_csl__DBErrorTo_p_csl__CException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CException *) (csl::LogicError *) ((csl::DBError *) x));
}
static void *_p_csl__LogicErrorTo_p_csl__CException(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CException *)  ((csl::LogicError *) x));
}
static void *_p_csl__NtoMPannerTo_p_csl__Panner(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Panner *)  ((csl::NtoMPanner *) x));
}
static void *_p_csl__FileIOTo_p_csl__IO(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::IO *)  ((csl::FileIO *) x));
}
static void *_p_csl__JUCEIOTo_p_csl__IO(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::IO *)  ((csl::JUCEIO *) x));
}
static void *_p_csl__MulOpTo_p_csl__BinaryOp(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::BinaryOp *)  ((csl::MulOp *) x));
}
static void *_p_csl__AddOpTo_p_csl__BinaryOp(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::BinaryOp *)  ((csl::AddOp *) x));
}
static void *_p_csl__RingBufferTo_p_csl__Writeable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Writeable *)  ((csl::RingBuffer *) x));
}
static void *_p_csl__Abst_SoundFileTo_p_csl__Writeable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Writeable *)  ((csl::Abst_SoundFile *) x));
}
static void *_p_csl__BufferStreamTo_p_csl__Writeable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Writeable *)  ((csl::BufferStream *) x));
}
static void *_p_csl__FreeverbTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *)  ((csl::Freeverb *) x));
}
static void *_p_csl__SineTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Oscillator *) ((csl::Sine *) x));
}
static void *_p_csl__NoiseTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *)  ((csl::Noise *) x));
}
static void *_p_csl__PannerTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *)  ((csl::Panner *) x));
}
static void *_p_csl__SumOfSinesTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Oscillator *)(csl::WavetableOscillator *)(csl::CompOrCacheOscillator *) ((csl::SumOfSines *) x));
}
static void *_p_csl__SawtoothTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Oscillator *) ((csl::Sawtooth *) x));
}
static void *_p_csl__FormantTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Filter *) ((csl::Formant *) x));
}
static void *_p_csl__MoogTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Filter *) ((csl::Moog *) x));
}
static void *_p_csl__CompOrCacheOscillatorTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Oscillator *)(csl::WavetableOscillator *) ((csl::CompOrCacheOscillator *) x));
}
static void *_p_csl__WavetableOscillatorTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Oscillator *) ((csl::WavetableOscillator *) x));
}
static void *_p_csl__OscillatorTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *)  ((csl::Oscillator *) x));
}
static void *_p_csl__FSineTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Oscillator *) ((csl::FSine *) x));
}
static void *_p_csl__PinkNoiseTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Noise *) ((csl::PinkNoise *) x));
}
static void *_p_csl__KarplusStringTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *)  ((csl::KarplusString *) x));
}
static void *_p_csl__ARTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Envelope *) ((csl::AR *) x));
}
static void *_p_csl__AllpassTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Filter *) ((csl::Allpass *) x));
}
static void *_p_csl__RandEnvelopeTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Envelope *) ((csl::RandEnvelope *) x));
}
static void *_p_csl__EnvelopeTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *)  ((csl::Envelope *) x));
}
static void *_p_csl__WhiteNoiseTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Noise *) ((csl::WhiteNoise *) x));
}
static void *_p_csl__ImpulseTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Oscillator *) ((csl::Impulse *) x));
}
static void *_p_csl__NotchTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Filter *) ((csl::Notch *) x));
}
static void *_p_csl__Abst_SoundFileTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Oscillator *)(csl::WavetableOscillator *) ((csl::Abst_SoundFile *) x));
}
static void *_p_csl__TriangleTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Envelope *) ((csl::Triangle *) x));
}
static void *_p_csl__RingBufferTapTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *)  ((csl::RingBufferTap *) x));
}
static void *_p_csl__FilterTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *)  ((csl::Filter *) x));
}
static void *_p_csl__ADSRTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Envelope *) ((csl::ADSR *) x));
}
static void *_p_csl__SquareTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Oscillator *) ((csl::Square *) x));
}
static void *_p_csl__ButterTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Filter *) ((csl::Butter *) x));
}
static void *_p_csl__BiquadTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Filter *) ((csl::Biquad *) x));
}
static void *_p_csl__NtoMPannerTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *) (csl::Panner *) ((csl::NtoMPanner *) x));
}
static void *_p_csl__RingBufferTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *)  ((csl::RingBuffer *) x));
}
static void *_p_csl__MixerTo_p_csl__Scalable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Scalable *)  ((csl::Mixer *) x));
}
static void *_p_csl__SumOfSinesTo_p_csl__Cacheable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Cacheable *) (csl::CompOrCacheOscillator *) ((csl::SumOfSines *) x));
}
static void *_p_csl__CompOrCacheOscillatorTo_p_csl__Cacheable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Cacheable *)  ((csl::CompOrCacheOscillator *) x));
}
static void *_p_csl__StaticVariableTo_p_csl__CVariable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CVariable *)  ((csl::StaticVariable *) x));
}
static void *_p_csl__DynamicVariableTo_p_csl__CVariable(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::CVariable *)  ((csl::DynamicVariable *) x));
}
static void *_p_csl__DomainErrorTo_p_csl__ValueError(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::ValueError *)  ((csl::DomainError *) x));
}
static void *_p_csl__ProcessingErrorTo_p_csl__ValueError(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::ValueError *)  ((csl::ProcessingError *) x));
}
static void *_p_csl__OutOfRangeErrorTo_p_csl__ValueError(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::ValueError *)  ((csl::OutOfRangeError *) x));
}
static void *_p_csl__IOErrorTo_p_csl__ValueError(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::ValueError *)  ((csl::IOError *) x));
}
static void *_p_csl__FreeverbTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::Freeverb *) x));
}
static void *_p_csl__BinaryOpTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::BinaryOp *) x));
}
static void *_p_csl__PannerTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::Panner *) x));
}
static void *_p_csl__FormantTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *) (csl::Filter *) ((csl::Formant *) x));
}
static void *_p_csl__StereoWidthTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::StereoWidth *) x));
}
static void *_p_csl__MoogTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *) (csl::Filter *) ((csl::Moog *) x));
}
static void *_p_csl__InOutTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::InOut *) x));
}
static void *_p_csl__AllpassTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *) (csl::Filter *) ((csl::Allpass *) x));
}
static void *_p_csl__FIRTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::FIR *) x));
}
static void *_p_csl__StereoverbTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::Stereoverb *) x));
}
static void *_p_csl__SplitterTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *) (csl::FanOut *) ((csl::Splitter *) x));
}
static void *_p_csl__DynamicVariableTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::DynamicVariable *) x));
}
static void *_p_csl__ConvolverTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::Convolver *) x));
}
static void *_p_csl__DelayLineTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::DelayLine *) x));
}
static void *_p_csl__AddOpTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *) (csl::BinaryOp *) ((csl::AddOp *) x));
}
static void *_p_csl__NotchTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *) (csl::Filter *) ((csl::Notch *) x));
}
static void *_p_csl__FilterTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::Filter *) x));
}
static void *_p_csl__BiquadTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *) (csl::Filter *) ((csl::Biquad *) x));
}
static void *_p_csl__FFTTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::FFT *) x));
}
static void *_p_csl__FanOutTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::FanOut *) x));
}
static void *_p_csl__ButterTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *) (csl::Filter *) ((csl::Butter *) x));
}
static void *_p_csl__NtoMPannerTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *) (csl::Panner *) ((csl::NtoMPanner *) x));
}
static void *_p_csl__JoinerTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::Joiner *) x));
}
static void *_p_csl__MulOpTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *) (csl::BinaryOp *) ((csl::MulOp *) x));
}
static void *_p_csl__RingBufferTo_p_csl__Effect(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csl::Effect *)  ((csl::RingBuffer *) x));
}
static swig_type_info _swigt__p_ArrayT_double_t = {"_p_ArrayT_double_t", "Array< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArrayT_int_t = {"_p_ArrayT_int_t", "Array< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BigInteger = {"_p_BigInteger", "BigInteger *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CSL_FFTType = {"_p_CSL_FFTType", "CSL_FFTType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FILE = {"_p_FILE", "FILE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Ptr = {"_p_Ptr", "Ptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_String = {"_p_String", "String *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_StringArray = {"_p_StringArray", "StringArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_a_2__float = {"_p_a_2__float", "csl::SampleComplexVector|float (*)[2]|csl::SampleComplex *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__ADSR = {"_p_csl__ADSR", "csl::ADSR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__AR = {"_p_csl__AR", "csl::AR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Abst_SoundFile = {"_p_csl__Abst_SoundFile", "csl::Abst_SoundFile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Accessor = {"_p_csl__Accessor", "csl::Accessor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__AddOp = {"_p_csl__AddOp", "csl::AddOp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__AdditiveInstrument = {"_p_csl__AdditiveInstrument", "csl::AdditiveInstrument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Allpass = {"_p_csl__Allpass", "csl::Allpass *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__BinaryOp = {"_p_csl__BinaryOp", "csl::BinaryOp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Biquad = {"_p_csl__Biquad", "csl::Biquad *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__BlackmanHarrisWindow = {"_p_csl__BlackmanHarrisWindow", "csl::BlackmanHarrisWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__BlackmanWindow = {"_p_csl__BlackmanWindow", "csl::BlackmanWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__BlockResizer = {"_p_csl__BlockResizer", "csl::BlockResizer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Buffer = {"_p_csl__Buffer", "csl::Buffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__BufferCMap = {"_p_csl__BufferCMap", "csl::BufferCMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__BufferContentType = {"_p_csl__BufferContentType", "enum csl::BufferContentType *|csl::BufferContentType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__BufferCopyPolicy = {"_p_csl__BufferCopyPolicy", "enum csl::BufferCopyPolicy *|csl::BufferCopyPolicy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__BufferStream = {"_p_csl__BufferStream", "csl::BufferStream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Butter = {"_p_csl__Butter", "csl::Butter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__CException = {"_p_csl__CException", "csl::CException *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__CGestalt = {"_p_csl__CGestalt", "csl::CGestalt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__CMIDIMessage = {"_p_csl__CMIDIMessage", "csl::CMIDIMessage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__CMIDIMessageType = {"_p_csl__CMIDIMessageType", "enum csl::CMIDIMessageType *|csl::CMIDIMessageType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__CPoint = {"_p_csl__CPoint", "csl::CPoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__CThread = {"_p_csl__CThread", "csl::CThread *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__CVariable = {"_p_csl__CVariable", "csl::CVariable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Cacheable = {"_p_csl__Cacheable", "csl::Cacheable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Comb = {"_p_csl__Comb", "csl::Comb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__CompOrCacheOscillator = {"_p_csl__CompOrCacheOscillator", "csl::CompOrCacheOscillator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Controllable = {"_p_csl__Controllable", "csl::Controllable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Convolver = {"_p_csl__Convolver", "csl::Convolver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__DBError = {"_p_csl__DBError", "csl::DBError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__DelayLine = {"_p_csl__DelayLine", "csl::DelayLine *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__DomainError = {"_p_csl__DomainError", "csl::DomainError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__DynamicVariable = {"_p_csl__DynamicVariable", "csl::DynamicVariable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Effect = {"_p_csl__Effect", "csl::Effect *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Envelope = {"_p_csl__Envelope", "csl::Envelope *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FAllpass = {"_p_csl__FAllpass", "csl::FAllpass *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FFT = {"_p_csl__FFT", "csl::FFT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FIR = {"_p_csl__FIR", "csl::FIR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FMBell = {"_p_csl__FMBell", "csl::FMBell *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FMInstrument = {"_p_csl__FMInstrument", "csl::FMInstrument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FSine = {"_p_csl__FSine", "csl::FSine *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FanOut = {"_p_csl__FanOut", "csl::FanOut *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FancyFMInstrument = {"_p_csl__FancyFMInstrument", "csl::FancyFMInstrument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FileIO = {"_p_csl__FileIO", "csl::FileIO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Filter = {"_p_csl__Filter", "csl::Filter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FilterSpecification = {"_p_csl__FilterSpecification", "csl::FilterSpecification *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FilterType = {"_p_csl__FilterType", "enum csl::FilterType *|csl::FilterType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Formant = {"_p_csl__Formant", "csl::Formant *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Freeverb = {"_p_csl__Freeverb", "csl::Freeverb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__FrequencyAmount = {"_p_csl__FrequencyAmount", "csl::FrequencyAmount *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__HammingWindow = {"_p_csl__HammingWindow", "csl::HammingWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__HannWindow = {"_p_csl__HannWindow", "csl::HannWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__IFFT = {"_p_csl__IFFT", "csl::IFFT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__IO = {"_p_csl__IO", "csl::IO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__IODevice = {"_p_csl__IODevice", "csl::IODevice *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__IOError = {"_p_csl__IOError", "csl::IOError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__IO_Status = {"_p_csl__IO_Status", "enum csl::IO_Status *|csl::IO_Status *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Impulse = {"_p_csl__Impulse", "csl::Impulse *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__InOut = {"_p_csl__InOut", "csl::InOut *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__InOutFlags = {"_p_csl__InOutFlags", "enum csl::InOutFlags *|csl::InOutFlags *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Instrument = {"_p_csl__Instrument", "csl::Instrument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Interleaver = {"_p_csl__Interleaver", "csl::Interleaver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__InterpolationPolicy = {"_p_csl__InterpolationPolicy", "enum csl::InterpolationPolicy *|csl::InterpolationPolicy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__JUCEIO = {"_p_csl__JUCEIO", "csl::JUCEIO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Joiner = {"_p_csl__Joiner", "csl::Joiner *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__KarplusString = {"_p_csl__KarplusString", "csl::KarplusString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__LineMode = {"_p_csl__LineMode", "enum csl::LineMode *|csl::LineMode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__LineSegment = {"_p_csl__LineSegment", "csl::LineSegment *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__LogLevel = {"_p_csl__LogLevel", "enum csl::LogLevel *|csl::LogLevel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__LogicError = {"_p_csl__LogicError", "csl::LogicError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__MIDIIO = {"_p_csl__MIDIIO", "csl::MIDIIO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__MIDIIn = {"_p_csl__MIDIIn", "csl::MIDIIn *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__MIDIOut = {"_p_csl__MIDIOut", "csl::MIDIOut *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__MIDIPlayer = {"_p_csl__MIDIPlayer", "csl::MIDIPlayer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__MemoryError = {"_p_csl__MemoryError", "csl::MemoryError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__MidiDeviceListEntry = {"_p_csl__MidiDeviceListEntry", "csl::MidiDeviceListEntry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Mixer = {"_p_csl__Mixer", "csl::Mixer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Model = {"_p_csl__Model", "csl::Model *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Moog = {"_p_csl__Moog", "csl::Moog *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__MulOp = {"_p_csl__MulOp", "csl::MulOp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Noise = {"_p_csl__Noise", "csl::Noise *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Notch = {"_p_csl__Notch", "csl::Notch *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__NtoMPanner = {"_p_csl__NtoMPanner", "csl::NtoMPanner *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Observer = {"_p_csl__Observer", "csl::Observer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Oscillator = {"_p_csl__Oscillator", "csl::Oscillator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__OutOfRangeError = {"_p_csl__OutOfRangeError", "csl::OutOfRangeError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Panner = {"_p_csl__Panner", "csl::Panner *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Partial = {"_p_csl__Partial", "csl::Partial *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__PartialDescriptionMode = {"_p_csl__PartialDescriptionMode", "enum csl::PartialDescriptionMode *|csl::PartialDescriptionMode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Phased = {"_p_csl__Phased", "csl::Phased *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__PinkNoise = {"_p_csl__PinkNoise", "csl::PinkNoise *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__PointMode = {"_p_csl__PointMode", "enum csl::PointMode *|csl::PointMode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Port = {"_p_csl__Port", "csl::Port *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__ProcessingError = {"_p_csl__ProcessingError", "csl::ProcessingError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__RandEnvelope = {"_p_csl__RandEnvelope", "csl::RandEnvelope *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__RectangularWindow = {"_p_csl__RectangularWindow", "csl::RectangularWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__RingBuffer = {"_p_csl__RingBuffer", "csl::RingBuffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__RingBufferTap = {"_p_csl__RingBufferTap", "csl::RingBufferTap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__RunTimeError = {"_p_csl__RunTimeError", "csl::RunTimeError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__SHARCInstrument = {"_p_csl__SHARCInstrument", "csl::SHARCInstrument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__SHARCLibrary = {"_p_csl__SHARCLibrary", "csl::SHARCLibrary *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__SHARCSpectrum = {"_p_csl__SHARCSpectrum", "csl::SHARCSpectrum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Sawtooth = {"_p_csl__Sawtooth", "csl::Sawtooth *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Scalable = {"_p_csl__Scalable", "csl::Scalable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__SeekPosition = {"_p_csl__SeekPosition", "enum csl::SeekPosition *|csl::SeekPosition *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Seekable = {"_p_csl__Seekable", "csl::Seekable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Sine = {"_p_csl__Sine", "csl::Sine *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__SndFileInstrument0 = {"_p_csl__SndFileInstrument0", "csl::SndFileInstrument0 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__SoundCue = {"_p_csl__SoundCue", "csl::SoundCue *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__SoundFileBuffer = {"_p_csl__SoundFileBuffer", "csl::SoundFileBuffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__SoundFileFormat = {"_p_csl__SoundFileFormat", "enum csl::SoundFileFormat *|csl::SoundFileFormat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__SoundFileMetadata = {"_p_csl__SoundFileMetadata", "csl::SoundFileMetadata *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__SoundFileMode = {"_p_csl__SoundFileMode", "enum csl::SoundFileMode *|csl::SoundFileMode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Splitter = {"_p_csl__Splitter", "csl::Splitter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Square = {"_p_csl__Square", "csl::Square *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__StaticVariable = {"_p_csl__StaticVariable", "csl::StaticVariable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Status = {"_p_csl__Status", "enum csl::Status *|csl::Status *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__StereoWidth = {"_p_csl__StereoWidth", "csl::StereoWidth *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Stereoverb = {"_p_csl__Stereoverb", "csl::Stereoverb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__StringInstrument = {"_p_csl__StringInstrument", "csl::StringInstrument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__SumOfSines = {"_p_csl__SumOfSines", "csl::SumOfSines *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__TimingError = {"_p_csl__TimingError", "csl::TimingError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Triangle = {"_p_csl__Triangle", "csl::Triangle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__TriangularWindow = {"_p_csl__TriangularWindow", "csl::TriangularWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__UnitGenerator = {"_p_csl__UnitGenerator", "csl::UnitGenerator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__VAdditiveInstrument = {"_p_csl__VAdditiveInstrument", "csl::VAdditiveInstrument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__VOperator = {"_p_csl__VOperator", "enum csl::VOperator *|csl::VOperator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__ValueError = {"_p_csl__ValueError", "csl::ValueError *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__WavetableOscillator = {"_p_csl__WavetableOscillator", "csl::WavetableOscillator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__WelchWindow = {"_p_csl__WelchWindow", "csl::WelchWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__WhiteNoise = {"_p_csl__WhiteNoise", "csl::WhiteNoise *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Window = {"_p_csl__Window", "csl::Window *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__Writeable = {"_p_csl__Writeable", "csl::Writeable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csl__testStruct = {"_p_csl__testStruct", "csl::testStruct *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void__p_void = {"_p_f_p_void__p_void", "csl::VoidFcnPtr *|void *(*)(void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_void__void = {"_p_f_p_void__void", "csl::CThread::VoidFcnPtr|void (*)(void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_void__void = {"_p_f_void__void", "void (*)(void)|csl::VoidFcnPtrN *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *|csl::SampleBuffer|csl::Sample *|csl::sample *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__ArrayT_juce__MidiMessage_t = {"_p_juce__ArrayT_juce__MidiMessage_t", "juce::Array< juce::MidiMessage > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__AudioIODevice = {"_p_juce__AudioIODevice", "juce::AudioIODevice *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__AudioIODeviceCallback = {"_p_juce__AudioIODeviceCallback", "juce::AudioIODeviceCallback *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__CriticalSection = {"_p_juce__CriticalSection", "juce::CriticalSection *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__MidiBuffer = {"_p_juce__MidiBuffer", "juce::MidiBuffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__MidiDeviceInfo = {"_p_juce__MidiDeviceInfo", "juce::MidiDeviceInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__MidiFile = {"_p_juce__MidiFile", "juce::MidiFile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__MidiInput = {"_p_juce__MidiInput", "juce::MidiInput *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__MidiKeyboardState = {"_p_juce__MidiKeyboardState", "juce::MidiKeyboardState *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__MidiMessage = {"_p_juce__MidiMessage", "juce::MidiMessage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__MidiMessageSequence = {"_p_juce__MidiMessageSequence", "juce::MidiMessageSequence *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__MidiOutput = {"_p_juce__MidiOutput", "juce::MidiOutput *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__ReferenceCountedObject = {"_p_juce__ReferenceCountedObject", "juce::ReferenceCountedObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_juce__SingleThreadedReferenceCountedObject = {"_p_juce__SingleThreadedReferenceCountedObject", "juce::SingleThreadedReferenceCountedObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_csl__Partial = {"_p_p_csl__Partial", "csl::Partial **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_csl__SHARCInstrument = {"_p_p_csl__SHARCInstrument", "csl::SHARCInstrument **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_csl__SHARCSpectrum = {"_p_p_csl__SHARCSpectrum", "csl::SHARCSpectrum **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_float = {"_p_p_float", "csl::SampleBuffer *|float **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_void = {"_p_p_void", "void **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__exception = {"_p_std__exception", "std::exception *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_float_csl__LineSegment_p_std__lessT_float_t_std__allocatorT_std__pairT_float_const_csl__LineSegment_p_t_t_t = {"_p_std__mapT_float_csl__LineSegment_p_std__lessT_float_t_std__allocatorT_std__pairT_float_const_csl__LineSegment_p_t_t_t", "std::map< float,csl::LineSegment *,std::less< float >,std::allocator< std::pair< float const,csl::LineSegment * > > > *|csl::Breakpoints *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_int_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_t_t_t = {"_p_std__mapT_int_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_t_t_t", "std::map< int,std::vector< csl::Instrument *,std::allocator< csl::Instrument * > >,std::less< int >,std::allocator< std::pair< int const,std::vector< csl::Instrument *,std::allocator< csl::Instrument * > > > > > *|csl::InstrumentLibrary *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_std__string_csl__Instrument_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__Instrument_p_t_t_t = {"_p_std__mapT_std__string_csl__Instrument_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__Instrument_p_t_t_t", "csl::InstrumentMap *|std::map< std::string,csl::Instrument *,std::less< std::string >,std::allocator< std::pair< std::string const,csl::Instrument * > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_std__string_csl__UnitGenerator_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__UnitGenerator_p_t_t_t = {"_p_std__mapT_std__string_csl__UnitGenerator_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__UnitGenerator_p_t_t_t", "csl::UGenMap *|std::map< std::string,csl::UnitGenerator *,std::less< std::string >,std::allocator< std::pair< std::string const,csl::UnitGenerator * > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t = {"_p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t", "csl::StringMap *|std::map< std::string,std::string,std::less< std::string >,std::allocator< std::pair< std::string const,std::string > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_unsigned_int_csl__Port_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__Port_p_t_t_t = {"_p_std__mapT_unsigned_int_csl__Port_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__Port_p_t_t_t", "csl::PortMap *|std::map< unsigned int,csl::Port *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,csl::Port * > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_unsigned_int_csl__UnitGenerator_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__UnitGenerator_p_t_t_t = {"_p_std__mapT_unsigned_int_csl__UnitGenerator_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__UnitGenerator_p_t_t_t", "std::map< unsigned int,csl::UnitGenerator *,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,csl::UnitGenerator * > > > *|csl::UGenIMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_unsigned_int_float_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_float_t_t_t = {"_p_std__mapT_unsigned_int_float_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_float_t_t_t", "std::map< unsigned int,float,std::less< unsigned int >,std::allocator< std::pair< unsigned int const,float > > > *|csl::FloatMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__unique_ptrT_juce__MidiInput_t = {"_p_std__unique_ptrT_juce__MidiInput_t", "std::unique_ptr< juce::MidiInput > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__unique_ptrT_juce__MidiOutput_t = {"_p_std__unique_ptrT_juce__MidiOutput_t", "std::unique_ptr< juce::MidiOutput > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_csl__Accessor_p_std__allocatorT_csl__Accessor_p_t_t = {"_p_std__vectorT_csl__Accessor_p_std__allocatorT_csl__Accessor_p_t_t", "std::vector< csl::Accessor *,std::allocator< csl::Accessor * > > *|csl::AccessorVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_csl__Buffer_p_std__allocatorT_csl__Buffer_p_t_t = {"_p_std__vectorT_csl__Buffer_p_std__allocatorT_csl__Buffer_p_t_t", "std::vector< csl::Buffer *,std::allocator< csl::Buffer * > > *|csl::BufferVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_csl__CPoint_p_std__allocatorT_csl__CPoint_p_t_t = {"_p_std__vectorT_csl__CPoint_p_std__allocatorT_csl__CPoint_p_t_t", "std::vector< csl::CPoint *,std::allocator< csl::CPoint * > > *|csl::PointVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_csl__IODevice_p_std__allocatorT_csl__IODevice_p_t_t = {"_p_std__vectorT_csl__IODevice_p_std__allocatorT_csl__IODevice_p_t_t", "std::vector< csl::IODevice *,std::allocator< csl::IODevice * > > *|csl::IODeviceVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t = {"_p_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t", "std::vector< csl::Instrument *,std::allocator< csl::Instrument * > > *|csl::InstrumentVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_csl__Observer_p_std__allocatorT_csl__Observer_p_t_t = {"_p_std__vectorT_csl__Observer_p_std__allocatorT_csl__Observer_p_t_t", "std::vector< csl::Observer *,std::allocator< csl::Observer * > > *|csl::ObserverVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_csl__UnitGenerator_p_std__allocatorT_csl__UnitGenerator_p_t_t = {"_p_std__vectorT_csl__UnitGenerator_p_std__allocatorT_csl__UnitGenerator_p_t_t", "std::vector< csl::UnitGenerator *,std::allocator< csl::UnitGenerator * > > *|csl::UGenVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_float_std__allocatorT_float_t_t = {"_p_std__vectorT_float_std__allocatorT_float_t_t", "std::vector< float,std::allocator< float > > *|std::vector< float > *|csl::FloatVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_int_std__allocatorT_int_t_t = {"_p_std__vectorT_int_std__allocatorT_int_t_t", "std::vector< int,std::allocator< int > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t = {"_p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t", "std::vector< unsigned int,std::allocator< unsigned int > > *|csl::UnsignedVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_timeval = {"_p_timeval", "timeval *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *|csl::CSL_MAP_KEY *|csl::uint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "csl::Timestamp *|unsigned long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_va_list = {"_p_va_list", "va_list *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_ArrayT_double_t,
  &_swigt__p_ArrayT_int_t,
  &_swigt__p_BigInteger,
  &_swigt__p_CSL_FFTType,
  &_swigt__p_FILE,
  &_swigt__p_Ptr,
  &_swigt__p_String,
  &_swigt__p_StringArray,
  &_swigt__p_a_2__float,
  &_swigt__p_char,
  &_swigt__p_csl__ADSR,
  &_swigt__p_csl__AR,
  &_swigt__p_csl__Abst_SoundFile,
  &_swigt__p_csl__Accessor,
  &_swigt__p_csl__AddOp,
  &_swigt__p_csl__AdditiveInstrument,
  &_swigt__p_csl__Allpass,
  &_swigt__p_csl__BinaryOp,
  &_swigt__p_csl__Biquad,
  &_swigt__p_csl__BlackmanHarrisWindow,
  &_swigt__p_csl__BlackmanWindow,
  &_swigt__p_csl__BlockResizer,
  &_swigt__p_csl__Buffer,
  &_swigt__p_csl__BufferCMap,
  &_swigt__p_csl__BufferContentType,
  &_swigt__p_csl__BufferCopyPolicy,
  &_swigt__p_csl__BufferStream,
  &_swigt__p_csl__Butter,
  &_swigt__p_csl__CException,
  &_swigt__p_csl__CGestalt,
  &_swigt__p_csl__CMIDIMessage,
  &_swigt__p_csl__CMIDIMessageType,
  &_swigt__p_csl__CPoint,
  &_swigt__p_csl__CThread,
  &_swigt__p_csl__CVariable,
  &_swigt__p_csl__Cacheable,
  &_swigt__p_csl__Comb,
  &_swigt__p_csl__CompOrCacheOscillator,
  &_swigt__p_csl__Controllable,
  &_swigt__p_csl__Convolver,
  &_swigt__p_csl__DBError,
  &_swigt__p_csl__DelayLine,
  &_swigt__p_csl__DomainError,
  &_swigt__p_csl__DynamicVariable,
  &_swigt__p_csl__Effect,
  &_swigt__p_csl__Envelope,
  &_swigt__p_csl__FAllpass,
  &_swigt__p_csl__FFT,
  &_swigt__p_csl__FIR,
  &_swigt__p_csl__FMBell,
  &_swigt__p_csl__FMInstrument,
  &_swigt__p_csl__FSine,
  &_swigt__p_csl__FanOut,
  &_swigt__p_csl__FancyFMInstrument,
  &_swigt__p_csl__FileIO,
  &_swigt__p_csl__Filter,
  &_swigt__p_csl__FilterSpecification,
  &_swigt__p_csl__FilterType,
  &_swigt__p_csl__Formant,
  &_swigt__p_csl__Freeverb,
  &_swigt__p_csl__FrequencyAmount,
  &_swigt__p_csl__HammingWindow,
  &_swigt__p_csl__HannWindow,
  &_swigt__p_csl__IFFT,
  &_swigt__p_csl__IO,
  &_swigt__p_csl__IODevice,
  &_swigt__p_csl__IOError,
  &_swigt__p_csl__IO_Status,
  &_swigt__p_csl__Impulse,
  &_swigt__p_csl__InOut,
  &_swigt__p_csl__InOutFlags,
  &_swigt__p_csl__Instrument,
  &_swigt__p_csl__Interleaver,
  &_swigt__p_csl__InterpolationPolicy,
  &_swigt__p_csl__JUCEIO,
  &_swigt__p_csl__Joiner,
  &_swigt__p_csl__KarplusString,
  &_swigt__p_csl__LineMode,
  &_swigt__p_csl__LineSegment,
  &_swigt__p_csl__LogLevel,
  &_swigt__p_csl__LogicError,
  &_swigt__p_csl__MIDIIO,
  &_swigt__p_csl__MIDIIn,
  &_swigt__p_csl__MIDIOut,
  &_swigt__p_csl__MIDIPlayer,
  &_swigt__p_csl__MemoryError,
  &_swigt__p_csl__MidiDeviceListEntry,
  &_swigt__p_csl__Mixer,
  &_swigt__p_csl__Model,
  &_swigt__p_csl__Moog,
  &_swigt__p_csl__MulOp,
  &_swigt__p_csl__Noise,
  &_swigt__p_csl__Notch,
  &_swigt__p_csl__NtoMPanner,
  &_swigt__p_csl__Observer,
  &_swigt__p_csl__Oscillator,
  &_swigt__p_csl__OutOfRangeError,
  &_swigt__p_csl__Panner,
  &_swigt__p_csl__Partial,
  &_swigt__p_csl__PartialDescriptionMode,
  &_swigt__p_csl__Phased,
  &_swigt__p_csl__PinkNoise,
  &_swigt__p_csl__PointMode,
  &_swigt__p_csl__Port,
  &_swigt__p_csl__ProcessingError,
  &_swigt__p_csl__RandEnvelope,
  &_swigt__p_csl__RectangularWindow,
  &_swigt__p_csl__RingBuffer,
  &_swigt__p_csl__RingBufferTap,
  &_swigt__p_csl__RunTimeError,
  &_swigt__p_csl__SHARCInstrument,
  &_swigt__p_csl__SHARCLibrary,
  &_swigt__p_csl__SHARCSpectrum,
  &_swigt__p_csl__Sawtooth,
  &_swigt__p_csl__Scalable,
  &_swigt__p_csl__SeekPosition,
  &_swigt__p_csl__Seekable,
  &_swigt__p_csl__Sine,
  &_swigt__p_csl__SndFileInstrument0,
  &_swigt__p_csl__SoundCue,
  &_swigt__p_csl__SoundFileBuffer,
  &_swigt__p_csl__SoundFileFormat,
  &_swigt__p_csl__SoundFileMetadata,
  &_swigt__p_csl__SoundFileMode,
  &_swigt__p_csl__Splitter,
  &_swigt__p_csl__Square,
  &_swigt__p_csl__StaticVariable,
  &_swigt__p_csl__Status,
  &_swigt__p_csl__StereoWidth,
  &_swigt__p_csl__Stereoverb,
  &_swigt__p_csl__StringInstrument,
  &_swigt__p_csl__SumOfSines,
  &_swigt__p_csl__TimingError,
  &_swigt__p_csl__Triangle,
  &_swigt__p_csl__TriangularWindow,
  &_swigt__p_csl__UnitGenerator,
  &_swigt__p_csl__VAdditiveInstrument,
  &_swigt__p_csl__VOperator,
  &_swigt__p_csl__ValueError,
  &_swigt__p_csl__WavetableOscillator,
  &_swigt__p_csl__WelchWindow,
  &_swigt__p_csl__WhiteNoise,
  &_swigt__p_csl__Window,
  &_swigt__p_csl__Writeable,
  &_swigt__p_csl__testStruct,
  &_swigt__p_double,
  &_swigt__p_f_p_void__p_void,
  &_swigt__p_f_p_void__void,
  &_swigt__p_f_void__void,
  &_swigt__p_float,
  &_swigt__p_juce__ArrayT_juce__MidiMessage_t,
  &_swigt__p_juce__AudioIODevice,
  &_swigt__p_juce__AudioIODeviceCallback,
  &_swigt__p_juce__CriticalSection,
  &_swigt__p_juce__MidiBuffer,
  &_swigt__p_juce__MidiDeviceInfo,
  &_swigt__p_juce__MidiFile,
  &_swigt__p_juce__MidiInput,
  &_swigt__p_juce__MidiKeyboardState,
  &_swigt__p_juce__MidiMessage,
  &_swigt__p_juce__MidiMessageSequence,
  &_swigt__p_juce__MidiOutput,
  &_swigt__p_juce__ReferenceCountedObject,
  &_swigt__p_juce__SingleThreadedReferenceCountedObject,
  &_swigt__p_long,
  &_swigt__p_p_char,
  &_swigt__p_p_csl__Partial,
  &_swigt__p_p_csl__SHARCInstrument,
  &_swigt__p_p_csl__SHARCSpectrum,
  &_swigt__p_p_float,
  &_swigt__p_p_void,
  &_swigt__p_short,
  &_swigt__p_std__exception,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__mapT_float_csl__LineSegment_p_std__lessT_float_t_std__allocatorT_std__pairT_float_const_csl__LineSegment_p_t_t_t,
  &_swigt__p_std__mapT_int_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_t_t_t,
  &_swigt__p_std__mapT_std__string_csl__Instrument_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__Instrument_p_t_t_t,
  &_swigt__p_std__mapT_std__string_csl__UnitGenerator_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__UnitGenerator_p_t_t_t,
  &_swigt__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t,
  &_swigt__p_std__mapT_unsigned_int_csl__Port_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__Port_p_t_t_t,
  &_swigt__p_std__mapT_unsigned_int_csl__UnitGenerator_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__UnitGenerator_p_t_t_t,
  &_swigt__p_std__mapT_unsigned_int_float_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_float_t_t_t,
  &_swigt__p_std__unique_ptrT_juce__MidiInput_t,
  &_swigt__p_std__unique_ptrT_juce__MidiOutput_t,
  &_swigt__p_std__vectorT_csl__Accessor_p_std__allocatorT_csl__Accessor_p_t_t,
  &_swigt__p_std__vectorT_csl__Buffer_p_std__allocatorT_csl__Buffer_p_t_t,
  &_swigt__p_std__vectorT_csl__CPoint_p_std__allocatorT_csl__CPoint_p_t_t,
  &_swigt__p_std__vectorT_csl__IODevice_p_std__allocatorT_csl__IODevice_p_t_t,
  &_swigt__p_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t,
  &_swigt__p_std__vectorT_csl__Observer_p_std__allocatorT_csl__Observer_p_t_t,
  &_swigt__p_std__vectorT_csl__UnitGenerator_p_std__allocatorT_csl__UnitGenerator_p_t_t,
  &_swigt__p_std__vectorT_float_std__allocatorT_float_t_t,
  &_swigt__p_std__vectorT_int_std__allocatorT_int_t_t,
  &_swigt__p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_timeval,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_va_list,
};

static swig_cast_info _swigc__p_ArrayT_double_t[] = {  {&_swigt__p_ArrayT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArrayT_int_t[] = {  {&_swigt__p_ArrayT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BigInteger[] = {  {&_swigt__p_BigInteger, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CSL_FFTType[] = {  {&_swigt__p_CSL_FFTType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FILE[] = {  {&_swigt__p_FILE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Ptr[] = {  {&_swigt__p_Ptr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_String[] = {  {&_swigt__p_String, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_StringArray[] = {  {&_swigt__p_StringArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_a_2__float[] = {  {&_swigt__p_a_2__float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__ADSR[] = {  {&_swigt__p_csl__ADSR, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__AR[] = {  {&_swigt__p_csl__AR, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Abst_SoundFile[] = {  {&_swigt__p_csl__Abst_SoundFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Accessor[] = {  {&_swigt__p_csl__Accessor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__AddOp[] = {  {&_swigt__p_csl__AddOp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__AdditiveInstrument[] = {  {&_swigt__p_csl__AdditiveInstrument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Allpass[] = {  {&_swigt__p_csl__Allpass, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__BinaryOp[] = {  {&_swigt__p_csl__BinaryOp, 0, 0, 0},  {&_swigt__p_csl__MulOp, _p_csl__MulOpTo_p_csl__BinaryOp, 0, 0},  {&_swigt__p_csl__AddOp, _p_csl__AddOpTo_p_csl__BinaryOp, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Biquad[] = {  {&_swigt__p_csl__Biquad, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__BlackmanHarrisWindow[] = {  {&_swigt__p_csl__BlackmanHarrisWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__BlackmanWindow[] = {  {&_swigt__p_csl__BlackmanWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__BlockResizer[] = {  {&_swigt__p_csl__BlockResizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Buffer[] = {  {&_swigt__p_csl__Buffer, 0, 0, 0},  {&_swigt__p_csl__SoundFileBuffer, _p_csl__SoundFileBufferTo_p_csl__Buffer, 0, 0},  {&_swigt__p_csl__BufferCMap, _p_csl__BufferCMapTo_p_csl__Buffer, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__BufferCMap[] = {  {&_swigt__p_csl__BufferCMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__BufferContentType[] = {  {&_swigt__p_csl__BufferContentType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__BufferCopyPolicy[] = {  {&_swigt__p_csl__BufferCopyPolicy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__BufferStream[] = {  {&_swigt__p_csl__BufferStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Butter[] = {  {&_swigt__p_csl__Butter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__CException[] = {  {&_swigt__p_csl__DomainError, _p_csl__DomainErrorTo_p_csl__CException, 0, 0},  {&_swigt__p_csl__CException, 0, 0, 0},  {&_swigt__p_csl__TimingError, _p_csl__TimingErrorTo_p_csl__CException, 0, 0},  {&_swigt__p_csl__ProcessingError, _p_csl__ProcessingErrorTo_p_csl__CException, 0, 0},  {&_swigt__p_csl__MemoryError, _p_csl__MemoryErrorTo_p_csl__CException, 0, 0},  {&_swigt__p_csl__ValueError, _p_csl__ValueErrorTo_p_csl__CException, 0, 0},  {&_swigt__p_csl__OutOfRangeError, _p_csl__OutOfRangeErrorTo_p_csl__CException, 0, 0},  {&_swigt__p_csl__IOError, _p_csl__IOErrorTo_p_csl__CException, 0, 0},  {&_swigt__p_csl__RunTimeError, _p_csl__RunTimeErrorTo_p_csl__CException, 0, 0},  {&_swigt__p_csl__DBError, _p_csl__DBErrorTo_p_csl__CException, 0, 0},  {&_swigt__p_csl__LogicError, _p_csl__LogicErrorTo_p_csl__CException, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__CGestalt[] = {  {&_swigt__p_csl__CGestalt, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__CMIDIMessage[] = {  {&_swigt__p_csl__CMIDIMessage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__CMIDIMessageType[] = {  {&_swigt__p_csl__CMIDIMessageType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__CPoint[] = {  {&_swigt__p_csl__CPoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__CThread[] = {  {&_swigt__p_csl__CThread, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__CVariable[] = {  {&_swigt__p_csl__CVariable, 0, 0, 0},  {&_swigt__p_csl__StaticVariable, _p_csl__StaticVariableTo_p_csl__CVariable, 0, 0},  {&_swigt__p_csl__DynamicVariable, _p_csl__DynamicVariableTo_p_csl__CVariable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Cacheable[] = {  {&_swigt__p_csl__Cacheable, 0, 0, 0},  {&_swigt__p_csl__SumOfSines, _p_csl__SumOfSinesTo_p_csl__Cacheable, 0, 0},  {&_swigt__p_csl__CompOrCacheOscillator, _p_csl__CompOrCacheOscillatorTo_p_csl__Cacheable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Comb[] = {  {&_swigt__p_csl__Comb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__CompOrCacheOscillator[] = {  {&_swigt__p_csl__SumOfSines, _p_csl__SumOfSinesTo_p_csl__CompOrCacheOscillator, 0, 0},  {&_swigt__p_csl__CompOrCacheOscillator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Controllable[] = {  {&_swigt__p_csl__Envelope, _p_csl__EnvelopeTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__RandEnvelope, _p_csl__RandEnvelopeTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__DynamicVariable, _p_csl__DynamicVariableTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Sawtooth, _p_csl__SawtoothTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__BinaryOp, _p_csl__BinaryOpTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Moog, _p_csl__MoogTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__FanOut, _p_csl__FanOutTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Filter, _p_csl__FilterTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__RingBufferTap, _p_csl__RingBufferTapTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Noise, _p_csl__NoiseTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__MulOp, _p_csl__MulOpTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__AR, _p_csl__ARTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__FSine, _p_csl__FSineTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__SumOfSines, _p_csl__SumOfSinesTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Abst_SoundFile, _p_csl__Abst_SoundFileTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Splitter, _p_csl__SplitterTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__FrequencyAmount, _p_csl__FrequencyAmountTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Effect, _p_csl__EffectTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__FFT, _p_csl__FFTTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Controllable, 0, 0, 0},  {&_swigt__p_csl__Convolver, _p_csl__ConvolverTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__RingBuffer, _p_csl__RingBufferTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__AddOp, _p_csl__AddOpTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Scalable, _p_csl__ScalableTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Allpass, _p_csl__AllpassTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Oscillator, _p_csl__OscillatorTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__WavetableOscillator, _p_csl__WavetableOscillatorTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__CompOrCacheOscillator, _p_csl__CompOrCacheOscillatorTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Panner, _p_csl__PannerTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__NtoMPanner, _p_csl__NtoMPannerTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Butter, _p_csl__ButterTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__InOut, _p_csl__InOutTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Formant, _p_csl__FormantTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__StereoWidth, _p_csl__StereoWidthTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__WhiteNoise, _p_csl__WhiteNoiseTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Joiner, _p_csl__JoinerTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__KarplusString, _p_csl__KarplusStringTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Phased, _p_csl__PhasedTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Triangle, _p_csl__TriangleTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__DelayLine, _p_csl__DelayLineTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Impulse, _p_csl__ImpulseTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Notch, _p_csl__NotchTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__ADSR, _p_csl__ADSRTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Stereoverb, _p_csl__StereoverbTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Sine, _p_csl__SineTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Biquad, _p_csl__BiquadTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Freeverb, _p_csl__FreeverbTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__FIR, _p_csl__FIRTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Mixer, _p_csl__MixerTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__PinkNoise, _p_csl__PinkNoiseTo_p_csl__Controllable, 0, 0},  {&_swigt__p_csl__Square, _p_csl__SquareTo_p_csl__Controllable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Convolver[] = {  {&_swigt__p_csl__Convolver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__DBError[] = {  {&_swigt__p_csl__DBError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__DelayLine[] = {  {&_swigt__p_csl__DelayLine, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__DomainError[] = {  {&_swigt__p_csl__DomainError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__DynamicVariable[] = {  {&_swigt__p_csl__DynamicVariable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Effect[] = {  {&_swigt__p_csl__MulOp, _p_csl__MulOpTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Freeverb, _p_csl__FreeverbTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__BinaryOp, _p_csl__BinaryOpTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__StereoWidth, _p_csl__StereoWidthTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Formant, _p_csl__FormantTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Effect, 0, 0, 0},  {&_swigt__p_csl__FFT, _p_csl__FFTTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Stereoverb, _p_csl__StereoverbTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Allpass, _p_csl__AllpassTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__InOut, _p_csl__InOutTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Splitter, _p_csl__SplitterTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__DynamicVariable, _p_csl__DynamicVariableTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Convolver, _p_csl__ConvolverTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Filter, _p_csl__FilterTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Biquad, _p_csl__BiquadTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Butter, _p_csl__ButterTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__FanOut, _p_csl__FanOutTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__DelayLine, _p_csl__DelayLineTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Joiner, _p_csl__JoinerTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__AddOp, _p_csl__AddOpTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Notch, _p_csl__NotchTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__FIR, _p_csl__FIRTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Panner, _p_csl__PannerTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__NtoMPanner, _p_csl__NtoMPannerTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__Moog, _p_csl__MoogTo_p_csl__Effect, 0, 0},  {&_swigt__p_csl__RingBuffer, _p_csl__RingBufferTo_p_csl__Effect, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Envelope[] = {  {&_swigt__p_csl__ADSR, _p_csl__ADSRTo_p_csl__Envelope, 0, 0},  {&_swigt__p_csl__Triangle, _p_csl__TriangleTo_p_csl__Envelope, 0, 0},  {&_swigt__p_csl__Envelope, 0, 0, 0},  {&_swigt__p_csl__RandEnvelope, _p_csl__RandEnvelopeTo_p_csl__Envelope, 0, 0},  {&_swigt__p_csl__AR, _p_csl__ARTo_p_csl__Envelope, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FAllpass[] = {  {&_swigt__p_csl__FAllpass, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FFT[] = {  {&_swigt__p_csl__FFT, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FIR[] = {  {&_swigt__p_csl__FIR, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FMBell[] = {  {&_swigt__p_csl__FMBell, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FMInstrument[] = {  {&_swigt__p_csl__FMInstrument, 0, 0, 0},  {&_swigt__p_csl__FancyFMInstrument, _p_csl__FancyFMInstrumentTo_p_csl__FMInstrument, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FSine[] = {  {&_swigt__p_csl__FSine, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FanOut[] = {  {&_swigt__p_csl__FanOut, 0, 0, 0},  {&_swigt__p_csl__Splitter, _p_csl__SplitterTo_p_csl__FanOut, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FancyFMInstrument[] = {  {&_swigt__p_csl__FancyFMInstrument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FileIO[] = {  {&_swigt__p_csl__FileIO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Filter[] = {  {&_swigt__p_csl__Allpass, _p_csl__AllpassTo_p_csl__Filter, 0, 0},  {&_swigt__p_csl__Moog, _p_csl__MoogTo_p_csl__Filter, 0, 0},  {&_swigt__p_csl__Biquad, _p_csl__BiquadTo_p_csl__Filter, 0, 0},  {&_swigt__p_csl__Butter, _p_csl__ButterTo_p_csl__Filter, 0, 0},  {&_swigt__p_csl__Formant, _p_csl__FormantTo_p_csl__Filter, 0, 0},  {&_swigt__p_csl__Filter, 0, 0, 0},  {&_swigt__p_csl__Notch, _p_csl__NotchTo_p_csl__Filter, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FilterSpecification[] = {  {&_swigt__p_csl__FilterSpecification, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FilterType[] = {  {&_swigt__p_csl__FilterType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Formant[] = {  {&_swigt__p_csl__Formant, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Freeverb[] = {  {&_swigt__p_csl__Freeverb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__FrequencyAmount[] = {  {&_swigt__p_csl__Allpass, _p_csl__AllpassTo_p_csl__FrequencyAmount, 0, 0},  {&_swigt__p_csl__Moog, _p_csl__MoogTo_p_csl__FrequencyAmount, 0, 0},  {&_swigt__p_csl__Biquad, _p_csl__BiquadTo_p_csl__FrequencyAmount, 0, 0},  {&_swigt__p_csl__Butter, _p_csl__ButterTo_p_csl__FrequencyAmount, 0, 0},  {&_swigt__p_csl__Formant, _p_csl__FormantTo_p_csl__FrequencyAmount, 0, 0},  {&_swigt__p_csl__FrequencyAmount, 0, 0, 0},  {&_swigt__p_csl__Filter, _p_csl__FilterTo_p_csl__FrequencyAmount, 0, 0},  {&_swigt__p_csl__Notch, _p_csl__NotchTo_p_csl__FrequencyAmount, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__HammingWindow[] = {  {&_swigt__p_csl__HammingWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__HannWindow[] = {  {&_swigt__p_csl__HannWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__IFFT[] = {  {&_swigt__p_csl__IFFT, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__IO[] = {  {&_swigt__p_csl__FileIO, _p_csl__FileIOTo_p_csl__IO, 0, 0},  {&_swigt__p_csl__IO, 0, 0, 0},  {&_swigt__p_csl__JUCEIO, _p_csl__JUCEIOTo_p_csl__IO, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__IODevice[] = {  {&_swigt__p_csl__IODevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__IOError[] = {  {&_swigt__p_csl__IOError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__IO_Status[] = {  {&_swigt__p_csl__IO_Status, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Impulse[] = {  {&_swigt__p_csl__Impulse, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__InOut[] = {  {&_swigt__p_csl__InOut, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__InOutFlags[] = {  {&_swigt__p_csl__InOutFlags, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Instrument[] = {  {&_swigt__p_csl__Instrument, 0, 0, 0},  {&_swigt__p_csl__AdditiveInstrument, _p_csl__AdditiveInstrumentTo_p_csl__Instrument, 0, 0},  {&_swigt__p_csl__VAdditiveInstrument, _p_csl__VAdditiveInstrumentTo_p_csl__Instrument, 0, 0},  {&_swigt__p_csl__FMInstrument, _p_csl__FMInstrumentTo_p_csl__Instrument, 0, 0},  {&_swigt__p_csl__FancyFMInstrument, _p_csl__FancyFMInstrumentTo_p_csl__Instrument, 0, 0},  {&_swigt__p_csl__StringInstrument, _p_csl__StringInstrumentTo_p_csl__Instrument, 0, 0},  {&_swigt__p_csl__FMBell, _p_csl__FMBellTo_p_csl__Instrument, 0, 0},  {&_swigt__p_csl__SndFileInstrument0, _p_csl__SndFileInstrument0To_p_csl__Instrument, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Interleaver[] = {  {&_swigt__p_csl__Interleaver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__InterpolationPolicy[] = {  {&_swigt__p_csl__InterpolationPolicy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__JUCEIO[] = {  {&_swigt__p_csl__JUCEIO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Joiner[] = {  {&_swigt__p_csl__Joiner, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__KarplusString[] = {  {&_swigt__p_csl__KarplusString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__LineMode[] = {  {&_swigt__p_csl__LineMode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__LineSegment[] = {  {&_swigt__p_csl__LineSegment, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__LogLevel[] = {  {&_swigt__p_csl__LogLevel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__LogicError[] = {  {&_swigt__p_csl__DBError, _p_csl__DBErrorTo_p_csl__LogicError, 0, 0},  {&_swigt__p_csl__LogicError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__MIDIIO[] = {  {&_swigt__p_csl__MIDIOut, _p_csl__MIDIOutTo_p_csl__MIDIIO, 0, 0},  {&_swigt__p_csl__MIDIIO, 0, 0, 0},  {&_swigt__p_csl__MIDIIn, _p_csl__MIDIInTo_p_csl__MIDIIO, 0, 0},  {&_swigt__p_csl__MIDIPlayer, _p_csl__MIDIPlayerTo_p_csl__MIDIIO, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__MIDIIn[] = {  {&_swigt__p_csl__MIDIIn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__MIDIOut[] = {  {&_swigt__p_csl__MIDIOut, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__MIDIPlayer[] = {  {&_swigt__p_csl__MIDIPlayer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__MemoryError[] = {  {&_swigt__p_csl__MemoryError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__MidiDeviceListEntry[] = {  {&_swigt__p_csl__MidiDeviceListEntry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Mixer[] = {  {&_swigt__p_csl__Mixer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Model[] = {  {&_swigt__p_csl__UnitGenerator, _p_csl__UnitGeneratorTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__DynamicVariable, _p_csl__DynamicVariableTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__StaticVariable, _p_csl__StaticVariableTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__RingBufferTap, _p_csl__RingBufferTapTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__FIR, _p_csl__FIRTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__IO, _p_csl__IOTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__BlockResizer, _p_csl__BlockResizerTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Convolver, _p_csl__ConvolverTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Oscillator, _p_csl__OscillatorTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__WavetableOscillator, _p_csl__WavetableOscillatorTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__CompOrCacheOscillator, _p_csl__CompOrCacheOscillatorTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__MIDIPlayer, _p_csl__MIDIPlayerTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Filter, _p_csl__FilterTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Formant, _p_csl__FormantTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Noise, _p_csl__NoiseTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Butter, _p_csl__ButterTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__MulOp, _p_csl__MulOpTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Sawtooth, _p_csl__SawtoothTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Effect, _p_csl__EffectTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Allpass, _p_csl__AllpassTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__SndFileInstrument0, _p_csl__SndFileInstrument0To_p_csl__Model, 0, 0},  {&_swigt__p_csl__FSine, _p_csl__FSineTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Moog, _p_csl__MoogTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Mixer, _p_csl__MixerTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__JUCEIO, _p_csl__JUCEIOTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Joiner, _p_csl__JoinerTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__StringInstrument, _p_csl__StringInstrumentTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__FancyFMInstrument, _p_csl__FancyFMInstrumentTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__FMInstrument, _p_csl__FMInstrumentTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__VAdditiveInstrument, _p_csl__VAdditiveInstrumentTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__AdditiveInstrument, _p_csl__AdditiveInstrumentTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Instrument, _p_csl__InstrumentTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Splitter, _p_csl__SplitterTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Notch, _p_csl__NotchTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__MIDIOut, _p_csl__MIDIOutTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__FMBell, _p_csl__FMBellTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__BinaryOp, _p_csl__BinaryOpTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Square, _p_csl__SquareTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Abst_SoundFile, _p_csl__Abst_SoundFileTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Window, _p_csl__WindowTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__BlackmanHarrisWindow, _p_csl__BlackmanHarrisWindowTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__HammingWindow, _p_csl__HammingWindowTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__KarplusString, _p_csl__KarplusStringTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__StereoWidth, _p_csl__StereoWidthTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__MIDIIO, _p_csl__MIDIIOTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__NtoMPanner, _p_csl__NtoMPannerTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Panner, _p_csl__PannerTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Envelope, _p_csl__EnvelopeTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__RandEnvelope, _p_csl__RandEnvelopeTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Freeverb, _p_csl__FreeverbTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__DelayLine, _p_csl__DelayLineTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__PinkNoise, _p_csl__PinkNoiseTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__LineSegment, _p_csl__LineSegmentTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__SoundCue, _p_csl__SoundCueTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Biquad, _p_csl__BiquadTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Model, 0, 0, 0},  {&_swigt__p_csl__Stereoverb, _p_csl__StereoverbTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Impulse, _p_csl__ImpulseTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__WhiteNoise, _p_csl__WhiteNoiseTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__FanOut, _p_csl__FanOutTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__BufferStream, _p_csl__BufferStreamTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__RingBuffer, _p_csl__RingBufferTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__TriangularWindow, _p_csl__TriangularWindowTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__RectangularWindow, _p_csl__RectangularWindowTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__HannWindow, _p_csl__HannWindowTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__WelchWindow, _p_csl__WelchWindowTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__BlackmanWindow, _p_csl__BlackmanWindowTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Sine, _p_csl__SineTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__InOut, _p_csl__InOutTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__AddOp, _p_csl__AddOpTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__IFFT, _p_csl__IFFTTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__FFT, _p_csl__FFTTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__AR, _p_csl__ARTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__ADSR, _p_csl__ADSRTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__SumOfSines, _p_csl__SumOfSinesTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__MIDIIn, _p_csl__MIDIInTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__Triangle, _p_csl__TriangleTo_p_csl__Model, 0, 0},  {&_swigt__p_csl__FileIO, _p_csl__FileIOTo_p_csl__Model, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Moog[] = {  {&_swigt__p_csl__Moog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__MulOp[] = {  {&_swigt__p_csl__MulOp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Noise[] = {  {&_swigt__p_csl__WhiteNoise, _p_csl__WhiteNoiseTo_p_csl__Noise, 0, 0},  {&_swigt__p_csl__Noise, 0, 0, 0},  {&_swigt__p_csl__PinkNoise, _p_csl__PinkNoiseTo_p_csl__Noise, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Notch[] = {  {&_swigt__p_csl__Notch, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__NtoMPanner[] = {  {&_swigt__p_csl__NtoMPanner, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Observer[] = {  {&_swigt__p_csl__Observer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Oscillator[] = {  {&_swigt__p_csl__Square, _p_csl__SquareTo_p_csl__Oscillator, 0, 0},  {&_swigt__p_csl__Abst_SoundFile, _p_csl__Abst_SoundFileTo_p_csl__Oscillator, 0, 0},  {&_swigt__p_csl__Sine, _p_csl__SineTo_p_csl__Oscillator, 0, 0},  {&_swigt__p_csl__Impulse, _p_csl__ImpulseTo_p_csl__Oscillator, 0, 0},  {&_swigt__p_csl__Sawtooth, _p_csl__SawtoothTo_p_csl__Oscillator, 0, 0},  {&_swigt__p_csl__SumOfSines, _p_csl__SumOfSinesTo_p_csl__Oscillator, 0, 0},  {&_swigt__p_csl__Oscillator, 0, 0, 0},  {&_swigt__p_csl__FSine, _p_csl__FSineTo_p_csl__Oscillator, 0, 0},  {&_swigt__p_csl__WavetableOscillator, _p_csl__WavetableOscillatorTo_p_csl__Oscillator, 0, 0},  {&_swigt__p_csl__CompOrCacheOscillator, _p_csl__CompOrCacheOscillatorTo_p_csl__Oscillator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__OutOfRangeError[] = {  {&_swigt__p_csl__OutOfRangeError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Panner[] = {  {&_swigt__p_csl__Panner, 0, 0, 0},  {&_swigt__p_csl__NtoMPanner, _p_csl__NtoMPannerTo_p_csl__Panner, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Partial[] = {  {&_swigt__p_csl__Partial, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__PartialDescriptionMode[] = {  {&_swigt__p_csl__PartialDescriptionMode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Phased[] = {  {&_swigt__p_csl__Square, _p_csl__SquareTo_p_csl__Phased, 0, 0},  {&_swigt__p_csl__Abst_SoundFile, _p_csl__Abst_SoundFileTo_p_csl__Phased, 0, 0},  {&_swigt__p_csl__Sine, _p_csl__SineTo_p_csl__Phased, 0, 0},  {&_swigt__p_csl__Impulse, _p_csl__ImpulseTo_p_csl__Phased, 0, 0},  {&_swigt__p_csl__Sawtooth, _p_csl__SawtoothTo_p_csl__Phased, 0, 0},  {&_swigt__p_csl__SumOfSines, _p_csl__SumOfSinesTo_p_csl__Phased, 0, 0},  {&_swigt__p_csl__KarplusString, _p_csl__KarplusStringTo_p_csl__Phased, 0, 0},  {&_swigt__p_csl__Phased, 0, 0, 0},  {&_swigt__p_csl__FSine, _p_csl__FSineTo_p_csl__Phased, 0, 0},  {&_swigt__p_csl__Oscillator, _p_csl__OscillatorTo_p_csl__Phased, 0, 0},  {&_swigt__p_csl__WavetableOscillator, _p_csl__WavetableOscillatorTo_p_csl__Phased, 0, 0},  {&_swigt__p_csl__CompOrCacheOscillator, _p_csl__CompOrCacheOscillatorTo_p_csl__Phased, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__PinkNoise[] = {  {&_swigt__p_csl__PinkNoise, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__PointMode[] = {  {&_swigt__p_csl__PointMode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Port[] = {  {&_swigt__p_csl__Port, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__ProcessingError[] = {  {&_swigt__p_csl__ProcessingError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__RandEnvelope[] = {  {&_swigt__p_csl__RandEnvelope, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__RectangularWindow[] = {  {&_swigt__p_csl__RectangularWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__RingBuffer[] = {  {&_swigt__p_csl__RingBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__RingBufferTap[] = {  {&_swigt__p_csl__RingBufferTap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__RunTimeError[] = {  {&_swigt__p_csl__RunTimeError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__SHARCInstrument[] = {  {&_swigt__p_csl__SHARCInstrument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__SHARCLibrary[] = {  {&_swigt__p_csl__SHARCLibrary, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__SHARCSpectrum[] = {  {&_swigt__p_csl__SHARCSpectrum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Sawtooth[] = {  {&_swigt__p_csl__Sawtooth, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Scalable[] = {  {&_swigt__p_csl__Freeverb, _p_csl__FreeverbTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Mixer, _p_csl__MixerTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__SumOfSines, _p_csl__SumOfSinesTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Noise, _p_csl__NoiseTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Sawtooth, _p_csl__SawtoothTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Formant, _p_csl__FormantTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Oscillator, _p_csl__OscillatorTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__PinkNoise, _p_csl__PinkNoiseTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__WavetableOscillator, _p_csl__WavetableOscillatorTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__CompOrCacheOscillator, _p_csl__CompOrCacheOscillatorTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__KarplusString, _p_csl__KarplusStringTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Scalable, 0, 0, 0},  {&_swigt__p_csl__FSine, _p_csl__FSineTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Allpass, _p_csl__AllpassTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__RandEnvelope, _p_csl__RandEnvelopeTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Envelope, _p_csl__EnvelopeTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__ADSR, _p_csl__ADSRTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Filter, _p_csl__FilterTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Square, _p_csl__SquareTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__WhiteNoise, _p_csl__WhiteNoiseTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Biquad, _p_csl__BiquadTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Butter, _p_csl__ButterTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Impulse, _p_csl__ImpulseTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Sine, _p_csl__SineTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__AR, _p_csl__ARTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Abst_SoundFile, _p_csl__Abst_SoundFileTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Triangle, _p_csl__TriangleTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Notch, _p_csl__NotchTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__RingBufferTap, _p_csl__RingBufferTapTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Panner, _p_csl__PannerTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__NtoMPanner, _p_csl__NtoMPannerTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__Moog, _p_csl__MoogTo_p_csl__Scalable, 0, 0},  {&_swigt__p_csl__RingBuffer, _p_csl__RingBufferTo_p_csl__Scalable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__SeekPosition[] = {  {&_swigt__p_csl__SeekPosition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Seekable[] = {  {&_swigt__p_csl__RingBufferTap, _p_csl__RingBufferTapTo_p_csl__Seekable, 0, 0},  {&_swigt__p_csl__Abst_SoundFile, _p_csl__Abst_SoundFileTo_p_csl__Seekable, 0, 0},  {&_swigt__p_csl__Seekable, 0, 0, 0},  {&_swigt__p_csl__BufferStream, _p_csl__BufferStreamTo_p_csl__Seekable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Sine[] = {  {&_swigt__p_csl__Sine, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__SndFileInstrument0[] = {  {&_swigt__p_csl__SndFileInstrument0, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__SoundCue[] = {  {&_swigt__p_csl__SoundCue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__SoundFileBuffer[] = {  {&_swigt__p_csl__SoundFileBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__SoundFileFormat[] = {  {&_swigt__p_csl__SoundFileFormat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__SoundFileMetadata[] = {  {&_swigt__p_csl__SoundFileMetadata, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__SoundFileMode[] = {  {&_swigt__p_csl__SoundFileMode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Splitter[] = {  {&_swigt__p_csl__Splitter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Square[] = {  {&_swigt__p_csl__Square, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__StaticVariable[] = {  {&_swigt__p_csl__StaticVariable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Status[] = {  {&_swigt__p_csl__Status, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__StereoWidth[] = {  {&_swigt__p_csl__StereoWidth, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Stereoverb[] = {  {&_swigt__p_csl__Stereoverb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__StringInstrument[] = {  {&_swigt__p_csl__StringInstrument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__SumOfSines[] = {  {&_swigt__p_csl__SumOfSines, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__TimingError[] = {  {&_swigt__p_csl__TimingError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Triangle[] = {  {&_swigt__p_csl__Triangle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__TriangularWindow[] = {  {&_swigt__p_csl__TriangularWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__UnitGenerator[] = {  {&_swigt__p_csl__RandEnvelope, _p_csl__RandEnvelopeTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Envelope, _p_csl__EnvelopeTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__StaticVariable, _p_csl__StaticVariableTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__DynamicVariable, _p_csl__DynamicVariableTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Sawtooth, _p_csl__SawtoothTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__BinaryOp, _p_csl__BinaryOpTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Moog, _p_csl__MoogTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__FanOut, _p_csl__FanOutTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Filter, _p_csl__FilterTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__RingBufferTap, _p_csl__RingBufferTapTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Noise, _p_csl__NoiseTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__MulOp, _p_csl__MulOpTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__BlackmanWindow, _p_csl__BlackmanWindowTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__WelchWindow, _p_csl__WelchWindowTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__HannWindow, _p_csl__HannWindowTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__RectangularWindow, _p_csl__RectangularWindowTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__TriangularWindow, _p_csl__TriangularWindowTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__AR, _p_csl__ARTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__FSine, _p_csl__FSineTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__SumOfSines, _p_csl__SumOfSinesTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Abst_SoundFile, _p_csl__Abst_SoundFileTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Splitter, _p_csl__SplitterTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__FFT, _p_csl__FFTTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Effect, _p_csl__EffectTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__UnitGenerator, 0, 0, 0},  {&_swigt__p_csl__Convolver, _p_csl__ConvolverTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__RingBuffer, _p_csl__RingBufferTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__AddOp, _p_csl__AddOpTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Allpass, _p_csl__AllpassTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__HammingWindow, _p_csl__HammingWindowTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__BlackmanHarrisWindow, _p_csl__BlackmanHarrisWindowTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Window, _p_csl__WindowTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__CompOrCacheOscillator, _p_csl__CompOrCacheOscillatorTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__WavetableOscillator, _p_csl__WavetableOscillatorTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Oscillator, _p_csl__OscillatorTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Panner, _p_csl__PannerTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__NtoMPanner, _p_csl__NtoMPannerTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__SndFileInstrument0, _p_csl__SndFileInstrument0To_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Butter, _p_csl__ButterTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Formant, _p_csl__FormantTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__InOut, _p_csl__InOutTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Instrument, _p_csl__InstrumentTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__AdditiveInstrument, _p_csl__AdditiveInstrumentTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__VAdditiveInstrument, _p_csl__VAdditiveInstrumentTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__FMInstrument, _p_csl__FMInstrumentTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__FancyFMInstrument, _p_csl__FancyFMInstrumentTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__StringInstrument, _p_csl__StringInstrumentTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__StereoWidth, _p_csl__StereoWidthTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__BufferStream, _p_csl__BufferStreamTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__WhiteNoise, _p_csl__WhiteNoiseTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__BlockResizer, _p_csl__BlockResizerTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Joiner, _p_csl__JoinerTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__KarplusString, _p_csl__KarplusStringTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Triangle, _p_csl__TriangleTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__DelayLine, _p_csl__DelayLineTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Impulse, _p_csl__ImpulseTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__FMBell, _p_csl__FMBellTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__SoundCue, _p_csl__SoundCueTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Notch, _p_csl__NotchTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__ADSR, _p_csl__ADSRTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Stereoverb, _p_csl__StereoverbTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__LineSegment, _p_csl__LineSegmentTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Sine, _p_csl__SineTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Biquad, _p_csl__BiquadTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Freeverb, _p_csl__FreeverbTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__FIR, _p_csl__FIRTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Mixer, _p_csl__MixerTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__PinkNoise, _p_csl__PinkNoiseTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__Square, _p_csl__SquareTo_p_csl__UnitGenerator, 0, 0},  {&_swigt__p_csl__IFFT, _p_csl__IFFTTo_p_csl__UnitGenerator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__VAdditiveInstrument[] = {  {&_swigt__p_csl__VAdditiveInstrument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__VOperator[] = {  {&_swigt__p_csl__VOperator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__ValueError[] = {  {&_swigt__p_csl__DomainError, _p_csl__DomainErrorTo_p_csl__ValueError, 0, 0},  {&_swigt__p_csl__ProcessingError, _p_csl__ProcessingErrorTo_p_csl__ValueError, 0, 0},  {&_swigt__p_csl__ValueError, 0, 0, 0},  {&_swigt__p_csl__OutOfRangeError, _p_csl__OutOfRangeErrorTo_p_csl__ValueError, 0, 0},  {&_swigt__p_csl__IOError, _p_csl__IOErrorTo_p_csl__ValueError, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__WavetableOscillator[] = {  {&_swigt__p_csl__Abst_SoundFile, _p_csl__Abst_SoundFileTo_p_csl__WavetableOscillator, 0, 0},  {&_swigt__p_csl__SumOfSines, _p_csl__SumOfSinesTo_p_csl__WavetableOscillator, 0, 0},  {&_swigt__p_csl__WavetableOscillator, 0, 0, 0},  {&_swigt__p_csl__CompOrCacheOscillator, _p_csl__CompOrCacheOscillatorTo_p_csl__WavetableOscillator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__WelchWindow[] = {  {&_swigt__p_csl__WelchWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__WhiteNoise[] = {  {&_swigt__p_csl__WhiteNoise, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Window[] = {  {&_swigt__p_csl__RectangularWindow, _p_csl__RectangularWindowTo_p_csl__Window, 0, 0},  {&_swigt__p_csl__TriangularWindow, _p_csl__TriangularWindowTo_p_csl__Window, 0, 0},  {&_swigt__p_csl__HannWindow, _p_csl__HannWindowTo_p_csl__Window, 0, 0},  {&_swigt__p_csl__BlackmanWindow, _p_csl__BlackmanWindowTo_p_csl__Window, 0, 0},  {&_swigt__p_csl__WelchWindow, _p_csl__WelchWindowTo_p_csl__Window, 0, 0},  {&_swigt__p_csl__Window, 0, 0, 0},  {&_swigt__p_csl__HammingWindow, _p_csl__HammingWindowTo_p_csl__Window, 0, 0},  {&_swigt__p_csl__BlackmanHarrisWindow, _p_csl__BlackmanHarrisWindowTo_p_csl__Window, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__Writeable[] = {  {&_swigt__p_csl__RingBuffer, _p_csl__RingBufferTo_p_csl__Writeable, 0, 0},  {&_swigt__p_csl__Abst_SoundFile, _p_csl__Abst_SoundFileTo_p_csl__Writeable, 0, 0},  {&_swigt__p_csl__Writeable, 0, 0, 0},  {&_swigt__p_csl__BufferStream, _p_csl__BufferStreamTo_p_csl__Writeable, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csl__testStruct[] = {  {&_swigt__p_csl__testStruct, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void__p_void[] = {  {&_swigt__p_f_p_void__p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_void__void[] = {  {&_swigt__p_f_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_void__void[] = {  {&_swigt__p_f_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__ArrayT_juce__MidiMessage_t[] = {  {&_swigt__p_juce__ArrayT_juce__MidiMessage_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__AudioIODevice[] = {  {&_swigt__p_juce__AudioIODevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__AudioIODeviceCallback[] = {  {&_swigt__p_juce__AudioIODeviceCallback, 0, 0, 0},  {&_swigt__p_csl__JUCEIO, _p_csl__JUCEIOTo_p_juce__AudioIODeviceCallback, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__CriticalSection[] = {  {&_swigt__p_juce__CriticalSection, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__MidiBuffer[] = {  {&_swigt__p_juce__MidiBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__MidiDeviceInfo[] = {  {&_swigt__p_juce__MidiDeviceInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__MidiFile[] = {  {&_swigt__p_juce__MidiFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__MidiInput[] = {  {&_swigt__p_juce__MidiInput, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__MidiKeyboardState[] = {  {&_swigt__p_juce__MidiKeyboardState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__MidiMessage[] = {  {&_swigt__p_juce__MidiMessage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__MidiMessageSequence[] = {  {&_swigt__p_juce__MidiMessageSequence, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__MidiOutput[] = {  {&_swigt__p_juce__MidiOutput, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__ReferenceCountedObject[] = {  {&_swigt__p_juce__ReferenceCountedObject, 0, 0, 0},  {&_swigt__p_csl__MidiDeviceListEntry, _p_csl__MidiDeviceListEntryTo_p_juce__ReferenceCountedObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_juce__SingleThreadedReferenceCountedObject[] = {  {&_swigt__p_juce__SingleThreadedReferenceCountedObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_csl__Partial[] = {  {&_swigt__p_p_csl__Partial, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_csl__SHARCInstrument[] = {  {&_swigt__p_p_csl__SHARCInstrument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_csl__SHARCSpectrum[] = {  {&_swigt__p_p_csl__SHARCSpectrum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_float[] = {  {&_swigt__p_p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_void[] = {  {&_swigt__p_p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__exception[] = {  {&_swigt__p_csl__DomainError, _p_csl__DomainErrorTo_p_std__exception, 0, 0},  {&_swigt__p_std__exception, 0, 0, 0},  {&_swigt__p_csl__CException, _p_csl__CExceptionTo_p_std__exception, 0, 0},  {&_swigt__p_csl__TimingError, _p_csl__TimingErrorTo_p_std__exception, 0, 0},  {&_swigt__p_csl__ProcessingError, _p_csl__ProcessingErrorTo_p_std__exception, 0, 0},  {&_swigt__p_csl__MemoryError, _p_csl__MemoryErrorTo_p_std__exception, 0, 0},  {&_swigt__p_csl__ValueError, _p_csl__ValueErrorTo_p_std__exception, 0, 0},  {&_swigt__p_csl__OutOfRangeError, _p_csl__OutOfRangeErrorTo_p_std__exception, 0, 0},  {&_swigt__p_csl__IOError, _p_csl__IOErrorTo_p_std__exception, 0, 0},  {&_swigt__p_csl__RunTimeError, _p_csl__RunTimeErrorTo_p_std__exception, 0, 0},  {&_swigt__p_csl__DBError, _p_csl__DBErrorTo_p_std__exception, 0, 0},  {&_swigt__p_csl__LogicError, _p_csl__LogicErrorTo_p_std__exception, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_float_csl__LineSegment_p_std__lessT_float_t_std__allocatorT_std__pairT_float_const_csl__LineSegment_p_t_t_t[] = {  {&_swigt__p_std__mapT_float_csl__LineSegment_p_std__lessT_float_t_std__allocatorT_std__pairT_float_const_csl__LineSegment_p_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_int_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_t_t_t[] = {  {&_swigt__p_std__mapT_int_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_std__string_csl__Instrument_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__Instrument_p_t_t_t[] = {  {&_swigt__p_std__mapT_std__string_csl__Instrument_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__Instrument_p_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_std__string_csl__UnitGenerator_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__UnitGenerator_p_t_t_t[] = {  {&_swigt__p_std__mapT_std__string_csl__UnitGenerator_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__UnitGenerator_p_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t[] = {  {&_swigt__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_unsigned_int_csl__Port_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__Port_p_t_t_t[] = {  {&_swigt__p_std__mapT_unsigned_int_csl__Port_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__Port_p_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_unsigned_int_csl__UnitGenerator_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__UnitGenerator_p_t_t_t[] = {  {&_swigt__p_std__mapT_unsigned_int_csl__UnitGenerator_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__UnitGenerator_p_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_unsigned_int_float_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_float_t_t_t[] = {  {&_swigt__p_std__mapT_unsigned_int_float_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_float_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__unique_ptrT_juce__MidiInput_t[] = {  {&_swigt__p_std__unique_ptrT_juce__MidiInput_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__unique_ptrT_juce__MidiOutput_t[] = {  {&_swigt__p_std__unique_ptrT_juce__MidiOutput_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_csl__Accessor_p_std__allocatorT_csl__Accessor_p_t_t[] = {  {&_swigt__p_std__vectorT_csl__Accessor_p_std__allocatorT_csl__Accessor_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_csl__Buffer_p_std__allocatorT_csl__Buffer_p_t_t[] = {  {&_swigt__p_std__vectorT_csl__Buffer_p_std__allocatorT_csl__Buffer_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_csl__CPoint_p_std__allocatorT_csl__CPoint_p_t_t[] = {  {&_swigt__p_std__vectorT_csl__CPoint_p_std__allocatorT_csl__CPoint_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_csl__IODevice_p_std__allocatorT_csl__IODevice_p_t_t[] = {  {&_swigt__p_std__vectorT_csl__IODevice_p_std__allocatorT_csl__IODevice_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t[] = {  {&_swigt__p_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_csl__Observer_p_std__allocatorT_csl__Observer_p_t_t[] = {  {&_swigt__p_std__vectorT_csl__Observer_p_std__allocatorT_csl__Observer_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_csl__UnitGenerator_p_std__allocatorT_csl__UnitGenerator_p_t_t[] = {  {&_swigt__p_std__vectorT_csl__UnitGenerator_p_std__allocatorT_csl__UnitGenerator_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_float_std__allocatorT_float_t_t[] = {  {&_swigt__p_std__vectorT_float_std__allocatorT_float_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_int_std__allocatorT_int_t_t[] = {  {&_swigt__p_std__vectorT_int_std__allocatorT_int_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t[] = {  {&_swigt__p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_timeval[] = {  {&_swigt__p_timeval, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_va_list[] = {  {&_swigt__p_va_list, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_ArrayT_double_t,
  _swigc__p_ArrayT_int_t,
  _swigc__p_BigInteger,
  _swigc__p_CSL_FFTType,
  _swigc__p_FILE,
  _swigc__p_Ptr,
  _swigc__p_String,
  _swigc__p_StringArray,
  _swigc__p_a_2__float,
  _swigc__p_char,
  _swigc__p_csl__ADSR,
  _swigc__p_csl__AR,
  _swigc__p_csl__Abst_SoundFile,
  _swigc__p_csl__Accessor,
  _swigc__p_csl__AddOp,
  _swigc__p_csl__AdditiveInstrument,
  _swigc__p_csl__Allpass,
  _swigc__p_csl__BinaryOp,
  _swigc__p_csl__Biquad,
  _swigc__p_csl__BlackmanHarrisWindow,
  _swigc__p_csl__BlackmanWindow,
  _swigc__p_csl__BlockResizer,
  _swigc__p_csl__Buffer,
  _swigc__p_csl__BufferCMap,
  _swigc__p_csl__BufferContentType,
  _swigc__p_csl__BufferCopyPolicy,
  _swigc__p_csl__BufferStream,
  _swigc__p_csl__Butter,
  _swigc__p_csl__CException,
  _swigc__p_csl__CGestalt,
  _swigc__p_csl__CMIDIMessage,
  _swigc__p_csl__CMIDIMessageType,
  _swigc__p_csl__CPoint,
  _swigc__p_csl__CThread,
  _swigc__p_csl__CVariable,
  _swigc__p_csl__Cacheable,
  _swigc__p_csl__Comb,
  _swigc__p_csl__CompOrCacheOscillator,
  _swigc__p_csl__Controllable,
  _swigc__p_csl__Convolver,
  _swigc__p_csl__DBError,
  _swigc__p_csl__DelayLine,
  _swigc__p_csl__DomainError,
  _swigc__p_csl__DynamicVariable,
  _swigc__p_csl__Effect,
  _swigc__p_csl__Envelope,
  _swigc__p_csl__FAllpass,
  _swigc__p_csl__FFT,
  _swigc__p_csl__FIR,
  _swigc__p_csl__FMBell,
  _swigc__p_csl__FMInstrument,
  _swigc__p_csl__FSine,
  _swigc__p_csl__FanOut,
  _swigc__p_csl__FancyFMInstrument,
  _swigc__p_csl__FileIO,
  _swigc__p_csl__Filter,
  _swigc__p_csl__FilterSpecification,
  _swigc__p_csl__FilterType,
  _swigc__p_csl__Formant,
  _swigc__p_csl__Freeverb,
  _swigc__p_csl__FrequencyAmount,
  _swigc__p_csl__HammingWindow,
  _swigc__p_csl__HannWindow,
  _swigc__p_csl__IFFT,
  _swigc__p_csl__IO,
  _swigc__p_csl__IODevice,
  _swigc__p_csl__IOError,
  _swigc__p_csl__IO_Status,
  _swigc__p_csl__Impulse,
  _swigc__p_csl__InOut,
  _swigc__p_csl__InOutFlags,
  _swigc__p_csl__Instrument,
  _swigc__p_csl__Interleaver,
  _swigc__p_csl__InterpolationPolicy,
  _swigc__p_csl__JUCEIO,
  _swigc__p_csl__Joiner,
  _swigc__p_csl__KarplusString,
  _swigc__p_csl__LineMode,
  _swigc__p_csl__LineSegment,
  _swigc__p_csl__LogLevel,
  _swigc__p_csl__LogicError,
  _swigc__p_csl__MIDIIO,
  _swigc__p_csl__MIDIIn,
  _swigc__p_csl__MIDIOut,
  _swigc__p_csl__MIDIPlayer,
  _swigc__p_csl__MemoryError,
  _swigc__p_csl__MidiDeviceListEntry,
  _swigc__p_csl__Mixer,
  _swigc__p_csl__Model,
  _swigc__p_csl__Moog,
  _swigc__p_csl__MulOp,
  _swigc__p_csl__Noise,
  _swigc__p_csl__Notch,
  _swigc__p_csl__NtoMPanner,
  _swigc__p_csl__Observer,
  _swigc__p_csl__Oscillator,
  _swigc__p_csl__OutOfRangeError,
  _swigc__p_csl__Panner,
  _swigc__p_csl__Partial,
  _swigc__p_csl__PartialDescriptionMode,
  _swigc__p_csl__Phased,
  _swigc__p_csl__PinkNoise,
  _swigc__p_csl__PointMode,
  _swigc__p_csl__Port,
  _swigc__p_csl__ProcessingError,
  _swigc__p_csl__RandEnvelope,
  _swigc__p_csl__RectangularWindow,
  _swigc__p_csl__RingBuffer,
  _swigc__p_csl__RingBufferTap,
  _swigc__p_csl__RunTimeError,
  _swigc__p_csl__SHARCInstrument,
  _swigc__p_csl__SHARCLibrary,
  _swigc__p_csl__SHARCSpectrum,
  _swigc__p_csl__Sawtooth,
  _swigc__p_csl__Scalable,
  _swigc__p_csl__SeekPosition,
  _swigc__p_csl__Seekable,
  _swigc__p_csl__Sine,
  _swigc__p_csl__SndFileInstrument0,
  _swigc__p_csl__SoundCue,
  _swigc__p_csl__SoundFileBuffer,
  _swigc__p_csl__SoundFileFormat,
  _swigc__p_csl__SoundFileMetadata,
  _swigc__p_csl__SoundFileMode,
  _swigc__p_csl__Splitter,
  _swigc__p_csl__Square,
  _swigc__p_csl__StaticVariable,
  _swigc__p_csl__Status,
  _swigc__p_csl__StereoWidth,
  _swigc__p_csl__Stereoverb,
  _swigc__p_csl__StringInstrument,
  _swigc__p_csl__SumOfSines,
  _swigc__p_csl__TimingError,
  _swigc__p_csl__Triangle,
  _swigc__p_csl__TriangularWindow,
  _swigc__p_csl__UnitGenerator,
  _swigc__p_csl__VAdditiveInstrument,
  _swigc__p_csl__VOperator,
  _swigc__p_csl__ValueError,
  _swigc__p_csl__WavetableOscillator,
  _swigc__p_csl__WelchWindow,
  _swigc__p_csl__WhiteNoise,
  _swigc__p_csl__Window,
  _swigc__p_csl__Writeable,
  _swigc__p_csl__testStruct,
  _swigc__p_double,
  _swigc__p_f_p_void__p_void,
  _swigc__p_f_p_void__void,
  _swigc__p_f_void__void,
  _swigc__p_float,
  _swigc__p_juce__ArrayT_juce__MidiMessage_t,
  _swigc__p_juce__AudioIODevice,
  _swigc__p_juce__AudioIODeviceCallback,
  _swigc__p_juce__CriticalSection,
  _swigc__p_juce__MidiBuffer,
  _swigc__p_juce__MidiDeviceInfo,
  _swigc__p_juce__MidiFile,
  _swigc__p_juce__MidiInput,
  _swigc__p_juce__MidiKeyboardState,
  _swigc__p_juce__MidiMessage,
  _swigc__p_juce__MidiMessageSequence,
  _swigc__p_juce__MidiOutput,
  _swigc__p_juce__ReferenceCountedObject,
  _swigc__p_juce__SingleThreadedReferenceCountedObject,
  _swigc__p_long,
  _swigc__p_p_char,
  _swigc__p_p_csl__Partial,
  _swigc__p_p_csl__SHARCInstrument,
  _swigc__p_p_csl__SHARCSpectrum,
  _swigc__p_p_float,
  _swigc__p_p_void,
  _swigc__p_short,
  _swigc__p_std__exception,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__mapT_float_csl__LineSegment_p_std__lessT_float_t_std__allocatorT_std__pairT_float_const_csl__LineSegment_p_t_t_t,
  _swigc__p_std__mapT_int_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_std__lessT_int_t_std__allocatorT_std__pairT_int_const_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t_t_t_t,
  _swigc__p_std__mapT_std__string_csl__Instrument_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__Instrument_p_t_t_t,
  _swigc__p_std__mapT_std__string_csl__UnitGenerator_p_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_csl__UnitGenerator_p_t_t_t,
  _swigc__p_std__mapT_std__string_std__string_std__lessT_std__string_t_std__allocatorT_std__pairT_std__string_const_std__string_t_t_t,
  _swigc__p_std__mapT_unsigned_int_csl__Port_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__Port_p_t_t_t,
  _swigc__p_std__mapT_unsigned_int_csl__UnitGenerator_p_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_csl__UnitGenerator_p_t_t_t,
  _swigc__p_std__mapT_unsigned_int_float_std__lessT_unsigned_int_t_std__allocatorT_std__pairT_unsigned_int_const_float_t_t_t,
  _swigc__p_std__unique_ptrT_juce__MidiInput_t,
  _swigc__p_std__unique_ptrT_juce__MidiOutput_t,
  _swigc__p_std__vectorT_csl__Accessor_p_std__allocatorT_csl__Accessor_p_t_t,
  _swigc__p_std__vectorT_csl__Buffer_p_std__allocatorT_csl__Buffer_p_t_t,
  _swigc__p_std__vectorT_csl__CPoint_p_std__allocatorT_csl__CPoint_p_t_t,
  _swigc__p_std__vectorT_csl__IODevice_p_std__allocatorT_csl__IODevice_p_t_t,
  _swigc__p_std__vectorT_csl__Instrument_p_std__allocatorT_csl__Instrument_p_t_t,
  _swigc__p_std__vectorT_csl__Observer_p_std__allocatorT_csl__Observer_p_t_t,
  _swigc__p_std__vectorT_csl__UnitGenerator_p_std__allocatorT_csl__UnitGenerator_p_t_t,
  _swigc__p_std__vectorT_float_std__allocatorT_float_t_t,
  _swigc__p_std__vectorT_int_std__allocatorT_int_t_t,
  _swigc__p_std__vectorT_unsigned_int_std__allocatorT_unsigned_int_t_t,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_timeval,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_va_list,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        "swigvarlink",                      /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        0,                                  /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
        0,                                  /* tp_del */
        0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
        0,                                  /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
        0,                                  /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
        0,                                  /* tp_print */
#endif
#ifdef COUNT_ALLOCS
        0,                                  /* tp_allocs */
        0,                                  /* tp_frees */
        0,                                  /* tp_maxalloc */
        0,                                  /* tp_prev */
        0                                   /* tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, const char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        memcpy(gv->name, name, size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *globals = 0;
    if (!globals) {
      globals = SWIG_newvarlink();
    }
    return globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              memcpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              memcpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
  /* -----------------------------------------------------------------------------
   * Method creation and docstring support functions
   * ----------------------------------------------------------------------------- */
  
  /* -----------------------------------------------------------------------------
   * Function to find the method definition with the correct docstring for the
   * proxy module as opposed to the low-level API
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name) {
    /* Find the function in the modified method table */
    size_t offset = 0;
    int found = 0;
    while (SwigMethods_proxydocs[offset].ml_meth != NULL) {
      if (strcmp(SwigMethods_proxydocs[offset].ml_name, name) == 0) {
        found = 1;
        break;
      }
      offset++;
    }
    /* Use the copy with the modified docstring if available */
    return found ? &SwigMethods_proxydocs[offset] : NULL;
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyInstanceMethod_New() used in Python 3
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
#if PY_VERSION_HEX >= 0x03000000
    return PyInstanceMethod_New(func);
#else
    return PyMethod_New(func, NULL, NULL);
#endif
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyStaticMethod_New()
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
    return PyStaticMethod_New(func);
  }
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md, *globals;
  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    SwigPyObject_own,
    SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  PyTypeObject *swigpyobject;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* Metaclass is used to implement static member variables */
  metatype = SwigPyObjectType();
  assert(metatype);
#endif
  
  (void)globals;
  
  /* Create singletons now to avoid potential deadlocks with multi-threaded usage after module initialization */
  SWIG_This();
  SWIG_Python_TypeCache();
  SwigPyPacked_type();
#ifndef SWIGPYTHON_BUILTIN
  SwigPyObject_type();
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule(SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  swigpyobject = SwigPyObject_TypeOnce();
  
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = swigpyobject;
  } else if (swigpyobject->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  SWIG_Python_SetConstant(d, "CSL_mFrameRate",SWIG_From_int(static_cast< int >(44100)));
  SWIG_Python_SetConstant(d, "CSL_mBlockSize",SWIG_From_int(static_cast< int >(1024)));
  SWIG_Python_SetConstant(d, "CSL_mMaxBufferFrames",SWIG_From_int(static_cast< int >(8192)));
  SWIG_Python_SetConstant(d, "CSL_mSndFileFrames",SWIG_From_int(static_cast< int >(20480000)));
  SWIG_Python_SetConstant(d, "CSL_mMaxSndFileFrames",SWIG_From_int(static_cast< int >(64000000)));
  SWIG_Python_SetConstant(d, "CSL_mVerbosity",SWIG_From_int(static_cast< int >(3)));
  SWIG_Python_SetConstant(d, "CSL_mLoggingPeriod",SWIG_From_int(static_cast< int >(10)));
  SWIG_Python_SetConstant(d, "CSL_LOG_PREFIX",SWIG_FromCharPtr("-- "));
  SWIG_Python_SetConstant(d, "CSL_mOutPort",SWIG_From_int(static_cast< int >(57123)));
  SWIG_Python_SetConstant(d, "CSL_mOSCPort",SWIG_FromCharPtr("54321"));
  SWIG_Python_SetConstant(d, "CSL_WORD_LEN",SWIG_From_int(static_cast< int >(32)));
  SWIG_Python_SetConstant(d, "CSL_DEF_LEN",SWIG_From_int(static_cast< int >(128)));
  SWIG_Python_SetConstant(d, "CSL_NAME_LEN",SWIG_From_int(static_cast< int >(256)));
  SWIG_Python_SetConstant(d, "CSL_LINE_LEN",SWIG_From_int(static_cast< int >(512)));
  SWIG_Python_SetConstant(d, "CSL_STR_LEN",SWIG_From_int(static_cast< int >(1024)));
  SWIG_Python_SetConstant(d, "SAMPS_TO_WRITE",SWIG_From_int(static_cast< int >((44100*30))));
  SWIG_Python_SetConstant(d, "OUT_SFILE_NAME",SWIG_FromCharPtr("XX_csl.aiff"));
  SWIG_Python_SetConstant(d, "CSL_DATA_DIR",SWIG_FromCharPtr("~/Code/CSL6/Data/"));
  SWIG_Python_SetConstant(d, "CSL_INIT_FILE",SWIG_FromCharPtr("~/.cslrc"));
  SWIG_Python_SetConstant(d, "DEFAULT_MIDI_IN",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "DEFAULT_MIDI_OUT",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "CSL_SCALE",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "CSL_OFFSET",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "CSL_INPUT",SWIG_From_int(static_cast< int >(3)));
  SWIG_Python_SetConstant(d, "CSL_OPERAND",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "CSL_OPERAND2",SWIG_From_int(static_cast< int >(5)));
  SWIG_Python_SetConstant(d, "CSL_FREQUENCY",SWIG_From_int(static_cast< int >(6)));
  SWIG_Python_SetConstant(d, "CSL_POSITION",SWIG_From_int(static_cast< int >(7)));
  SWIG_Python_SetConstant(d, "CSL_POSITIONX",SWIG_From_int(static_cast< int >(7)));
  SWIG_Python_SetConstant(d, "CSL_POSITIONY",SWIG_From_int(static_cast< int >(8)));
  SWIG_Python_SetConstant(d, "CSL_POSITIONZ",SWIG_From_int(static_cast< int >(9)));
  SWIG_Python_SetConstant(d, "CSL_FILTER_FREQUENCY",SWIG_From_int(static_cast< int >(10)));
  SWIG_Python_SetConstant(d, "CSL_FILTER_AMOUNT",SWIG_From_int(static_cast< int >(11)));
  SWIG_Python_SetConstant(d, "CSL_RATE",SWIG_From_int(static_cast< int >(12)));
  SWIG_Python_SetConstant(d, "TRUE",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "FALSE",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "CSL_PI",SWIG_From_double(static_cast< double >(3.1415926535897933)));
  SWIG_Python_SetConstant(d, "CSL_TWOPI",SWIG_From_double(static_cast< double >(6.2831853071795865)));
  SWIG_Python_SetConstant(d, "CSL_PIHALF",SWIG_From_double(static_cast< double >(1.570796326795)));
  SWIG_Python_SetConstant(d, "CSL_SQRT_TWO",SWIG_From_double(static_cast< double >(1.414213562)));
  SWIG_Python_SetConstant(d, "CSL_SPEED_OF_SOUND",SWIG_From_double(static_cast< double >(330.0)));
  SWIG_Python_SetConstant(d, "CSL_EXP_PER_DB",SWIG_From_double(static_cast< double >(0.11512925464970228)));
  SWIG_Python_SetConstant(d, "CSL_SAMPS_PER_METER",SWIG_From_double(static_cast< double >(133.63636363636364)));
  SWIG_Python_SetConstant(d, "CSL_DEGS_PER_RAD",SWIG_From_double(static_cast< double >(57.295779513082321)));
  SWIG_Python_SetConstant(d, "M_PI",SWIG_From_double(static_cast< double >(3.14159265358979323846)));
  SWIG_Python_SetConstant(d, "kOk",SWIG_From_int(static_cast< int >(csl::kOk)));
  SWIG_Python_SetConstant(d, "kFound",SWIG_From_int(static_cast< int >(csl::kFound)));
  SWIG_Python_SetConstant(d, "kNotFound",SWIG_From_int(static_cast< int >(csl::kNotFound)));
  SWIG_Python_SetConstant(d, "kEmpty",SWIG_From_int(static_cast< int >(csl::kEmpty)));
  SWIG_Python_SetConstant(d, "kErr",SWIG_From_int(static_cast< int >(csl::kErr)));
  SWIG_Python_SetConstant(d, "kLogInfo",SWIG_From_int(static_cast< int >(csl::kLogInfo)));
  SWIG_Python_SetConstant(d, "kLogWarning",SWIG_From_int(static_cast< int >(csl::kLogWarning)));
  SWIG_Python_SetConstant(d, "kLogError",SWIG_From_int(static_cast< int >(csl::kLogError)));
  SWIG_Python_SetConstant(d, "kLogFatal",SWIG_From_int(static_cast< int >(csl::kLogFatal)));
  SWIG_Python_SetConstant(d, "kSamples",SWIG_From_int(static_cast< int >(csl::kSamples)));
  SWIG_Python_SetConstant(d, "kSpectra",SWIG_From_int(static_cast< int >(csl::kSpectra)));
  SWIG_Python_SetConstant(d, "kLPCCoeff",SWIG_From_int(static_cast< int >(csl::kLPCCoeff)));
  SWIG_Python_SetConstant(d, "kIRData",SWIG_From_int(static_cast< int >(csl::kIRData)));
  SWIG_Python_SetConstant(d, "kWavelet",SWIG_From_int(static_cast< int >(csl::kWavelet)));
  SWIG_Python_SetConstant(d, "kGeometry",SWIG_From_int(static_cast< int >(csl::kGeometry)));
  SWIG_Python_SetConstant(d, "kUnknown",SWIG_From_int(static_cast< int >(csl::kUnknown)));
  SWIG_Python_SetConstant(d, "kCopy",SWIG_From_int(static_cast< int >(csl::kCopy)));
  SWIG_Python_SetConstant(d, "kExpand",SWIG_From_int(static_cast< int >(csl::kExpand)));
  SWIG_Python_SetConstant(d, "kIgnore",SWIG_From_int(static_cast< int >(csl::kIgnore)));
  SWIG_Python_SetConstant(d, "kPositionStart",SWIG_From_int(static_cast< int >(csl::kPositionStart)));
  SWIG_Python_SetConstant(d, "kPositionCurrent",SWIG_From_int(static_cast< int >(csl::kPositionCurrent)));
  SWIG_Python_SetConstant(d, "kPositionEnd",SWIG_From_int(static_cast< int >(csl::kPositionEnd)));
  SWIG_Python_SetConstant(d, "kIONew",SWIG_From_int(static_cast< int >(csl::kIONew)));
  SWIG_Python_SetConstant(d, "kIOInit",SWIG_From_int(static_cast< int >(csl::kIOInit)));
  SWIG_Python_SetConstant(d, "kIOOpen",SWIG_From_int(static_cast< int >(csl::kIOOpen)));
  SWIG_Python_SetConstant(d, "kIORunning",SWIG_From_int(static_cast< int >(csl::kIORunning)));
  SWIG_Python_SetConstant(d, "kIOClosed",SWIG_From_int(static_cast< int >(csl::kIOClosed)));
  SWIG_Python_SetConstant(d, "kIOExit",SWIG_From_int(static_cast< int >(csl::kIOExit)));
  SWIG_Python_SetConstant(d, "kOpPlus",SWIG_From_int(static_cast< int >(csl::kOpPlus)));
  SWIG_Python_SetConstant(d, "kOpTimes",SWIG_From_int(static_cast< int >(csl::kOpTimes)));
  SWIG_Python_SetConstant(d, "kOpMinus",SWIG_From_int(static_cast< int >(csl::kOpMinus)));
  SWIG_Python_SetConstant(d, "kOpDivided",SWIG_From_int(static_cast< int >(csl::kOpDivided)));
  SWIG_Python_SetConstant(d, "kOpNegated",SWIG_From_int(static_cast< int >(csl::kOpNegated)));
  SWIG_Python_SetConstant(d, "kCartesian",SWIG_From_int(static_cast< int >(csl::kCartesian)));
  SWIG_Python_SetConstant(d, "kPolar",SWIG_From_int(static_cast< int >(csl::kPolar)));
  SWIG_Python_SetConstant(d, "kLine",SWIG_From_int(static_cast< int >(csl::kLine)));
  SWIG_Python_SetConstant(d, "kExpon",SWIG_From_int(static_cast< int >(csl::kExpon)));
  SWIG_Python_SetConstant(d, "DEFAULT_WAVETABLE_SIZE",SWIG_From_int(static_cast< int >(8192)));
  SWIG_Python_SetConstant(d, "kTruncate",SWIG_From_int(static_cast< int >(csl::kTruncate)));
  SWIG_Python_SetConstant(d, "kLinear",SWIG_From_int(static_cast< int >(csl::kLinear)));
  SWIG_Python_SetConstant(d, "kCubic",SWIG_From_int(static_cast< int >(csl::kCubic)));
  SWIG_Python_SetConstant(d, "kAllPass",SWIG_From_int(static_cast< int >(csl::kAllPass)));
  SWIG_Python_SetConstant(d, "kFrequency",SWIG_From_int(static_cast< int >(csl::kFrequency)));
  SWIG_Python_SetConstant(d, "kFreqAmp",SWIG_From_int(static_cast< int >(csl::kFreqAmp)));
  SWIG_Python_SetConstant(d, "kFreqAmpPhase",SWIG_From_int(static_cast< int >(csl::kFreqAmpPhase)));
  SWIG_Python_SetConstant(d, "PINK_MAX_RANDOM_ROWS",SWIG_From_int(static_cast< int >((30))));
  SWIG_Python_SetConstant(d, "PINK_RANDOM_BITS",SWIG_From_int(static_cast< int >((24))));
  SWIG_Python_SetConstant(d, "MAX_PARTIALS",SWIG_From_int(static_cast< int >(128)));
  SWIG_Python_SetConstant(d, "MAX_SPECTRA",SWIG_From_int(static_cast< int >(64)));
  SWIG_Python_SetConstant(d, "MAX_INSTRUMENTS",SWIG_From_int(static_cast< int >(40)));
  globals = SWIG_globals();
  if (!globals) {
    PyErr_SetString(PyExc_TypeError, "Failure to create SWIG globals.");
#if PY_VERSION_HEX >= 0x03000000
    return NULL;
#else
    return;
#endif
  }
  PyDict_SetItemString(md, "cvar", globals);
  Py_DECREF(globals);
  SWIG_addvarlink(globals, "SHARCLibrary_sSHARCLib", Swig_var_SHARCLibrary_sSHARCLib_get, Swig_var_SHARCLibrary_sSHARCLib_set);
  SWIG_Python_SetConstant(d, "kNoProc",SWIG_From_int(static_cast< int >(csl::kNoProc)));
  SWIG_Python_SetConstant(d, "kLR2M",SWIG_From_int(static_cast< int >(csl::kLR2M)));
  SWIG_Python_SetConstant(d, "kL2M",SWIG_From_int(static_cast< int >(csl::kL2M)));
  SWIG_Python_SetConstant(d, "kR2M",SWIG_From_int(static_cast< int >(csl::kR2M)));
  SWIG_Python_SetConstant(d, "kN2M",SWIG_From_int(static_cast< int >(csl::kN2M)));
  SWIG_Python_SetConstant(d, "FILTER_MAX_COEFFICIENTS",SWIG_From_int(static_cast< int >((16))));
  SWIG_Python_SetConstant(d, "BW_LOW_PASS",SWIG_From_int(static_cast< int >(csl::BW_LOW_PASS)));
  SWIG_Python_SetConstant(d, "BW_HIGH_PASS",SWIG_From_int(static_cast< int >(csl::BW_HIGH_PASS)));
  SWIG_Python_SetConstant(d, "BW_BAND_PASS",SWIG_From_int(static_cast< int >(csl::BW_BAND_PASS)));
  SWIG_Python_SetConstant(d, "BW_BAND_STOP",SWIG_From_int(static_cast< int >(csl::BW_BAND_STOP)));
  SWIG_Python_SetConstant(d, "BW_LOW_SHELF",SWIG_From_int(static_cast< int >(csl::BW_LOW_SHELF)));
  SWIG_Python_SetConstant(d, "BW_HIGH_SHELF",SWIG_From_int(static_cast< int >(csl::BW_HIGH_SHELF)));
  SWIG_Python_SetConstant(d, "PEAKING",SWIG_From_int(static_cast< int >(csl::PEAKING)));
  SWIG_Python_SetConstant(d, "ALL_PASS",SWIG_From_int(static_cast< int >(csl::ALL_PASS)));
  SWIG_Python_SetConstant(d, "MAX_OUTPUTS",SWIG_From_int(static_cast< int >(16)));
  SWIG_addvarlink(globals, "projectName", Swig_var_projectName_get, Swig_var_projectName_set);
  SWIG_addvarlink(globals, "companyName", Swig_var_companyName_get, Swig_var_companyName_set);
  SWIG_addvarlink(globals, "versionString", Swig_var_versionString_get, Swig_var_versionString_set);
  SWIG_addvarlink(globals, "versionNumber", Swig_var_versionNumber_get, Swig_var_versionNumber_set);
  SWIG_Python_SetConstant(d, "kSoundFileClosed",SWIG_From_int(static_cast< int >(csl::kSoundFileClosed)));
  SWIG_Python_SetConstant(d, "kSoundFileRead",SWIG_From_int(static_cast< int >(csl::kSoundFileRead)));
  SWIG_Python_SetConstant(d, "kSoundFileWrite",SWIG_From_int(static_cast< int >(csl::kSoundFileWrite)));
  SWIG_Python_SetConstant(d, "kSoundFileReadWrite",SWIG_From_int(static_cast< int >(csl::kSoundFileReadWrite)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatAIFF",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatAIFF)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatWAV",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatWAV)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatMP3",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatMP3)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatMP4",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatMP4)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatAAC",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatAAC)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatFLAC",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatFLAC)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatCAF",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatCAF)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatOGG",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatOGG)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatSHN",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatSHN)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatSND",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatSND)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatEBICSF",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatEBICSF)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatRaw",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatRaw)));
  SWIG_Python_SetConstant(d, "kSoundFileFormatOther",SWIG_From_int(static_cast< int >(csl::kSoundFileFormatOther)));
  SWIG_Python_SetConstant(d, "kNone",SWIG_From_int(static_cast< int >(csl::kNone)));
  SWIG_Python_SetConstant(d, "kNoteOff",SWIG_From_int(static_cast< int >(csl::kNoteOff)));
  SWIG_Python_SetConstant(d, "kNoteOn",SWIG_From_int(static_cast< int >(csl::kNoteOn)));
  SWIG_Python_SetConstant(d, "kPolyTouch",SWIG_From_int(static_cast< int >(csl::kPolyTouch)));
  SWIG_Python_SetConstant(d, "kControlChange",SWIG_From_int(static_cast< int >(csl::kControlChange)));
  SWIG_Python_SetConstant(d, "kProgramChange",SWIG_From_int(static_cast< int >(csl::kProgramChange)));
  SWIG_Python_SetConstant(d, "kAftertouch",SWIG_From_int(static_cast< int >(csl::kAftertouch)));
  SWIG_Python_SetConstant(d, "kPitchWheel",SWIG_From_int(static_cast< int >(csl::kPitchWheel)));
  SWIG_Python_SetConstant(d, "kSysEX",SWIG_From_int(static_cast< int >(csl::kSysEX)));
  SWIG_Python_SetConstant(d, "CSL_INT_TYPE",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "CSL_FLOAT_TYPE",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "CSL_STRING_TYPE",SWIG_From_int(static_cast< int >(3)));
  SWIG_Python_SetConstant(d, "set_duration_f",SWIG_From_int(static_cast< int >(100)));
  SWIG_Python_SetConstant(d, "set_amplitude_f",SWIG_From_int(static_cast< int >(101)));
  SWIG_Python_SetConstant(d, "set_frequency_f",SWIG_From_int(static_cast< int >(102)));
  SWIG_Python_SetConstant(d, "set_position_f",SWIG_From_int(static_cast< int >(103)));
  SWIG_Python_SetConstant(d, "set_position_p",SWIG_From_int(static_cast< int >(104)));
  SWIG_Python_SetConstant(d, "set_attack_f",SWIG_From_int(static_cast< int >(115)));
  SWIG_Python_SetConstant(d, "set_decay_f",SWIG_From_int(static_cast< int >(116)));
  SWIG_Python_SetConstant(d, "set_sustain_f",SWIG_From_int(static_cast< int >(117)));
  SWIG_Python_SetConstant(d, "set_release_f",SWIG_From_int(static_cast< int >(118)));
  SWIG_Python_SetConstant(d, "set_iattack_f",SWIG_From_int(static_cast< int >(120)));
  SWIG_Python_SetConstant(d, "set_idecay_f",SWIG_From_int(static_cast< int >(121)));
  SWIG_Python_SetConstant(d, "set_isustain_f",SWIG_From_int(static_cast< int >(122)));
  SWIG_Python_SetConstant(d, "set_irelease_f",SWIG_From_int(static_cast< int >(123)));
  SWIG_Python_SetConstant(d, "set_index_f",SWIG_From_int(static_cast< int >(134)));
  SWIG_Python_SetConstant(d, "set_c_freq_f",SWIG_From_int(static_cast< int >(135)));
  SWIG_Python_SetConstant(d, "set_m_freq_f",SWIG_From_int(static_cast< int >(136)));
  SWIG_Python_SetConstant(d, "set_cm_freq_r",SWIG_From_int(static_cast< int >(137)));
  SWIG_Python_SetConstant(d, "set_gliss_r",SWIG_From_int(static_cast< int >(138)));
  SWIG_Python_SetConstant(d, "set_vib_depth_f",SWIG_From_int(static_cast< int >(140)));
  SWIG_Python_SetConstant(d, "set_chiff_amt_f",SWIG_From_int(static_cast< int >(141)));
  SWIG_Python_SetConstant(d, "set_chiff_time_f",SWIG_From_int(static_cast< int >(142)));
  SWIG_Python_SetConstant(d, "set_rate_f",SWIG_From_int(static_cast< int >(155)));
  SWIG_Python_SetConstant(d, "set_file_f",SWIG_From_int(static_cast< int >(156)));
  SWIG_Python_SetConstant(d, "set_start_f",SWIG_From_int(static_cast< int >(157)));
  SWIG_Python_SetConstant(d, "set_stop_f",SWIG_From_int(static_cast< int >(158)));
  SWIG_Python_SetConstant(d, "set_partial_f",SWIG_From_int(static_cast< int >(160)));
  SWIG_Python_SetConstant(d, "set_partials_f",SWIG_From_int(static_cast< int >(161)));
  SWIG_Python_SetConstant(d, "wet_dry_f",SWIG_From_int(static_cast< int >(170)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

